<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classsc__ast__matchers_1_1InstanceArgumentMatcher" kind="class" language="C++" prot="public">
    <compoundname>sc_ast_matchers::InstanceArgumentMatcher</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MatchFinder::MatchCallback</basecompoundref>
    <includes refid="InstanceMatcher_8h" local="no">InstanceMatcher.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsc__ast__matchers_1_1InstanceArgumentMatcher_1a34ca285e3063551112d52b67fc262b4c" prot="private" static="no" mutable="no">
        <type>clang::StringLiteral *</type>
        <definition>clang::StringLiteral* sc_ast_matchers::InstanceArgumentMatcher::instance_literal_</definition>
        <argsstring></argsstring>
        <name>instance_literal_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/InstanceMatcher.h" line="24" column="24" bodyfile="src/matchers/InstanceMatcher.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsc__ast__matchers_1_1InstanceArgumentMatcher_1aea915272e091ef3641872ffde455d45a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>clang::StringLiteral *</type>
        <definition>clang::StringLiteral* sc_ast_matchers::InstanceArgumentMatcher::getInstanceLiteral</definition>
        <argsstring>() const</argsstring>
        <name>getInstanceLiteral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/InstanceMatcher.h" line="27" column="24" bodyfile="src/matchers/InstanceMatcher.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsc__ast__matchers_1_1InstanceArgumentMatcher_1ad0650ca47aff7cb5080c07be9e360dea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sc_ast_matchers::InstanceArgumentMatcher::registerMatchers</definition>
        <argsstring>(MatchFinder &amp;finder)</argsstring>
        <name>registerMatchers</name>
        <param>
          <type>MatchFinder &amp;</type>
          <declname>finder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/InstanceMatcher.h" line="29" column="8" bodyfile="src/matchers/InstanceMatcher.h" bodystart="29" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classsc__ast__matchers_1_1InstanceArgumentMatcher_1ac71b040788b00885636ff00dc942363b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void sc_ast_matchers::InstanceArgumentMatcher::run</definition>
        <argsstring>(const MatchFinder::MatchResult &amp;result)</argsstring>
        <name>run</name>
        <param>
          <type>const MatchFinder::MatchResult &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/InstanceMatcher.h" line="44" column="16" bodyfile="src/matchers/InstanceMatcher.h" bodystart="44" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classsc__ast__matchers_1_1InstanceArgumentMatcher_1afcfa4e13e199e65351b6a743375112cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sc_ast_matchers::InstanceArgumentMatcher::dump</definition>
        <argsstring>()</argsstring>
        <name>dump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/InstanceMatcher.h" line="57" column="8" bodyfile="src/matchers/InstanceMatcher.h" bodystart="57" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>MatchFinder::MatchCallback</label>
      </node>
      <node id="1">
        <label>sc_ast_matchers::InstanceArgumentMatcher</label>
        <link refid="classsc__ast__matchers_1_1InstanceArgumentMatcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>MatchFinder::MatchCallback</label>
      </node>
      <node id="1">
        <label>sc_ast_matchers::InstanceArgumentMatcher</label>
        <link refid="classsc__ast__matchers_1_1InstanceArgumentMatcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/matchers/InstanceMatcher.h" line="22" column="1" bodyfile="src/matchers/InstanceMatcher.h" bodystart="22" bodyend="62"/>
    <listofallmembers>
      <member refid="classsc__ast__matchers_1_1InstanceArgumentMatcher_1afcfa4e13e199e65351b6a743375112cd" prot="public" virt="non-virtual"><scope>sc_ast_matchers::InstanceArgumentMatcher</scope><name>dump</name></member>
      <member refid="classsc__ast__matchers_1_1InstanceArgumentMatcher_1aea915272e091ef3641872ffde455d45a" prot="public" virt="non-virtual"><scope>sc_ast_matchers::InstanceArgumentMatcher</scope><name>getInstanceLiteral</name></member>
      <member refid="classsc__ast__matchers_1_1InstanceArgumentMatcher_1a34ca285e3063551112d52b67fc262b4c" prot="private" virt="non-virtual"><scope>sc_ast_matchers::InstanceArgumentMatcher</scope><name>instance_literal_</name></member>
      <member refid="classsc__ast__matchers_1_1InstanceArgumentMatcher_1ad0650ca47aff7cb5080c07be9e360dea" prot="public" virt="non-virtual"><scope>sc_ast_matchers::InstanceArgumentMatcher</scope><name>registerMatchers</name></member>
      <member refid="classsc__ast__matchers_1_1InstanceArgumentMatcher_1ac71b040788b00885636ff00dc942363b" prot="public" virt="virtual"><scope>sc_ast_matchers::InstanceArgumentMatcher</scope><name>run</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
