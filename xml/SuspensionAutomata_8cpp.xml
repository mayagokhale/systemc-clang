<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="SuspensionAutomata_8cpp" kind="file" language="C++">
    <compoundname>SuspensionAutomata.cpp</compoundname>
    <includes refid="SuspensionAutomata_8h" local="yes">SuspensionAutomata.h</includes>
    <includes refid="FindArgument_8h" local="yes">FindArgument.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="16">
        <label>clang/Basic/SourceManager.h</label>
      </node>
      <node id="8">
        <label>clang/Analysis/CFG.h</label>
      </node>
      <node id="10">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="6">
        <label>clang/AST/ParentMap.h</label>
      </node>
      <node id="9">
        <label>clang/Analysis/CFGStmtMap.h</label>
      </node>
      <node id="7">
        <label>clang/AST/PrettyPrinter.h</label>
      </node>
      <node id="20">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="18">
        <label>WaitContainer.h</label>
        <link refid="WaitContainer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>FindArgument.h</label>
        <link refid="FindArgument_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>clang/AST/Expr.h</label>
      </node>
      <node id="3">
        <label>Automata.h</label>
        <link refid="Automata_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="2">
        <label>SuspensionAutomata.h</label>
        <link refid="SuspensionAutomata_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>deque</label>
      </node>
      <node id="15">
        <label>Utility.h</label>
        <link refid="Utility_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>clang/AST/DeclCXX.h</label>
      </node>
      <node id="21">
        <label>algorithm</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>src/SCuitable/SuspensionAutomata.cpp</label>
        <link refid="SuspensionAutomata_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="SuspensionAutomata_8cpp_1aa6afbc1aa166921abdbfc5026b82e6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool is_found</definition>
        <argsstring>(Node n1, Node n2)</argsstring>
        <name>is_found</name>
        <param>
          <type><ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref></type>
          <declname>n1</declname>
        </param>
        <param>
          <type><ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref></type>
          <declname>n2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SCuitable/SuspensionAutomata.cpp" line="713" column="6" bodyfile="src/SCuitable/SuspensionAutomata.cpp" bodystart="713" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="SuspensionAutomata_8cpp_1ac484a884be6dbde73c1a5c0fc7b3fe80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename, typename &gt; class</type>
            <declname>Container</declname>
            <defname>Container</defname>
          </param>
          <param>
            <type>typename <ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref></type>
          </param>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool generic_isFound</definition>
        <argsstring>(Container&lt; Node, Allocator &gt; &amp;container, Node node)</argsstring>
        <name>generic_isFound</name>
        <param>
          <type>Container&lt; <ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref>, Allocator &gt; &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type><ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SCuitable/SuspensionAutomata.cpp" line="719" column="6" bodyfile="src/SCuitable/SuspensionAutomata.cpp" bodystart="719" bodyend="727"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SuspensionAutomata_8h" kindref="compound">SuspensionAutomata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FindArgument_8h" kindref="compound">FindArgument.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classsystemc__clang_1_1SusCFG_1a225702c64f53648159228f3bd9e94a8a" kindref="member">SusCFG::SusCFG</ref>(CFGBlock<sp/>*block)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_block(block),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parentCFGBlock(NULL),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parentSusCFGBlock(NULL),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isWaitBlock(false),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isParentBlock(false),</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isGPUFit(false)<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">SusCFG::~SusCFG()<sp/>{}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a5efdf503741c4b287448f388515a4e8d" kindref="member">SusCFG::addParentBlock</ref>(CFGBlock<sp/>*parentBlock)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a64f7852a9f61968fab89572d1ec1b269" kindref="member">_parentCFGBlock</ref><sp/>=<sp/>parentBlock;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a5efdf503741c4b287448f388515a4e8d" kindref="member">SusCFG::addParentBlock</ref>(<ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*parentBlock)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a107aa1307d8ef6b18dd22ab34183575a" kindref="member">_parentSusCFGBlock</ref><sp/>=<sp/>parentBlock;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">SusCFG::addPredBlocks</ref>(<ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*block)<sp/>{<sp/><ref refid="classsystemc__clang_1_1SusCFG_1a9643182c4775869b388162bec9a06125" kindref="member">_predBlocks</ref>.push_back(block);<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a89e88ace80fd920e9a3b15989b18b47a" kindref="member">SusCFG::addSuccBlocks</ref>(<ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*block)<sp/>{<sp/><ref refid="classsystemc__clang_1_1SusCFG_1afa744bc952a2909ae76d0668edf20cc5" kindref="member">_succBlocks</ref>.push_back(block);<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1ab698e8ed976903a367660b92bd15540d" kindref="member">SusCFG::addGPUFit</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1SusCFG_1ae51d413c93bdcf4dd7180a6409ff95bf" kindref="member">_isGPUFit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a869d7b42e192a9ba85218da99f67b78d" kindref="member">SusCFG::denyGPUFit</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1SusCFG_1ae51d413c93bdcf4dd7180a6409ff95bf" kindref="member">_isGPUFit</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1af72da676ff0fbef5507b3dfee9ee37ae" kindref="member">SusCFG::addChildBlockList</ref>(<ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*block)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a8c586ab9a968beca5ed4afcc2d1fd796" kindref="member">_childBlockList</ref>.push_back(block);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1af72da676ff0fbef5507b3dfee9ee37ae" kindref="member">SusCFG::addChildBlockList</ref>(vector&lt;SusCFG<sp/>*&gt;<sp/>blockList)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blockList.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a8c586ab9a968beca5ed4afcc2d1fd796" kindref="member">_childBlockList</ref>.push_back(blockList.at(i));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a92f11cfbf9299bed6677ef957e910cd0" kindref="member">SusCFG::setWaitBlock</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1SusCFG_1a45c3ae09d9153dfb09c907aba5907e19" kindref="member">_isWaitBlock</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a135ec6375d399f705a442e5e051d80ac" kindref="member">SusCFG::setParentBlock</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1SusCFG_1a8c0c8a42d56d68426ac177195ab39cc8" kindref="member">_isParentBlock</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1aef66008d2d7e51db211ea46302d5d226" kindref="member">SusCFG::setWaitStmt</ref>(Stmt<sp/>*stmt)<sp/>{<sp/><ref refid="classsystemc__clang_1_1SusCFG_1acc0768e947474bc4852c50ae4ec41d6b" kindref="member">_waitStmt</ref><sp/>=<sp/>stmt;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">vector&lt;SusCFG<sp/>*&gt;<sp/><ref refid="classsystemc__clang_1_1SusCFG_1a6aa20b36799667e001b7633a8790e43a" kindref="member">SusCFG::getChildBlockList</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a8c586ab9a968beca5ed4afcc2d1fd796" kindref="member">_childBlockList</ref>;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">vector&lt;SusCFG<sp/>*&gt;<sp/><ref refid="classsystemc__clang_1_1SusCFG_1a84e8585af04867b898f585ec34ce7c05" kindref="member">SusCFG::getPredBlocks</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a9643182c4775869b388162bec9a06125" kindref="member">_predBlocks</ref>;<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">vector&lt;SusCFG<sp/>*&gt;<sp/><ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">SusCFG::getSuccBlocks</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1afa744bc952a2909ae76d0668edf20cc5" kindref="member">_succBlocks</ref>;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a87b1bd459e23e5a90f714167047d9def" kindref="member">SusCFG::getBlockID</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a3682141568078686873931f366980623" kindref="member">_block</ref>-&gt;getBlockID();<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a196e62967d4a2820873c7833b037d836" kindref="member">SusCFG::isWaitBlock</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a45c3ae09d9153dfb09c907aba5907e19" kindref="member">_isWaitBlock</ref>;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1aa3949a664ee91427a318509c0bd718ec" kindref="member">SusCFG::isParentBlock</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a8c0c8a42d56d68426ac177195ab39cc8" kindref="member">_isParentBlock</ref>;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a37f2f99651a57efa46931a57bf813c2a" kindref="member">SusCFG::isGPUFit</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1ae51d413c93bdcf4dd7180a6409ff95bf" kindref="member">_isGPUFit</ref>;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1ac9b31dde5f5087e9c0d8c21fb6ef203c" kindref="member">SusCFG::getParentBlockID</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SusCFG_1a64f7852a9f61968fab89572d1ec1b269" kindref="member">_parentCFGBlock</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a64f7852a9f61968fab89572d1ec1b269" kindref="member">_parentCFGBlock</ref>-&gt;getBlockID();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">CFGBlock<sp/>*<ref refid="classsystemc__clang_1_1SusCFG_1a5896f7a1e1132bfea080ff478698f8c1" kindref="member">SusCFG::getBlock</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a3682141568078686873931f366980623" kindref="member">_block</ref>;<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">CFGBlock<sp/>*<ref refid="classsystemc__clang_1_1SusCFG_1a6566e476db1533a07d8743c2edc91626" kindref="member">SusCFG::getParentCFGBlock</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a64f7852a9f61968fab89572d1ec1b269" kindref="member">_parentCFGBlock</ref>;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*<ref refid="classsystemc__clang_1_1SusCFG_1a62f906a5658d0a1eea0c3af5900a60cf" kindref="member">SusCFG::getParentSusCFGBlock</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1a107aa1307d8ef6b18dd22ab34183575a" kindref="member">_parentSusCFGBlock</ref>;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">Stmt<sp/>*<ref refid="classsystemc__clang_1_1SusCFG_1a89a0f3c5d082345be8584dd591cf9036" kindref="member">SusCFG::getWaitStmt</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG_1acc0768e947474bc4852c50ae4ec41d6b" kindref="member">_waitStmt</ref>;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="classsystemc__clang_1_1State_1ad37dddd460756873361f938634f0b6a4" kindref="member">State::State</ref>(<ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*susCFG,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTimed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isDelta,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInitial,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEvent)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_susCFGBlock(susCFG),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isTimed(isTimed),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isDelta(isDelta),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isInitial(isInitial),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isEvent(isEvent)<sp/>{}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">State::~State()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1aa7e3da9b2f104c454fa113a2a43d6fb8" kindref="member">_susCFGBlock</ref>;<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1adcde585e5b1df5f64df6f0a194c901f7" kindref="member">State::isTimed</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a864e511f166adc2dcad06254f8a7974b" kindref="member">_isTimed</ref>;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a0ab7a0ef45c4b14ee93c4164643d7316" kindref="member">State::isDelta</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a8e768289fed0c75abb45ded3aff1338b" kindref="member">_isDelta</ref>;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a2ea429b1fcd285943367cfe8a3f65c1d" kindref="member">State::isEvent</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1aaa9a268d6bfd13a99e26004493e4c341" kindref="member">_isEvent</ref>;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a643dfd2a6ebe7f21bc5697433c6d11d0" kindref="member">State::isInitial</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a4b583ff3fff98b1491d594d88807704a" kindref="member">_isInitial</ref>;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a9062e8b2a0857e87be962fda738caa3a" kindref="member">State::setInitial</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1State_1a4b583ff3fff98b1491d594d88807704a" kindref="member">_isInitial</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1abecd2759cf4e2be06e3bf843d86730f0" kindref="member">State::setTimed</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1State_1a864e511f166adc2dcad06254f8a7974b" kindref="member">_isTimed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a060421965cdc1cec1205673a684f1619" kindref="member">State::setEvent</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1State_1aaa9a268d6bfd13a99e26004493e4c341" kindref="member">_isEvent</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a5bb9146ab23235ba40befc51df84dd9b" kindref="member">State::setDelta</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1State_1a8e768289fed0c75abb45ded3aff1338b" kindref="member">_isDelta</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1ae43c91cfc56d051351a28ea1987e0d8b" kindref="member">State::addEventName</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>eventName)<sp/>{<sp/><ref refid="classsystemc__clang_1_1State_1a1119f6704b5f0cbedc82150fbcda75ff" kindref="member">_eventName</ref><sp/>=<sp/>eventName;<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1afae55d45430056860b2e6b3ef244f9c2" kindref="member">State::addSimTime</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>simTime)<sp/>{<sp/><ref refid="classsystemc__clang_1_1State_1afd087313ff6180a75f89ff5c73afec7e" kindref="member">_timeInNS</ref><sp/>=<sp/>simTime;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a2bc5bfac607d8519452737899137b4c0" kindref="member">State::getEventName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1a1119f6704b5f0cbedc82150fbcda75ff" kindref="member">_eventName</ref>;<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1acf009bf9bd20107ee1220c4315a1222b" kindref="member">State::getSimTime</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1afd087313ff6180a75f89ff5c73afec7e" kindref="member">_timeInNS</ref>;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*<ref refid="classsystemc__clang_1_1State_1ac6751ed581aadfe736693c36b8bc763c" kindref="member">State::returnSusCFGBlock</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State_1aa7e3da9b2f104c454fa113a2a43d6fb8" kindref="member">_susCFGBlock</ref>;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="classsystemc__clang_1_1Transition_1a73b44b2338b11807f77b620a3e810f92" kindref="member">Transition::Transition</ref>()<sp/>:<sp/>_initialState(NULL),<sp/>_finalState(NULL)<sp/>{}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">Transition::~Transition()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1ac24073e2755cb4cb513903c0c895bb91" kindref="member">_initialState</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1ad6d5fa8218ddc6aad6a5b16bdb8154e9" kindref="member">_finalState</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1aab63ee606e7a5c6462e98e0cb54b880d" kindref="member">Transition::addInstanceId</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instanceId)<sp/>{<sp/><ref refid="classsystemc__clang_1_1Transition_1af7abe4ff5c0ede8c79638a7dff168491" kindref="member">_instanceId</ref><sp/>=<sp/>instanceId;<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1a7ca29100e3326ea10b3b06fb617aecde" kindref="member">Transition::addInitialState</ref>(<ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*state)<sp/>{<sp/><ref refid="classsystemc__clang_1_1Transition_1ac24073e2755cb4cb513903c0c895bb91" kindref="member">_initialState</ref><sp/>=<sp/>state;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1a225b6436893a66ac660d72e2726d81cb" kindref="member">Transition::addFinalState</ref>(<ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*state)<sp/>{<sp/><ref refid="classsystemc__clang_1_1Transition_1ad6d5fa8218ddc6aad6a5b16bdb8154e9" kindref="member">_finalState</ref><sp/>=<sp/>state;<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1aaa602753672b3b5a9a78f86ff0118884" kindref="member">Transition::addCodeBlocks</ref>(<ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*susCFG)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Transition_1a3144baa06f7eadb3d0242779761ef844" kindref="member">_codeBlockVector</ref>.push_back(susCFG);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1aaa602753672b3b5a9a78f86ff0118884" kindref="member">Transition::addCodeBlocks</ref>(vector&lt;SusCFG<sp/>*&gt;<sp/>susCFG)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>susCFG.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Transition_1a3144baa06f7eadb3d0242779761ef844" kindref="member">_codeBlockVector</ref>.push_back(susCFG.at(i));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1a4aabdd6a096c07ec76e252096c5c34e6" kindref="member">Transition::returnInstanceId</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1af7abe4ff5c0ede8c79638a7dff168491" kindref="member">_instanceId</ref>;<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*<ref refid="classsystemc__clang_1_1Transition_1a8304ac8c1ca0ab8675321f846c52f81f" kindref="member">Transition::returnInitialState</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1ac24073e2755cb4cb513903c0c895bb91" kindref="member">_initialState</ref>;<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*<ref refid="classsystemc__clang_1_1Transition_1a879dacac83edb57d5a46922bc9002e15" kindref="member">Transition::returnFinalState</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1ad6d5fa8218ddc6aad6a5b16bdb8154e9" kindref="member">_finalState</ref>;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">vector&lt;SusCFG<sp/>*&gt;<sp/><ref refid="classsystemc__clang_1_1Transition_1a5ba599440db041739564e02ca10936fb" kindref="member">Transition::returnCodeBlocks</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1a3144baa06f7eadb3d0242779761ef844" kindref="member">_codeBlockVector</ref>;<sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition_1aa60225347fcc010bb8a77630dd52add4" kindref="member">Transition::dump</ref>(raw_ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>#######<sp/>Transition<sp/>#######&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Initial<sp/>State<sp/>:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1Transition_1ac24073e2755cb4cb513903c0c895bb91" kindref="member">_initialState</ref>-&gt;<ref refid="classsystemc__clang_1_1State_1ac6751ed581aadfe736693c36b8bc763c" kindref="member">returnSusCFGBlock</ref>()-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a87b1bd459e23e5a90f714167047d9def" kindref="member">getBlockID</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Final<sp/>State<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1Transition_1ad6d5fa8218ddc6aad6a5b16bdb8154e9" kindref="member">_finalState</ref>-&gt;<ref refid="classsystemc__clang_1_1State_1ac6751ed581aadfe736693c36b8bc763c" kindref="member">returnSusCFGBlock</ref>()-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a87b1bd459e23e5a90f714167047d9def" kindref="member">getBlockID</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Transition<sp/>Blocks<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classsystemc__clang_1_1Transition_1a3144baa06f7eadb3d0242779761ef844" kindref="member">_codeBlockVector</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1Transition_1a3144baa06f7eadb3d0242779761ef844" kindref="member">_codeBlockVector</ref>.at(i)-&gt;getBlockID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a111035acf37a142a8b80d6c0294d3df7" kindref="member">SuspensionAutomata::SuspensionAutomata</ref>(vector&lt;WaitContainer<sp/>*&gt;<sp/>waitCalls,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CXXMethodDecl<sp/>*d,<sp/>ASTContext<sp/>*a,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_ostream<sp/>&amp;os)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_d(d),<sp/>_a(a),<sp/>_os(os)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i{0};<sp/>i<sp/>&lt;<sp/>waitCalls.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1WaitContainer" kindref="compound">WaitContainer</ref><sp/>*wc{waitCalls.at(i)};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>_waitCalls.push_back(wc-&gt;getASTNode());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">SuspensionAutomata::~SuspensionAutomata()<sp/>{}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a0f908649045abfaec56609f7980ac530" kindref="member">SuspensionAutomata::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFG::BuildOptions<sp/>&amp;b<sp/>=<sp/>CFG::BuildOptions();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref><sp/>=<sp/>CFG::buildCFG(cast&lt;Decl&gt;(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a0b6737f9e665f2a3fb34612c226646c4" kindref="member">_d</ref>),<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a0b6737f9e665f2a3fb34612c226646c4" kindref="member">_d</ref>-&gt;getBody(),<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a663f244694c191ba60886a1d7ff1d69e" kindref="member">_a</ref>,<sp/>b);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1af045e731c974b5b321f0c808d2fa5773" kindref="member">SuspensionAutomata::isWaitCall</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFGStmt<sp/>*cs)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>f<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>Stmt<sp/>*s<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Stmt<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cs-&gt;getStmt());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>CXXMemberCallExpr<sp/>*m<sp/>=<sp/>dyn_cast&lt;CXXMemberCallExpr&gt;(s);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a6ca89c18a35d5437eb9dc4f086d0dd59" kindref="member">_waitCalls</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>CallExpr<sp/>*ce{<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a6ca89c18a35d5437eb9dc4f086d0dd59" kindref="member">_waitCalls</ref>.at(i)};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>ce)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(EntryFunctionContainer::waitContainerListType::iterator<sp/>it<sp/>=</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_waitCalls.begin(),<sp/>eit<sp/>=<sp/>_waitCalls.end();<sp/>it<sp/>!=<sp/>eit;<sp/>++it)</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>WaitContainer<sp/>*w<sp/>=<sp/>(*it);</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(m<sp/>==<sp/>w-&gt;getASTNode())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="213"><highlight class="comment">Description<sp/>:<sp/>Locates<sp/>the<sp/>suspension<sp/>points<sp/>in<sp/>the<sp/>CFG<sp/>and</highlight></codeline>
<codeline lineno="214"><highlight class="comment">creates<sp/>new<sp/>CFG<sp/>blocks<sp/>that<sp/>isolates<sp/>the<sp/>suspension<sp/>statements<sp/>from<sp/>the<sp/>code.</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad40e6ca40061230817d49243b637be46" kindref="member">SuspensionAutomata::genSusCFG</ref>()<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>LangOptions<sp/>LO;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>LO.CPlusPlus<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>PrintingPolicy<sp/>Policy(LO);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>vector&lt;Optional&lt;CFGStmt&gt;&gt;<sp/>pre;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>vector&lt;unsigned<sp/>int&gt;<sp/>waitBlockIDVector;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>vector&lt;const<sp/>CFGBlock<sp/>*&gt;<sp/>CFGBlockVector;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;CFGBlock<sp/>*,<sp/>SusCFG<sp/>*&gt;<sp/>susCFGBlockMapType;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair&lt;CFGBlock<sp/>*,<sp/>SusCFG<sp/>*&gt;<sp/>susCFGBlockPairType;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>susCFGBlockMapType<sp/>susCFGBlockMap;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFirstCFGBlockID<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CFG::iterator<sp/>it<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref>-&gt;end()<sp/>-<sp/>1,<sp/>eit<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref>-&gt;begin();<sp/>it<sp/>!=<sp/>eit;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--it)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFGBlock<sp/>*b<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*currBlock;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b))<sp/>==</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.end())<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currBlock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.insert(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockPairType(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b),<sp/>currBlock));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMapType::iterator<sp/>susCFGBlockFound<sp/>=</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currBlock<sp/>=<sp/>susCFGBlockFound-&gt;second;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundWait<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;CFGBlock<sp/>*&gt;<sp/>splitBlocksVector;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/>_os<sp/>&lt;&lt;<sp/>&quot;==========================================================\n&quot;;</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/>_os<sp/>&lt;&lt;<sp/>&quot;Dump<sp/>CFG<sp/>Block\n&quot;;</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/>b-&gt;dump(_cfg,<sp/>LO,<sp/>false);</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevCFGBlockID;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CFGBlock::const_iterator<sp/>bit<sp/>=<sp/>b-&gt;begin(),<sp/>bite<sp/>=<sp/>b-&gt;end();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>!=<sp/>bite;<sp/>bit++)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Optional&lt;CFGStmt&gt;<sp/>cs<sp/>=<sp/>bit-&gt;getAs&lt;CFGStmt&gt;())<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFGStmt<sp/>*s<sp/>=<sp/>(CFGStmt<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)&amp;cs;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1af045e731c974b5b321f0c808d2fa5773" kindref="member">isWaitCall</ref>(s))<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundWait<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFGBlock<sp/>*newSplitBlock<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref>-&gt;createBlock();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pre.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSplitBlock-&gt;appendStmt(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Stmt<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pre.at(i)-&gt;getStmt()),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref>-&gt;getBumpVectorContext());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFGBlock<sp/>*waitBlock<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref>-&gt;createBlock();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitBlock-&gt;appendStmt(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Stmt<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cs-&gt;getStmt()),</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref>-&gt;getBumpVectorContext());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitBlock-&gt;setLabel(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Stmt<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cs-&gt;getStmt()));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlocksVector.push_back(newSplitBlock);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlocksVector.push_back(waitBlock);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre.clear();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre.push_back(cs);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pre.clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundWait)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a135ec6375d399f705a442e5e051d80ac" kindref="member">setParentBlock</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CFGBlock<sp/>*prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*prevBlock<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>splitBlocksVector.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFGBlock<sp/>*current<sp/>=<sp/>splitBlocksVector.at(i);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*splitBlock<sp/>=</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(splitBlocksVector.at(i)));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1af72da676ff0fbef5507b3dfee9ee37ae" kindref="member">addChildBlockList</ref>(splitBlock);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;getLabel())<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a92f11cfbf9299bed6677ef957e910cd0" kindref="member">setWaitBlock</ref>();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1aef66008d2d7e51db211ea46302d5d226" kindref="member">setWaitStmt</ref>(current-&gt;getLabel());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pre.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>trailing<sp/>statements<sp/>to<sp/>post<sp/>block<sp/>wait<sp/>stmt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFGBlock<sp/>*newCFGBlock<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref>-&gt;createBlock();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>j{0};<sp/>j<sp/>&lt;<sp/>pre.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newCFGBlock-&gt;appendStmt(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Stmt<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pre.at(j)-&gt;getStmt()),</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1acaa091c3f5a5da97317e72edf6a9c3b9" kindref="member">_cfg</ref>-&gt;getBumpVectorContext());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SusCFG<sp/>*<sp/>postSusCFGBlock<sp/>=<sp/>new<sp/>SusCFG(newCFGBlock);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>susCFGBlockMap.insert(susCFGBlockPairType(newCFGBlock,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>postSusCFGBlock));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlocksVector.push_back(newCFGBlock);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre.clear();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CFGBlock::const_pred_iterator<sp/>pit<sp/>=<sp/>b-&gt;pred_begin(),</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pite<sp/>=<sp/>b-&gt;pred_end();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pit<sp/>!=<sp/>pite;<sp/>pit++)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFGBlock<sp/>*pred<sp/>=<sp/>*pit;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pred))<sp/>==</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.end())<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*tmpBlock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pred));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.insert(</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockPairType(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pred),<sp/>tmpBlock));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">addPredBlocks</ref>(tmpBlock);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMapType::iterator<sp/>susCFGBlockFound<sp/>=</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pred));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">addPredBlocks</ref>(susCFGBlockFound-&gt;second);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a5efdf503741c4b287448f388515a4e8d" kindref="member">addParentBlock</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a5efdf503741c4b287448f388515a4e8d" kindref="member">addParentBlock</ref>(currBlock);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevBlock<sp/>=<sp/>splitBlock;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>splitBlocksVector.size()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>splitBlocksVector.at(i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGBlockMap.find(prev)<sp/>==<sp/>susCFGBlockMap.end())<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*tmpBlock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prev));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.insert(</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockPairType(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prev),<sp/>tmpBlock));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">addPredBlocks</ref>(tmpBlock);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMapType::iterator<sp/>susCFGBlockFound<sp/>=</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prev));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">addPredBlocks</ref>(susCFGBlockFound-&gt;second);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89e88ace80fd920e9a3b15989b18b47a" kindref="member">addSuccBlocks</ref>(splitBlock);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CFGBlock::const_succ_iterator<sp/>sit<sp/>=<sp/>b-&gt;succ_begin(),</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>site<sp/>=<sp/>b-&gt;succ_end();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sit<sp/>!=<sp/>site;<sp/>sit++)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFGBlock<sp/>*succ<sp/>=<sp/>*sit;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(succ))<sp/>==</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.end())<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*tmpBlock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(succ));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.insert(</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockPairType(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(succ),<sp/>tmpBlock));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89e88ace80fd920e9a3b15989b18b47a" kindref="member">addSuccBlocks</ref>(tmpBlock);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMapType::iterator<sp/>susCFGBlockFound<sp/>=</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(succ));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89e88ace80fd920e9a3b15989b18b47a" kindref="member">addSuccBlocks</ref>(susCFGBlockFound-&gt;second);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>splitBlocksVector.at(i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prev))<sp/>==</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.end())<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*tmpBlock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prev));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.insert(</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockPairType(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prev),<sp/>tmpBlock));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">addPredBlocks</ref>(tmpBlock);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMapType::iterator<sp/>susCFGBlockFound<sp/>=</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(prev));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">addPredBlocks</ref>(susCFGBlockFound-&gt;second);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89e88ace80fd920e9a3b15989b18b47a" kindref="member">addSuccBlocks</ref>(splitBlock);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevBlock<sp/>=<sp/>splitBlock;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a27275596fa8f06631c49ee5bb7b6451b" kindref="member">_susCFGVector</ref>.push_back(splitBlock);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CFGBlock::const_pred_iterator<sp/>pit<sp/>=<sp/>b-&gt;pred_begin(),</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pite<sp/>=<sp/>b-&gt;pred_end();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pit<sp/>!=<sp/>pite;<sp/>pit++)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFGBlock<sp/>*predBlock<sp/>=<sp/>*pit;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predBlock)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(predBlock))<sp/>==</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.end())<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*tmpBlock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(predBlock));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.insert(susCFGBlockPairType(</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(predBlock),<sp/>tmpBlock));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">addPredBlocks</ref>(tmpBlock);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMapType::iterator<sp/>predSusCFGBlockFound<sp/>=</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(predBlock));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a38f88af422e1427ddb0aeb4e6b5a1d04" kindref="member">addPredBlocks</ref>(predSusCFGBlockFound-&gt;second);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(CFGBlock::const_succ_iterator<sp/>sit<sp/>=<sp/>b-&gt;succ_begin(),</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>site<sp/>=<sp/>b-&gt;succ_end();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sit<sp/>!=<sp/>site;<sp/>sit++)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFGBlock<sp/>*succBlock<sp/>=<sp/>*sit;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*tmpBlock{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(succBlock)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(succBlock))<sp/>==</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.end())<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpBlock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(succBlock));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.insert(susCFGBlockPairType(</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(succBlock),<sp/>tmpBlock));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89e88ace80fd920e9a3b15989b18b47a" kindref="member">addSuccBlocks</ref>(tmpBlock);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMapType::iterator<sp/>succSusCFGBlockFound<sp/>=</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGBlockMap.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CFGBlock<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(succBlock));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89e88ace80fd920e9a3b15989b18b47a" kindref="member">addSuccBlocks</ref>(succSusCFGBlockFound-&gt;second);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a27275596fa8f06631c49ee5bb7b6451b" kindref="member">_susCFGVector</ref>.push_back(currBlock);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a50086b57479af946fbd1d21a7ef18093" kindref="member">SuspensionAutomata::addRemainingBlocks</ref>(</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*initialState,<sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>&amp;transitionBlocks)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>duplicate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2dc51afaae37f0bc70d7bd9555a14cd0" kindref="member">_stateCommonCodeBlockMap</ref>.find(initialState)<sp/>!=</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2dc51afaae37f0bc70d7bd9555a14cd0" kindref="member">_stateCommonCodeBlockMap</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>stateCommonCodeBlockMapType::iterator<sp/>stateFound<sp/>=</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2dc51afaae37f0bc70d7bd9555a14cd0" kindref="member">_stateCommonCodeBlockMap</ref>.find(initialState);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad7ddf42fe31156dc7e77cf4183e2555d" kindref="member">checkInsert</ref>(stateFound-&gt;second,<sp/>transitionBlocks);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">vector&lt;SusCFG<sp/>*&gt;<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a63d5c4afef3eb581891938f4348765ed" kindref="member">SuspensionAutomata::modifDFS</ref>(<ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*block,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*initialState)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>deque&lt;SusCFG<sp/>*&gt;<sp/>traversedBlocks;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>visitedBlocks;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>traversedBlocks.push_front(block);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWaitEncounter<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>transitionBlocks;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(traversedBlocks.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*currentBlock<sp/>=<sp/>traversedBlocks.front();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>traversedBlocks.pop_front();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a196e62967d4a2820873c7833b037d836" kindref="member">isWaitBlock</ref>())<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeInNs;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>eventName;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isWaitEncounter<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>susCFGStateMapType::iterator<sp/>stateFound<sp/>=</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a6867fb869f7dc5ff46912696f2a7c64a" kindref="member">susCFGStateMap</ref>.find(currentBlock);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*finalState<sp/>=<sp/>stateFound-&gt;second;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a131b474cba796a5d5e13fb7574c236da" kindref="member">isTimedWait</ref>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89a0f3c5d082345be8584dd591cf9036" kindref="member">getWaitStmt</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalState-&gt;<ref refid="classsystemc__clang_1_1State_1abecd2759cf4e2be06e3bf843d86730f0" kindref="member">setTimed</ref>();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeInNs<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ae1396c0d87d664b56ea77d0ff2daf89c" kindref="member">getTime</ref>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89a0f3c5d082345be8584dd591cf9036" kindref="member">getWaitStmt</ref>());</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1abd8c75ab0e59dd6d7a02b96ce46e2845" kindref="member">isEventWait</ref>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89a0f3c5d082345be8584dd591cf9036" kindref="member">getWaitStmt</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalState-&gt;<ref refid="classsystemc__clang_1_1State_1a060421965cdc1cec1205673a684f1619" kindref="member">setEvent</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventName<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1adf39018ee2f86a522a3e81f12fbb429e" kindref="member">getEvent</ref>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89a0f3c5d082345be8584dd591cf9036" kindref="member">getWaitStmt</ref>());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1af7df2014268b399d1c12383b4aeffd49" kindref="member">isDeltaWait</ref>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a89a0f3c5d082345be8584dd591cf9036" kindref="member">getWaitStmt</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalState-&gt;<ref refid="classsystemc__clang_1_1State_1a5bb9146ab23235ba40befc51df84dd9b" kindref="member">setDelta</ref>();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalState-&gt;<ref refid="classsystemc__clang_1_1State_1a9062e8b2a0857e87be962fda738caa3a" kindref="member">setInitial</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Transition" kindref="compound">Transition</ref><sp/>*t<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Transition" kindref="compound">Transition</ref>();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finalState-&gt;<ref refid="classsystemc__clang_1_1State_1ae43c91cfc56d051351a28ea1987e0d8b" kindref="member">addEventName</ref>(eventName);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finalState-&gt;<ref refid="classsystemc__clang_1_1State_1afae55d45430056860b2e6b3ef244f9c2" kindref="member">addSimTime</ref>(timeInNs);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classsystemc__clang_1_1Transition_1a7ca29100e3326ea10b3b06fb617aecde" kindref="member">addInitialState</ref>(initialState);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classsystemc__clang_1_1Transition_1a225b6436893a66ac660d72e2726d81cb" kindref="member">addFinalState</ref>(finalState);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a50086b57479af946fbd1d21a7ef18093" kindref="member">addRemainingBlocks</ref>(initialState,<sp/>transitionBlocks);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classsystemc__clang_1_1Transition_1aaa602753672b3b5a9a78f86ff0118884" kindref="member">addCodeBlocks</ref>(transitionBlocks);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ade6ac88ba947cd76de77e64120f71acf" kindref="member">_transitionVector</ref>.push_back(t);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transitionBlocks;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>adding<sp/>blocks<sp/>to<sp/>traversed<sp/>blocks,<sp/>check<sp/>if<sp/>the<sp/>last<sp/>node<sp/>prior<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>wait<sp/>call<sp/>has<sp/>which<sp/>branch<sp/>discovered.<sp/>Also<sp/>need<sp/>to<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>terminator<sp/>block<sp/>or<sp/>block<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.find(currentBlock)<sp/>==<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>currentBlock<sp/>is<sp/>not<sp/>our<sp/>concern<sp/>yet,<sp/>so<sp/>insert<sp/>the<sp/>0th<sp/>successive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Current<sp/>Block<sp/>:<sp/>&quot;<sp/>&lt;&lt;currentBlock-&gt;getBlockID()&lt;&lt;&quot;<sp/>not<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>concern&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>BUG:<sp/>There<sp/>is<sp/>an<sp/>issue<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>exists<sp/>a<sp/>getSuccBlocks(),<sp/>but<sp/>it<sp/>happens<sp/>to<sp/>be<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>happens<sp/>when<sp/>there<sp/>is<sp/>a<sp/>thread<sp/>that<sp/>uses<sp/>a<sp/>wait(),<sp/>but<sp/>no<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)-&gt;isParentBlock())<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a9d159ea7b6661f0b73a8eb0d6feaa243" kindref="member">isFound</ref>(</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitedBlocks,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)-&gt;getChildBlockList().at(</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traversedBlocks.push_front(</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)-&gt;getChildBlockList().at(0));</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a9d159ea7b6661f0b73a8eb0d6feaa243" kindref="member">isFound</ref>(visitedBlocks,<sp/>currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)))<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)-&gt;getBlockID()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traversedBlocks.push_front(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>currentBlock<sp/>has<sp/>a<sp/>previous<sp/>entry<sp/>in<sp/>the<sp/>map,<sp/>so<sp/>take<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>succesive<sp/>block<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Current<sp/>block<sp/>:<sp/>&quot;<sp/>&lt;&lt;currentBlock-&gt;getBlockID()&lt;&lt;&quot;<sp/>is<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>concern&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGSuccIDMapType::iterator<sp/>susCFGFound<sp/>=</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.find(currentBlock);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGFound-&gt;second<sp/>==<sp/>currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().size()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>child<sp/>branches<sp/>of<sp/>this<sp/>node<sp/>have<sp/>been<sp/>discovered.<sp/>So,<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>nothing<sp/>to<sp/>discover</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Current<sp/>block<sp/>:<sp/>&quot;<sp/>&lt;&lt;currentBlock-&gt;getBlockID()&lt;&lt;&quot;<sp/>has<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>children<sp/>accounted<sp/>for&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>()</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.at(susCFGFound-&gt;second<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;isParentBlock())<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a9d159ea7b6661f0b73a8eb0d6feaa243" kindref="member">isFound</ref>(visitedBlocks,<sp/>currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>()</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.at(susCFGFound-&gt;second<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getChildBlockList()</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.at(0)))<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traversedBlocks.push_front(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>()</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.at(susCFGFound-&gt;second<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getChildBlockList()</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.at(0));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a9d159ea7b6661f0b73a8eb0d6feaa243" kindref="member">isFound</ref>(visitedBlocks,<sp/>currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susCFGFound-&gt;second<sp/>+<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>()</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.at(susCFGFound-&gt;second<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getBlockID()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traversedBlocks.push_front(</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(susCFGFound-&gt;second<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visitedBlocks.push_back(currentBlock);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transitionBlocks.push_back(currentBlock);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isWaitEncounter<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>found<sp/>a<sp/>path<sp/>that<sp/>does<sp/>not<sp/>end<sp/>in<sp/>a<sp/>wait<sp/>block.<sp/>So,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>be<sp/>in<sp/>all<sp/>paths<sp/>from<sp/>this<sp/>initial<sp/>state<sp/>to<sp/>all<sp/>final<sp/>wait<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2dc51afaae37f0bc70d7bd9555a14cd0" kindref="member">_stateCommonCodeBlockMap</ref>.find(initialState)<sp/>==</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2dc51afaae37f0bc70d7bd9555a14cd0" kindref="member">_stateCommonCodeBlockMap</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2dc51afaae37f0bc70d7bd9555a14cd0" kindref="member">_stateCommonCodeBlockMap</ref>.insert(</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2a99d042221a40e8516a9dfe8db991b0" kindref="member">stateCommonCodeBlockPairType</ref>(initialState,<sp/>transitionBlocks));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stateCommonCodeBlockMapType::iterator<sp/>stateFound<sp/>=</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2dc51afaae37f0bc70d7bd9555a14cd0" kindref="member">_stateCommonCodeBlockMap</ref>.find(initialState);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>remainingCodeBlocks<sp/>=<sp/>stateFound-&gt;second;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad7ddf42fe31156dc7e77cf4183e2555d" kindref="member">checkInsert</ref>(transitionBlocks,<sp/>remainingCodeBlocks);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transitionBlocks;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad7ddf42fe31156dc7e77cf4183e2555d" kindref="member">SuspensionAutomata::checkInsert</ref>(vector&lt;SusCFG<sp/>*&gt;<sp/>source,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>&amp;target)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>duplicate;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i{0};<sp/>i<sp/>&lt;<sp/>source.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>duplicate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>target.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source.at(i)<sp/>==<sp/>target.at(j))<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplicate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(duplicate<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target.push_back(source.at(i));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2cd224dcca716d2c10200b3c5be2ca42" kindref="member">SuspensionAutomata::genSauto</ref>()<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a28e552a993a2ea6ba41eec08e2e903b2" kindref="member">susCFGVectorType</ref><sp/>susCFGVector<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a27275596fa8f06631c49ee5bb7b6451b" kindref="member">_susCFGVector</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a28e552a993a2ea6ba41eec08e2e903b2" kindref="member">susCFGVectorType</ref><sp/>waitBlocks;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i{0};<sp/>i<sp/>&lt;<sp/>susCFGVector.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGVector.at(i)-&gt;isWaitBlock()<sp/>||<sp/>i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>waitBlocks.push_back(susCFGVector.at(i));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*state<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref>(susCFGVector.at(i),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="classsystemc__clang_1_1State_1a9062e8b2a0857e87be962fda738caa3a" kindref="member">setInitial</ref>();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>State<sp/>susblock<sp/>set<sp/>to<sp/>initial<sp/>:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;&lt;state-&gt;returnSusCFGBlock()-&gt;getBlockID();<sp/>_os<sp/>&lt;&lt;&quot;\n<sp/>State<sp/>:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;&lt;state-&gt;isTimed()&lt;&lt;&quot;<sp/>&quot;<sp/>&lt;&lt;state-&gt;isInitial()&lt;&lt;&quot;<sp/>&quot;<sp/>&lt;&lt;state-&gt;isDelta();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a6867fb869f7dc5ff46912696f2a7c64a" kindref="member">susCFGStateMap</ref>.insert(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a2cd80713088bf072fc588d70f07b36f0" kindref="member">susCFGStatePairType</ref>(susCFGVector.at(i),<sp/>state));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i{0};<sp/>i<sp/>&lt;<sp/>waitBlocks.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*waitBlock<sp/>=<sp/>waitBlocks.at(i);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Looking<sp/>at<sp/>Wait<sp/>Block<sp/>:<sp/>&quot;<sp/>&lt;&lt;waitBlock-&gt;getBlockID();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>susCFGStateMapType::iterator<sp/>stateFound<sp/>=</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a6867fb869f7dc5ff46912696f2a7c64a" kindref="member">susCFGStateMap</ref>.find(waitBlocks.at(i));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1State" kindref="compound">State</ref><sp/>*initialState<sp/>=<sp/>stateFound-&gt;second;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>backTrackCodeBlocks;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*lastBlock;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.clear();<sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>new<sp/>initial<sp/>state,<sp/>start<sp/>fresh...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left<sp/>child..<sp/>do<sp/>the<sp/>same<sp/>for<sp/>the<sp/>right<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*initialInsertBlock;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)-&gt;isParentBlock())<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialInsertBlock<sp/>=</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)-&gt;getChildBlockList().at(0);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialInsertBlock<sp/>=<sp/>waitBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>transitionCodeBlocks<sp/>=</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a63d5c4afef3eb581891938f4348765ed" kindref="member">modifDFS</ref>(initialInsertBlock,<sp/>initialState);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Transition<sp/>Blocks<sp/>:<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>backTrackCodeBlocks.clear();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>j{0};<sp/>j<sp/>&lt;<sp/>transitionCodeBlocks.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backTrackCodeBlocks.push_back(transitionCodeBlocks.at(j));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;<sp/>&quot;&lt;&lt;transitionCodeBlocks.at(j)-&gt;getBlockID();;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>j{};</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>backTrackCodeBlocks.size()<sp/>-<sp/>2;<sp/>j<sp/>&gt;=<sp/>0;<sp/>j--)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backTrackCodeBlocks.at(j)-&gt;getSuccBlocks().size()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Block<sp/>:<sp/>&quot;<sp/>&lt;&lt;backTrackCodeBlocks.at(j)-&gt;getBlockID()&lt;&lt;&quot;<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>than<sp/>one<sp/>successor&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*backBlock<sp/>=<sp/>backTrackCodeBlocks.at(j);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)-&gt;isParentBlock())<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)-&gt;getChildBlockList().at(0)<sp/>==</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backTrackCodeBlocks.at(j<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Block<sp/>:<sp/>&quot;<sp/>&lt;&lt;backBlock-&gt;getBlockID()&lt;&lt;&quot;<sp/>used<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successor&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.insert(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a17b2c1b494ee49c87c2356af922c4457" kindref="member">susCFGSuccIDPairType</ref>(backBlock,<sp/>0));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Map<sp/>value<sp/>:<sp/>&quot;<sp/>&lt;&lt;susCFGSuccIDMap[backBlock];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(1)-&gt;isParentBlock())<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(1)-&gt;getChildBlockList().at(0)<sp/>==</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backTrackCodeBlocks.at(j<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Block<sp/>:<sp/>&quot;<sp/>&lt;&lt;backBlock-&gt;getBlockID()&lt;&lt;&quot;<sp/>used<sp/>the<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successor&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.erase(backBlock);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.insert(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a17b2c1b494ee49c87c2356af922c4457" kindref="member">susCFGSuccIDPairType</ref>(backBlock,<sp/>1));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(0)<sp/>==</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backTrackCodeBlocks.at(j<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Block<sp/>:<sp/>&quot;<sp/>&lt;&lt;backBlock-&gt;getBlockID()&lt;&lt;&quot;<sp/>used<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successor&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.insert(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a17b2c1b494ee49c87c2356af922c4457" kindref="member">susCFGSuccIDPairType</ref>(backBlock,<sp/>0));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a581f1ab02fa66de70074e2617167214c" kindref="member">getSuccBlocks</ref>().at(1)<sp/>==</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backTrackCodeBlocks.at(j<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>Block<sp/>:<sp/>&quot;<sp/>&lt;&lt;backBlock-&gt;getBlockID()&lt;&lt;&quot;<sp/>used<sp/>the<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successor&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.erase(backBlock);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.insert(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a17b2c1b494ee49c87c2356af922c4457" kindref="member">susCFGSuccIDPairType</ref>(backBlock,<sp/>1));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>J<sp/>value<sp/>:<sp/>&quot;<sp/>&lt;&lt;j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.find(backTrackCodeBlocks.back())<sp/>==</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.insert(</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a17b2c1b494ee49c87c2356af922c4457" kindref="member">susCFGSuccIDPairType</ref>(backTrackCodeBlocks.back(),<sp/>0));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>[backTrackCodeBlocks.back()]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.erase(backTrackCodeBlocks.back());</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ad9ba3ec9309524453b635103a7719615" kindref="member">susCFGSuccIDMap</ref>.insert(</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a17b2c1b494ee49c87c2356af922c4457" kindref="member">susCFGSuccIDPairType</ref>(backTrackCodeBlocks.back(),<sp/>1));</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>blocks<sp/>from<sp/>the<sp/>back<sp/>to<sp/>j</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backTrackCodeBlocks.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backTrackCodeBlocks.pop_back();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(backTrackCodeBlocks.size()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SuspensionAutomata_8cpp_1aa6afbc1aa166921abdbfc5026b82e6bd" kindref="member">is_found</ref>(<ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref><sp/>n1,<sp/><ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref><sp/>n2)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n1<sp/>==<sp/>n2;</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Container,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref>,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SuspensionAutomata_8cpp_1ac484a884be6dbde73c1a5c0fc7b3fe80" kindref="member">generic_isFound</ref>(Container&lt;Node,<sp/>Allocator&gt;<sp/>&amp;container,<sp/><ref refid="classsystemc__clang_1_1Node" kindref="compound">Node</ref><sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundBlock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&lt;Node,<sp/>Allocator&gt;::iterator<sp/>itr<sp/>=<sp/>std::find_if(</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>container.begin(),<sp/>container.end(),</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::bind1st(std::ptr_fun&lt;Node,<sp/>Node,<sp/>bool&gt;(<ref refid="SuspensionAutomata_8cpp_1aa6afbc1aa166921abdbfc5026b82e6bd" kindref="member">is_found</ref>),<sp/>node));</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itr<sp/>!=<sp/>container.end();</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="comment">//<sp/>need<sp/>a<sp/>utility<sp/>class<sp/>and<sp/>this<sp/>should<sp/>be<sp/>a<sp/>template<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a9d159ea7b6661f0b73a8eb0d6feaa243" kindref="member">SuspensionAutomata::isFound</ref>(vector&lt;SusCFG<sp/>*&gt;<sp/>visitedState,<sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*block)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="SuspensionAutomata_8cpp_1ac484a884be6dbde73c1a5c0fc7b3fe80" kindref="member">generic_isFound</ref>(visitedState,<sp/>block);</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a9d159ea7b6661f0b73a8eb0d6feaa243" kindref="member">SuspensionAutomata::isFound</ref>(vector&lt;Transition<sp/>*&gt;<sp/>visitedState,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Transition" kindref="compound">Transition</ref><sp/>*block)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="SuspensionAutomata_8cpp_1ac484a884be6dbde73c1a5c0fc7b3fe80" kindref="member">generic_isFound</ref>(visitedState,<sp/>block);</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ae1396c0d87d664b56ea77d0ff2daf89c" kindref="member">SuspensionAutomata::getTime</ref>(Stmt<sp/>*stmt)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>factor;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXMemberCallExpr<sp/>*ce<sp/>=<sp/>dyn_cast&lt;CXXMemberCallExpr&gt;(stmt))<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(1))<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SC_FS&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(1))<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SC_PS&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(1))<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SC_NS&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(1))<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SC_US&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>0.001;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(1))<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SC_MS&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>0.000001;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(1))<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SC_SEC&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>0.0000000001;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(atof(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(0)).c_str())<sp/>*<sp/>factor);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1adf39018ee2f86a522a3e81f12fbb429e" kindref="member">SuspensionAutomata::getEvent</ref>(Stmt<sp/>*stmt)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXMemberCallExpr<sp/>*ce<sp/>=<sp/>dyn_cast&lt;CXXMemberCallExpr&gt;(stmt))<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(0)));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a131b474cba796a5d5e13fb7574c236da" kindref="member">SuspensionAutomata::isTimedWait</ref>(Stmt<sp/>*stmt)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXMemberCallExpr<sp/>*ce<sp/>=<sp/>dyn_cast&lt;CXXMemberCallExpr&gt;(stmt))<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ce-&gt;getNumArgs()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">SuspensionAutomata::getArgumentName</ref>(Expr<sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>clang::LangOptions<sp/>LangOpts;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>LangOpts.CPlusPlus<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>clang::PrintingPolicy<sp/>Policy(LangOpts);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>TypeS;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>llvm::raw_string_ostream<sp/>s(TypeS);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>arg-&gt;printPretty(s,<sp/>0,<sp/>Policy);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>_os<sp/>&lt;&lt;<sp/>&quot;,<sp/>argument:<sp/>&quot;<sp/>&lt;&lt;<sp/>s.str()<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.str();</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1af7df2014268b399d1c12383b4aeffd49" kindref="member">SuspensionAutomata::isDeltaWait</ref>(Stmt<sp/>*stmt)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXMemberCallExpr<sp/>*ce<sp/>=<sp/>dyn_cast&lt;CXXMemberCallExpr&gt;(stmt))<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ce-&gt;getNumArgs()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>eventName<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a20267391120384f5f3473a224716c468" kindref="member">getArgumentName</ref>(ce-&gt;getArg(0));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eventName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SC_ZERO_TIME&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1abd8c75ab0e59dd6d7a02b96ce46e2845" kindref="member">SuspensionAutomata::isEventWait</ref>(Stmt<sp/>*stmt)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXMemberCallExpr<sp/>*ce<sp/>=<sp/>dyn_cast&lt;CXXMemberCallExpr&gt;(stmt))<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ce-&gt;getNumArgs()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a28e552a993a2ea6ba41eec08e2e903b2" kindref="member">SuspensionAutomata::susCFGVectorType</ref><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a4da78a5159402bb5380b8a427396ef65" kindref="member">SuspensionAutomata::getSusCFG</ref>()<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a27275596fa8f06631c49ee5bb7b6451b" kindref="member">_susCFGVector</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a37823cbaa98336114b95ee6f8258979f" kindref="member">SuspensionAutomata::transitionVectorType</ref><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a295186ac19f69fe8bf49b502e70a25bd" kindref="member">SuspensionAutomata::getSauto</ref>()<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ade6ac88ba947cd76de77e64120f71acf" kindref="member">_transitionVector</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a1f298debb460163f644b56f8aea50a66" kindref="member">SuspensionAutomata::dumpSusCFG</ref>()<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a28e552a993a2ea6ba41eec08e2e903b2" kindref="member">susCFGVectorType</ref><sp/>susCFGVector<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a27275596fa8f06631c49ee5bb7b6451b" kindref="member">_susCFGVector</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>susCFGVector.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Block<sp/>ID<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>susCFGVector.at(i)-&gt;getBlockID();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Is<sp/>Wait<sp/>Block<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>susCFGVector.at(i)-&gt;isWaitBlock();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGVector.at(i)-&gt;getParentBlockID())<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Parent<sp/>ID<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>susCFGVector.at(i)-&gt;getParentBlockID();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*parentBlock<sp/>=<sp/>susCFGVector.at(i)-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a62f906a5658d0a1eea0c3af5900a60cf" kindref="member">getParentSusCFGBlock</ref>();</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Parent<sp/>Block<sp/>ID<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a87b1bd459e23e5a90f714167047d9def" kindref="member">getBlockID</ref>();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Size<sp/>of<sp/>Children<sp/>:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>parentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a6aa20b36799667e001b7633a8790e43a" kindref="member">getChildBlockList</ref>().size();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>predBlocks<sp/>=<sp/>susCFGVector.at(i)-&gt;getPredBlocks();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>succBlocks<sp/>=<sp/>susCFGVector.at(i)-&gt;getSuccBlocks();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Predecessor<sp/>Blocks<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>predBlocks.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predBlocks.at(j))<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/>predBlocks.at(j)-&gt;getBlockID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Successor<sp/>Blocks<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>succBlocks.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(succBlocks.at(j))<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/>succBlocks.at(j)-&gt;getBlockID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a916c16c1c0f00a2862aa02dd8c4f4c11" kindref="member">SuspensionAutomata::dumpSauto</ref>()<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>vector&lt;Transition<sp/>*&gt;<sp/>transitionVector<sp/>=<sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1ade6ac88ba947cd76de77e64120f71acf" kindref="member">_transitionVector</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Size<sp/>of<sp/>transitionVector<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>transitionVector.size();</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>transitionVector.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Transition" kindref="compound">Transition</ref><sp/>*t<sp/>=<sp/>transitionVector.at(i);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classsystemc__clang_1_1Transition_1aa60225347fcc010bb8a77630dd52add4" kindref="member">dump</ref>(<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a194e22c3a542e7068dbc2e1e9def1283" kindref="member">_os</ref>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/SCuitable/SuspensionAutomata.cpp"/>
  </compounddef>
</doxygen>
