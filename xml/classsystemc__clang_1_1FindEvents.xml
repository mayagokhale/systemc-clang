<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classsystemc__clang_1_1FindEvents" kind="class" language="C++" prot="public">
    <compoundname>systemc_clang::FindEvents</compoundname>
    <basecompoundref prot="public" virt="non-virtual">RecursiveASTVisitor&lt; FindEvents &gt;</basecompoundref>
    <includes refid="FindEvents_8h" local="no">FindEvents.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsystemc__clang_1_1FindEvents_1a73b6a516b4853ef4321b5c9eb9e82f2d" prot="public" static="no">
        <type>map&lt; string, FieldDecl * &gt;</type>
        <definition>typedef map&lt;string, FieldDecl *&gt; systemc_clang::FindEvents::classEventMapType</definition>
        <argsstring></argsstring>
        <name>classEventMapType</name>
        <briefdescription>
<para>typedefs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="19" column="15" bodyfile="src/matchers/FindEvents.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsystemc__clang_1_1FindEvents_1aa0290a5d3a196d28643f2560c66f1898" prot="public" static="no">
        <type>pair&lt; string, FieldDecl * &gt;</type>
        <definition>typedef pair&lt;string, FieldDecl *&gt; systemc_clang::FindEvents::kvType</definition>
        <argsstring></argsstring>
        <name>kvType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="20" column="16" bodyfile="src/matchers/FindEvents.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsystemc__clang_1_1FindEvents_1a8428236a092c06656bf5bd959fdeed56" prot="private" static="no" mutable="no">
        <type>llvm::raw_ostream &amp;</type>
        <definition>llvm::raw_ostream&amp; systemc_clang::FindEvents::os_</definition>
        <argsstring></argsstring>
        <name>os_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="36" column="21" bodyfile="src/matchers/FindEvents.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsystemc__clang_1_1FindEvents_1a85185bd515298b5b90848c749c72c869" prot="private" static="no" mutable="no">
        <type><ref refid="classsystemc__clang_1_1FindEvents_1a73b6a516b4853ef4321b5c9eb9e82f2d" kindref="member">classEventMapType</ref></type>
        <definition>classEventMapType systemc_clang::FindEvents::_inClassEvents</definition>
        <argsstring></argsstring>
        <name>_inClassEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="37" column="21" bodyfile="src/matchers/FindEvents.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsystemc__clang_1_1FindEvents_1a0e3e0554a5471293ee32653cd3a4bcd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FindEvents::FindEvents</definition>
        <argsstring>(CXXRecordDecl *, llvm::raw_ostream &amp;)</argsstring>
        <name>FindEvents</name>
        <param>
          <type>CXXRecordDecl *</type>
          <defname>d</defname>
        </param>
        <param>
          <type>llvm::raw_ostream &amp;</type>
          <defname>os</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="22" column="3" bodyfile="src/matchers/FindEvents.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1FindEvents_1a752a7459b0088de311ceef0bc07198cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FindEvents::FindEvents</definition>
        <argsstring>(const FindEvents &amp;)</argsstring>
        <name>FindEvents</name>
        <param>
          <type>const <ref refid="classsystemc__clang_1_1FindEvents" kindref="compound">FindEvents</ref> &amp;</type>
          <defname>from</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="23" column="3" bodyfile="src/matchers/FindEvents.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1FindEvents_1abad1c610fad79498288bcf6336f82e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>FindEvents::~FindEvents</definition>
        <argsstring>()</argsstring>
        <name>~FindEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="24" column="11" bodyfile="src/matchers/FindEvents.cpp" bodystart="15" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1FindEvents_1a595819f70a74db7684cec5b46abec143" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool FindEvents::VisitFieldDecl</definition>
        <argsstring>(FieldDecl *)</argsstring>
        <name>VisitFieldDecl</name>
        <param>
          <type>FieldDecl *</type>
          <defname>fd</defname>
        </param>
        <briefdescription>
<para>RecursiveASTVisitor methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="26" column="16" bodyfile="src/matchers/FindEvents.cpp" bodystart="22" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1FindEvents_1aec2eecc4a7f729aba15fbcd8095a757f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsystemc__clang_1_1FindEvents_1a73b6a516b4853ef4321b5c9eb9e82f2d" kindref="member">classEventMapType</ref></type>
        <definition>FindEvents::classEventMapType FindEvents::getInClassEvents</definition>
        <argsstring>()</argsstring>
        <name>getInClassEvents</name>
        <briefdescription>
<para>Access methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="29" column="21" bodyfile="src/matchers/FindEvents.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1FindEvents_1ad8cf11b1a0709b7d6a841c9a0020e453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt; string &gt; FindEvents::getEventNames</definition>
        <argsstring>()</argsstring>
        <name>getEventNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="30" column="10" bodyfile="src/matchers/FindEvents.cpp" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1FindEvents_1a6071ff3c809867be8683c04a894237a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FindEvents::dump</definition>
        <argsstring>()</argsstring>
        <name>dump</name>
        <briefdescription>
<para>Print methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindEvents.h" line="33" column="8" bodyfile="src/matchers/FindEvents.cpp" bodystart="49" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>systemc_clang::FindEvents</label>
        <link refid="classsystemc__clang_1_1FindEvents"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RecursiveASTVisitor&lt; FindEvents &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>systemc_clang::FindEvents</label>
        <link refid="classsystemc__clang_1_1FindEvents"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RecursiveASTVisitor&lt; FindEvents &gt;</label>
      </node>
    </collaborationgraph>
    <location file="src/matchers/FindEvents.h" line="16" column="1" bodyfile="src/matchers/FindEvents.h" bodystart="16" bodyend="39"/>
    <listofallmembers>
      <member refid="classsystemc__clang_1_1FindEvents_1a85185bd515298b5b90848c749c72c869" prot="private" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>_inClassEvents</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1a73b6a516b4853ef4321b5c9eb9e82f2d" prot="public" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>classEventMapType</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1a6071ff3c809867be8683c04a894237a7" prot="public" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>dump</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1a0e3e0554a5471293ee32653cd3a4bcd7" prot="public" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>FindEvents</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1a752a7459b0088de311ceef0bc07198cd" prot="public" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>FindEvents</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1ad8cf11b1a0709b7d6a841c9a0020e453" prot="public" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>getEventNames</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1aec2eecc4a7f729aba15fbcd8095a757f" prot="public" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>getInClassEvents</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1aa0290a5d3a196d28643f2560c66f1898" prot="public" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>kvType</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1a8428236a092c06656bf5bd959fdeed56" prot="private" virt="non-virtual"><scope>systemc_clang::FindEvents</scope><name>os_</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1a595819f70a74db7684cec5b46abec143" prot="public" virt="virtual"><scope>systemc_clang::FindEvents</scope><name>VisitFieldDecl</name></member>
      <member refid="classsystemc__clang_1_1FindEvents_1abad1c610fad79498288bcf6336f82e7d" prot="public" virt="virtual"><scope>systemc_clang::FindEvents</scope><name>~FindEvents</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
