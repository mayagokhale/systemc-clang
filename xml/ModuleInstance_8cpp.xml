<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ModuleInstance_8cpp" kind="file" language="C++">
    <compoundname>ModuleInstance.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">string</includes>
    <includes local="no">tuple</includes>
    <includes refid="ModuleInstance_8h" local="yes">ModuleInstance.h</includes>
    <incdepgraph>
      <node id="43">
        <label>InterfaceDecl.h</label>
        <link refid="InterfaceDecl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>queue</label>
      </node>
      <node id="34">
        <label>clang/Basic/SourceManager.h</label>
      </node>
      <node id="29">
        <label>clang/Analysis/CFG.h</label>
      </node>
      <node id="12">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="28">
        <label>clang/AST/ParentMap.h</label>
      </node>
      <node id="30">
        <label>clang/Analysis/CFGStmtMap.h</label>
      </node>
      <node id="23">
        <label>clang/AST/PrettyPrinter.h</label>
      </node>
      <node id="11">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="40">
        <label>json.hpp</label>
      </node>
      <node id="36">
        <label>FindEntryFunctions.h</label>
        <link refid="FindEntryFunctions_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>FindTemplateTypes.h</label>
        <link refid="FindTemplateTypes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>WaitContainer.h</label>
        <link refid="WaitContainer_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>NotifyContainer.h</label>
        <link refid="NotifyContainer_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>clang/ASTMatchers/ASTMatchers.h</label>
      </node>
      <node id="27">
        <label>clang/AST/Expr.h</label>
      </node>
      <node id="26">
        <label>Automata.h</label>
        <link refid="Automata_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>clang/AST/Type.h</label>
      </node>
      <node id="46">
        <label>ProcessDecl.h</label>
        <link refid="ProcessDecl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tuple</label>
      </node>
      <node id="47">
        <label>systemc-clang.h</label>
        <link refid="systemc-clang_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Tree.h</label>
        <link refid="Tree_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>stack</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="45">
        <label>PortDecl.h</label>
        <link refid="PortDecl_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>ModuleInstance.h</label>
        <link refid="ModuleInstance_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>SuspensionAutomata.h</label>
        <link refid="SuspensionAutomata_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>FindNotify.h</label>
        <link refid="FindNotify_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>clang/AST/ExprCXX.h</label>
      </node>
      <node id="44">
        <label>PortBinding.h</label>
        <link refid="PortBinding_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>deque</label>
      </node>
      <node id="21">
        <label>FindWait.h</label>
        <link refid="FindWait_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>FindConstructor.h</label>
        <link refid="FindConstructor_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>llvm/Support/Debug.h</label>
      </node>
      <node id="33">
        <label>Utility.h</label>
        <link refid="Utility_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>ModuleInstanceType.h</label>
        <link refid="ModuleInstanceType_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SensitivityMatcher.h</label>
        <link refid="SensitivityMatcher_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>EntryFunctionContainer.h</label>
        <link refid="EntryFunctionContainer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>clang/AST/DeclCXX.h</label>
      </node>
      <node id="35">
        <label>enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="49">
        <label>SignalDecl.h</label>
        <link refid="SignalDecl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>clang/ASTMatchers/ASTMatchFinder.h</label>
      </node>
      <node id="37">
        <label>FindTLMInterfaces.h</label>
        <link refid="FindTLMInterfaces_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="32">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>src/model/ModuleInstance.cpp</label>
        <link refid="ModuleInstance_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ArrayTypeUtils.h</label>
        <link refid="ArrayTypeUtils_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ModuleInstance_8h" kindref="compound">ModuleInstance.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1ad20799642139128415f4cd86083199bf" kindref="member">ModuleInstance::ModuleInstance</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>module_name_{</highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>instance_name_{</highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_decl_{nullptr},</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>constructor_stmt_{nullptr},</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>constructor_decl_{nullptr},</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>instance_decl_{nullptr}<sp/>{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">ModuleInstance::ModuleInstance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,<sp/>clang::CXXRecordDecl<sp/>*decl)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>module_name_{name},</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>instance_name_{</highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_decl_{decl},</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>instance_decl_{nullptr}<sp/>{}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">ModuleInstance::ModuleInstance(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::tuple&lt;const<sp/>std::string<sp/>&amp;,<sp/>clang::CXXRecordDecl<sp/>*&gt;<sp/>&amp;element)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>module_name_{get&lt;0&gt;(element)},<sp/>class_decl_{get&lt;1&gt;(element)}<sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">ModuleInstance::ModuleInstance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance" kindref="compound">ModuleInstance</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4ad8d0b6eaae49ffb0de670a8941890e" kindref="member">module_name_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a4ad8d0b6eaae49ffb0de670a8941890e" kindref="member">module_name_</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a0bebd9c3b1272b8cf32b04421953ba63" kindref="member">instance_name_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a0bebd9c3b1272b8cf32b04421953ba63" kindref="member">instance_name_</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac10d27c2d4949dfd29760d75d59abdbc" kindref="member">constructor_decl_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1ac10d27c2d4949dfd29760d75d59abdbc" kindref="member">constructor_decl_</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a352b553a23314c7dbcb71fe2c02f860b" kindref="member">instance_decl_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a352b553a23314c7dbcb71fe2c02f860b" kindref="member">instance_decl_</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa99400067cfaa6d38bb63f62bf785e1d" kindref="member">process_map_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1aa99400067cfaa6d38bb63f62bf785e1d" kindref="member">process_map_</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>submodules_<sp/>=<sp/>from.submodules_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2a3ca1b37000d95cc23895f58a154a6a" kindref="member">port_signal_map_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a2a3ca1b37000d95cc23895f58a154a6a" kindref="member">port_signal_map_</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Class<sp/>template<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a0b0da3d0417bb5c182d74acbfd53906e" kindref="member">template_parameters_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a0b0da3d0417bb5c182d74acbfd53906e" kindref="member">template_parameters_</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Nested<sp/>submodules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance" kindref="compound">ModuleInstance</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1ModuleInstance_1a2458362880d4d58a23ec115ed736e73c" kindref="member">ModuleInstance::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance" kindref="compound">ModuleInstance</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4ad8d0b6eaae49ffb0de670a8941890e" kindref="member">module_name_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a4ad8d0b6eaae49ffb0de670a8941890e" kindref="member">module_name_</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a0bebd9c3b1272b8cf32b04421953ba63" kindref="member">instance_name_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a0bebd9c3b1272b8cf32b04421953ba63" kindref="member">instance_name_</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac10d27c2d4949dfd29760d75d59abdbc" kindref="member">constructor_decl_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1ac10d27c2d4949dfd29760d75d59abdbc" kindref="member">constructor_decl_</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a352b553a23314c7dbcb71fe2c02f860b" kindref="member">instance_decl_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a352b553a23314c7dbcb71fe2c02f860b" kindref="member">instance_decl_</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa99400067cfaa6d38bb63f62bf785e1d" kindref="member">process_map_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1aa99400067cfaa6d38bb63f62bf785e1d" kindref="member">process_map_</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>submodules_<sp/>=<sp/>from.submodules_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2a3ca1b37000d95cc23895f58a154a6a" kindref="member">port_signal_map_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a2a3ca1b37000d95cc23895f58a154a6a" kindref="member">port_signal_map_</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Class<sp/>template<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a0b0da3d0417bb5c182d74acbfd53906e" kindref="member">template_parameters_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a0b0da3d0417bb5c182d74acbfd53906e" kindref="member">template_parameters_</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Nested<sp/>submodules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a86b734f2fda5c1ea1efc774e90282b68" kindref="member">ModuleInstance::clearOnlyGlobal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>only<sp/>clears<sp/>the<sp/>globally<sp/>(not<sp/>instance-specific)<sp/>allocated<sp/>structures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>AST<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac10d27c2d4949dfd29760d75d59abdbc" kindref="member">constructor_decl_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a352b553a23314c7dbcb71fe2c02f860b" kindref="member">instance_decl_</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ports<sp/>are<sp/>globally<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>.clear();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>.clear();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>.clear();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>.clear();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>submodules_.clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref>.clear();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref>.clear();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref>.clear();</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1a6b2361564c8c0601e2c4a3eea522c2b1" kindref="member">ModuleInstance::~ModuleInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>DEBUG_WITH_TYPE(</highlight><highlight class="stringliteral">&quot;DebugDestructors&quot;</highlight><highlight class="normal">,<sp/>llvm::dbgs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n~ModuleInstance\n&quot;</highlight><highlight class="normal">;);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a352b553a23314c7dbcb71fe2c02f860b" kindref="member">instance_decl_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IMPORTANT:<sp/>Only<sp/>the<sp/>instance-specific<sp/>details<sp/>should<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>delete<sp/>the<sp/>information<sp/>collected<sp/>through<sp/>incomplete<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;v<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>all<sp/>pointers<sp/>in<sp/>ports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;input_port<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>a<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.<sp/>string,<sp/>1.<sp/>PortDecl*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>one<sp/>to<sp/>delete<sp/>is<sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>delete<sp/>input_port.second;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iport{get&lt;1&gt;(input_port)};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iport)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iport;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>.clear();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;output_port<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>get&lt;1&gt;(output_port);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>.clear();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;io_port<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>is<sp/>the<sp/>PortDecl*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>get&lt;1&gt;(io_port);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>.clear();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;other<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>is<sp/>the<sp/>PortDecl*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>get&lt;1&gt;(other);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>.clear();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>EntryFunction<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ef<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ef;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref>.clear();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sig<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>sig.second;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abc740918c2e997127ed087312badb1bc" kindref="member">ModuleInstance::setInstanceInfo</ref>(</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc__ast__matchers_1_1ModuleInstanceType" kindref="compound">sc_ast_matchers::ModuleInstanceType</ref><sp/>&amp;info)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref><sp/>=<sp/>info;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="structsc__ast__matchers_1_1ModuleInstanceType" kindref="compound">ModuleInstanceType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8b088227c84f35c712c7776a0d281dfb" kindref="member">ModuleInstance::getInstanceInfo</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a59c8f4c1702401d02279e3246f1b6066" kindref="member">ModuleInstance::setTemplateParameters</ref>(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;parm_list)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a0b0da3d0417bb5c182d74acbfd53906e" kindref="member">template_parameters_</ref><sp/>=<sp/>parm_list;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a37212075649e484c08f914f7462c0a7a" kindref="member">ModuleInstance::setTemplateArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;parm_list)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abfae715d5503eb38f661bbc6370a90fc" kindref="member">template_args_</ref><sp/>=<sp/>parm_list;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6fd0f98544d3bf1982d87379b44d3d8f" kindref="member">ModuleInstance::getTemplateParameters</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a0b0da3d0417bb5c182d74acbfd53906e" kindref="member">template_parameters_</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a7b402d99a2d59c224e8054680d876690" kindref="member">ModuleInstance::setModuleName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)<sp/>{<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4ad8d0b6eaae49ffb0de670a8941890e" kindref="member">module_name_</ref><sp/>=<sp/>name;<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a1bd3bec837291b5a27ae37fec86c956c" kindref="member">ModuleInstance::addInstances</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;instanceList)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref><sp/>=<sp/>instanceList;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a46bc1df14b8da69b29d4bb380fca7e1d" kindref="member">ModuleInstance::addPortBinding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;port_name,<sp/><ref refid="classsystemc__clang_1_1PortBinding" kindref="compound">PortBinding</ref><sp/>*pb)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref>.insert(<ref refid="classsystemc__clang_1_1ModuleInstance_1a5c80f5683875180d6854faa1c7c958da" kindref="member">portBindingPairType</ref>(port_name,<sp/>pb));</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abe547c4e1d92eefaa78bbcfda50198b4" kindref="member">ModuleInstance::addSignalBinding</ref>(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>portSignalMap)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2a3ca1b37000d95cc23895f58a154a6a" kindref="member">port_signal_map_</ref>.insert(portSignalMap.begin(),<sp/>portSignalMap.end());</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1af3573478433d9fa95957b30ee76a0238" kindref="member">ModuleInstance::addPorts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2c28ab5fe658b9833300e3d979912f42" kindref="member">ModuleInstance::PortType</ref><sp/>&amp;found_ports,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;port_type)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_in&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(begin(found_ports),<sp/>end(found_ports),<sp/>back_inserter(<ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_out&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(begin(found_ports),<sp/>end(found_ports),<sp/>back_inserter(<ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_inout&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(begin(found_ports),<sp/>end(found_ports),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>back_inserter(<ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;others&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(begin(found_ports),<sp/>end(found_ports),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>back_inserter(<ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_signal&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;signal_port<sp/>:<sp/>found_ports)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>port_decl{get&lt;1&gt;(signal_port)};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name{port_decl-&gt;getName()};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SignalContainer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SignalDecl" kindref="compound">SignalDecl</ref><sp/>*signal_entry{</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1SignalDecl" kindref="compound">SignalDecl</ref>{*port_decl}};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref>.insert(<ref refid="classsystemc__clang_1_1ModuleInstance_1a10db7a1b668cf6e6d295ecd7c1b680bd" kindref="member">ModuleInstance::signalPairType</ref>(name,<sp/>signal_entry));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_stream_in&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(begin(found_ports),<sp/>end(found_ports),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>back_inserter(<ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref>));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_stream_out&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(begin(found_ports),<sp/>end(found_ports),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>back_inserter(<ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref>));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a1153f5da8c7c02fc848f60af76827c36" kindref="member">ModuleInstance::addInputInterfaces</ref>(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7ec171b2fc273ec1012eb9b9d3a5d3a8" kindref="member">FindTLMInterfaces::interfaceType</ref><sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>n{mit.first};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindTemplateTypes" kindref="compound">FindTemplateTypes</ref><sp/>*tt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindTemplateTypes" kindref="compound">FindTemplateTypes</ref>(mit.second);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1InterfaceDecl" kindref="compound">InterfaceDecl</ref><sp/>*pd<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1InterfaceDecl" kindref="compound">InterfaceDecl</ref>(n,<sp/>tt);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref>.insert(<ref refid="classsystemc__clang_1_1ModuleInstance_1a89a030fbffc20e47a275dcec04fd80a7" kindref="member">interfacePairType</ref>(mit.first,<sp/>pd));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6afc511b5fe04a0a472a629fc7a7c1f9" kindref="member">ModuleInstance::addOutputInterfaces</ref>(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7ec171b2fc273ec1012eb9b9d3a5d3a8" kindref="member">FindTLMInterfaces::interfaceType</ref><sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name{mit.first};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindTemplateTypes" kindref="compound">FindTemplateTypes</ref><sp/>*tt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindTemplateTypes" kindref="compound">FindTemplateTypes</ref>(*mit.second);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1InterfaceDecl" kindref="compound">InterfaceDecl</ref><sp/>*pd<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1InterfaceDecl" kindref="compound">InterfaceDecl</ref>(name,<sp/>tt);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref>.insert(<ref refid="classsystemc__clang_1_1ModuleInstance_1a89a030fbffc20e47a275dcec04fd80a7" kindref="member">interfacePairType</ref>(name,<sp/>pd));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a60f0b441ce471f92c2c6eb5fad634670" kindref="member">ModuleInstance::addInputOutputInterfaces</ref>(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7ec171b2fc273ec1012eb9b9d3a5d3a8" kindref="member">FindTLMInterfaces::interfaceType</ref><sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref>.insert(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a89a030fbffc20e47a275dcec04fd80a7" kindref="member">interfacePairType</ref>(mit.first,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1InterfaceDecl" kindref="compound">InterfaceDecl</ref>(mit.first,<sp/>mit.second)));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a02f245803d12e2bdca43b88d5460bcbb" kindref="member">ModuleInstance::addConstructor</ref>(<ref refid="classsystemc__clang_1_1FindConstructor" kindref="compound">FindConstructor</ref><sp/>*ctor)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref><sp/>=<sp/>ctor-&gt;<ref refid="classsystemc__clang_1_1FindConstructor_1a2ce14eb7fcb1ff712ff52c9cdaa88b71" kindref="member">getConstructorStmt</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac10d27c2d4949dfd29760d75d59abdbc" kindref="member">constructor_decl_</ref><sp/>=<sp/>ctor-&gt;<ref refid="classsystemc__clang_1_1FindConstructor_1a1216b77cbe76345bf6ba9b30ce748a09" kindref="member">getConstructorDecl</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a02f245803d12e2bdca43b88d5460bcbb" kindref="member">ModuleInstance::addConstructor</ref>(Stmt<sp/>*constructor)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref><sp/>=<sp/>constructor;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">clang::Stmt<sp/>*<ref refid="classsystemc__clang_1_1ModuleInstance_1acd4c2757778b29dc5e367b989c074b37" kindref="member">ModuleInstance::getConstructorStmt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c0d420aa73f7ea7fd619494cd3d7dcc" kindref="member">constructor_stmt_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">clang::CXXConstructorDecl<sp/>*<ref refid="classsystemc__clang_1_1ModuleInstance_1ae8e899d81a715836b322079d1140d480" kindref="member">ModuleInstance::getConstructorDecl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac10d27c2d4949dfd29760d75d59abdbc" kindref="member">constructor_decl_</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a5b054e744ac2e3c832249d5a3a16f224" kindref="member">ModuleInstance::addProcess</ref>(<ref refid="classsystemc__clang_1_1FindEntryFunctions_1a7414ce6160d09ea8539f4513bc204338" kindref="member">FindEntryFunctions::entryFunctionVectorType</ref><sp/>*efv)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref><sp/>=<sp/>*efv;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>efv-&gt;size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer" kindref="compound">EntryFunctionContainer</ref><sp/>*ef<sp/>=<sp/>(*efv)[i];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>entryName{ef-&gt;<ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a23c3b6712031530f7de7f91494bb5cea" kindref="member">_entryName</ref>};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>entryType{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>process<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ef-&gt;<ref refid="classsystemc__clang_1_1EntryFunctionContainer_1acf6ec929f47347ac96b61113c3807e9e" kindref="member">_procType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138a57f8b9e1bf05e9058d703c68ac2d53b0" kindref="member">PROCESS_TYPE::THREAD</ref>:<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SC_THREAD&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138a725e74fd6435d86483781e2bd8e9d2c7" kindref="member">PROCESS_TYPE::METHOD</ref>:<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SC_METHOD&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138ac8d304bc25d6596b687ba2798223dd32" kindref="member">PROCESS_TYPE::CTHREAD</ref>:<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SC_CTHREAD&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa99400067cfaa6d38bb63f62bf785e1d" kindref="member">process_map_</ref>.insert(<ref refid="classsystemc__clang_1_1ModuleInstance_1a4674bdaba29e097bef92dccd45888fdd" kindref="member">processPairType</ref>(</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryName,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ProcessDecl" kindref="compound">ProcessDecl</ref>(entryType,<sp/>entryName,<sp/>ef-&gt;<ref refid="classsystemc__clang_1_1EntryFunctionContainer_1aa94065746a1b759ad618672d1bcc530f" kindref="member">_entryMethodDecl</ref>,<sp/>ef)));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a17a42d855d884812c66b3041c7ef6487" kindref="member">ModuleInstance::addNestedModule</ref>(<ref refid="classsystemc__clang_1_1ModuleInstance" kindref="compound">ModuleInstance</ref><sp/>*nested_module)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>.push_back(nested_module);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ae69e21956c0f29b766b8185163234a6a" kindref="member">ModuleInstance::getInstanceList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">std::vector&lt;EntryFunctionContainer<sp/>*&gt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aee1854d5324a7c2a8fc9ec8b5d7ab6e0" kindref="member">ModuleInstance::getEntryFunctionContainer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac754077d1131eaeb68a799746788cb41" kindref="member">vef_</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a83554c24f9f0d258eee82bdaf5b42fd4" kindref="member">ModuleInstance::getNumInstances</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1adad65a1c03e742c7c8eb6d0bd1a57271" kindref="member">ModuleInstance::signalMapType</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1ModuleInstance_1af851f06fc902cd0a3a90b78e2804a16e" kindref="member">ModuleInstance::getSignals</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ModuleInstance<sp/>*&gt;<sp/>&amp;<ref refid="classsystemc__clang_1_1ModuleInstance_1a58b6305e7ca18d172ddbb9887b06d572" kindref="member">ModuleInstance::getNestedModuleInstances</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1aa971eba18c75ee5a38fcfc9739bbf9a5" kindref="member">ModuleInstance::processMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aec22a3bf8796f20950258d7353fa9e62" kindref="member">ModuleInstance::getProcessMap</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa99400067cfaa6d38bb63f62bf785e1d" kindref="member">process_map_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1ae5e4d7d956225b28aac30182a5649f84" kindref="member">ModuleInstance::portMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a5693ea0597d4a8b1192bd71b4ce234a3" kindref="member">ModuleInstance::getOPorts</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1ae5e4d7d956225b28aac30182a5649f84" kindref="member">ModuleInstance::portMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6ec969b2c238524cd54ae9e939be3f25" kindref="member">ModuleInstance::getIPorts</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1ae5e4d7d956225b28aac30182a5649f84" kindref="member">ModuleInstance::portMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a21f0e70daa7aa40a8c47abecbd7624ea" kindref="member">ModuleInstance::getIOPorts</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1ae5e4d7d956225b28aac30182a5649f84" kindref="member">ModuleInstance::portMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1accaefca4030f64825d3ef85379feecfb" kindref="member">ModuleInstance::getOtherVars</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1ae5e4d7d956225b28aac30182a5649f84" kindref="member">ModuleInstance::portMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2ee12c7ff9afe500c9164afe2c5288fc" kindref="member">ModuleInstance::getInputStreamPorts</ref>()<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1ae5e4d7d956225b28aac30182a5649f84" kindref="member">ModuleInstance::portMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a10f67b9c01dad4bda17c2ee3a8a5c37f" kindref="member">ModuleInstance::getOutputStreamPorts</ref>()<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1a846e080d4532320ccc15fa375c1ca0b4" kindref="member">ModuleInstance::interfaceMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a116399ebf4937ef9a7a00ec90e96c03c" kindref="member">ModuleInstance::getOInterfaces</ref>()<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1a846e080d4532320ccc15fa375c1ca0b4" kindref="member">ModuleInstance::interfaceMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a9a5ccedcd48e70b0816027f990e48170" kindref="member">ModuleInstance::getIInterfaces</ref>()<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1a846e080d4532320ccc15fa375c1ca0b4" kindref="member">ModuleInstance::interfaceMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aafbcf185af0a7a520966ceb507c27dd7" kindref="member">ModuleInstance::getIOInterfaces</ref>()<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><ref refid="classsystemc__clang_1_1ModuleInstance_1a8fc3d86b879f530c74b1de52d7fe1e65" kindref="member">ModuleInstance::portBindingMapType</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a246e0b1f1f5704042f2a0f9dcc19f605" kindref="member">ModuleInstance::getPortBindings</ref>()<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">std::string<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6f7bac0c669433c2cf4ea2846b43606c" kindref="member">ModuleInstance::getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4ad8d0b6eaae49ffb0de670a8941890e" kindref="member">module_name_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">std::string<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c053ec6f0756cef1f68102ef1d9f145" kindref="member">ModuleInstance::getInstanceName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref>.<ref refid="structsc__ast__matchers_1_1ModuleInstanceType_1ac2e3331654217483b96515b50fd7172d" kindref="member">instance_name</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a11105db597dade49f96e63917d8cc7ca" kindref="member">ModuleInstance::isModuleClassDeclNull</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">clang::CXXRecordDecl<sp/>*<ref refid="classsystemc__clang_1_1ModuleInstance_1ad3f030d3e7f036ed263ef5a8df944de4" kindref="member">ModuleInstance::getModuleClassDecl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>assert(!(<ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a52193bb56d74ae42b832932a71be909d" kindref="member">class_decl_</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">Decl<sp/>*<ref refid="classsystemc__clang_1_1ModuleInstance_1a7c741c9d827ddf9695ec29a3a6748a1f" kindref="member">ModuleInstance::getInstanceDecl</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref>.<ref refid="structsc__ast__matchers_1_1ModuleInstanceType_1a7de22e4517b0ea62852b08a721874e4f" kindref="member">getInstanceDecl</ref>();<sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1adffa42f776d3059edf85b78afa7b3c6d" kindref="member">ModuleInstance::dumpInstances</ref>(raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>none<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abbbf86afd09113e92c647eb1897dc084" kindref="member">instance_list_</ref>.at(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>the<sp/>submodules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;submod<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;nested<sp/>module<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>submod<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>module<sp/>type<sp/>name<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>submod-&gt;getName();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(submod-&gt;getInstanceInfo().getInstanceNames().size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>instance<sp/>name:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;name<sp/>:<sp/>submod-&gt;getInstanceInfo().getInstanceNames())<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a02e6b7ffee87e8b825a27304952cd9a2" kindref="member">ModuleInstance::dumpPortBinding</ref>()<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/>binding_j;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>binding_j[</highlight><highlight class="stringliteral">&quot;number_of_ports_bound&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref>.size();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;pb<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>port_name{get&lt;0&gt;(pb)};</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>binding{get&lt;1&gt;(pb)};</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/>port_j;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;caller_instance_type_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>binding-&gt;getCallerInstanceTypeName();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;caller_instance_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>binding-&gt;getCallerInstanceName();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sub<sp/>:<sp/>binding-&gt;getCallerArraySubscripts())<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_dref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_int_lit)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;caller_array_subscripts&quot;</highlight><highlight class="normal">].push_back(</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_int_lit-&gt;getValue().toString(32,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_dref_expr)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;caller_array_subscripts&quot;</highlight><highlight class="normal">].push_back(</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_dref_expr-&gt;getNameInfo().getName().getAsString());</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;caller_port_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>binding-&gt;getCallerPortName();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sub<sp/>:<sp/>binding-&gt;getCallerPortArraySubscripts())<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_dref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_int_lit)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;caller_port_array_subscripts&quot;</highlight><highlight class="normal">].push_back(</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_int_lit-&gt;getValue().toString(32,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_dref_expr)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;caller_port_array_subscripts&quot;</highlight><highlight class="normal">].push_back(</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_dref_expr-&gt;getNameInfo().getName().getAsString());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;callee_instance_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>binding-&gt;getCalleeInstanceName();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sub<sp/>:<sp/>binding-&gt;getCalleeArraySubscripts())<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_dref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_int_lit)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;callee_port_array_subscripts&quot;</highlight><highlight class="normal">].push_back(</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_int_lit-&gt;getValue().toString(32,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_dref_expr)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;callee_port_array_subscripts&quot;</highlight><highlight class="normal">].push_back(</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_dref_expr-&gt;getNameInfo().getName().getAsString());</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>port_j[</highlight><highlight class="stringliteral">&quot;callee_port_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>binding-&gt;getCalleePortName();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>binding-&gt;dump();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>binding_j[port_name]<sp/>=<sp/>port_j;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/>binding_j.dump(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a9421b2281821afa23a06241309075ba2" kindref="member">ModuleInstance::dumpSignalBinding</ref>(raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1ModuleInstance_1a2a3ca1b37000d95cc23895f58a154a6a" kindref="member">port_signal_map_</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>none\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2a3ca1b37000d95cc23895f58a154a6a" kindref="member">port_signal_map_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nPort<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bound<sp/>to<sp/>signal<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it.second;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa456017705d985d5818e0c729b549ba2" kindref="member">ModuleInstance::dumpProcesses</ref>(raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/>process_j;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>process_j[</highlight><highlight class="stringliteral">&quot;number_of_processes&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa99400067cfaa6d38bb63f62bf785e1d" kindref="member">process_map_</ref>.size();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa99400067cfaa6d38bb63f62bf785e1d" kindref="member">process_map_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1ProcessDecl" kindref="compound">ProcessDecl</ref><sp/>*pd{pit.second};</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>process_j[pit.first]<sp/>=<sp/>pd-&gt;dump_json();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Processes\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>process_j.<ref refid="classsystemc__clang_1_1InterfaceDecl_1a5b9b8dbfeb2caa16581ab7d39fe6ad48" kindref="member">dump</ref>(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a5674e79b59cc669be8d1ca338b903fea" kindref="member">ModuleInstance::dumpInterfaces</ref>(raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>interfaces:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref>.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>none\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa512f72d3c57fac67933beb78526e4a1" kindref="member">iinterfaces_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mit.second-&gt;dump(os,<sp/>tabn);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>interfaces:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref>.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;none<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a36c21b835e95ca575f51daab77941f5d" kindref="member">ointerfaces_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mit.second-&gt;dump(os,<sp/>tabn);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Inout<sp/>interfaces:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref>.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;none<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c6e8f2294684f47209fbd93da6f3000" kindref="member">iointerfaces_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mit.second-&gt;dump(os,<sp/>tabn);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2d780651d4415defdb14c95d7fa58e78" kindref="member">ModuleInstance::dumpPorts</ref>(raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/>iport_j,<sp/>oport_j,<sp/>ioport_j,<sp/>othervars_j,<sp/>istreamport_j,<sp/>ostreamport_j,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>submodules_j;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>iport_j[</highlight><highlight class="stringliteral">&quot;number_of_input_ports&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>.size();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>get&lt;0&gt;(mit);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pd<sp/>=<sp/>get&lt;1&gt;(mit);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>iport_j[name]<sp/>=<sp/>pd-&gt;dump_json();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>oport_j[</highlight><highlight class="stringliteral">&quot;number_of_output_ports&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>.size();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>get&lt;0&gt;(mit);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pd<sp/>=<sp/>get&lt;1&gt;(mit);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>oport_j[name]<sp/>=<sp/>pd-&gt;dump_json();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>ioport_j[</highlight><highlight class="stringliteral">&quot;number_of_inout_ports&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>.size();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>get&lt;0&gt;(mit);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pd<sp/>=<sp/>get&lt;1&gt;(mit);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>ioport_j[name]<sp/>=<sp/>pd-&gt;dump_json();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>istreamport_j[</highlight><highlight class="stringliteral">&quot;number_of_instream_ports&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref>.size();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>get&lt;0&gt;(mit);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pd<sp/>=<sp/>get&lt;1&gt;(mit);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>istreamport_j[name]<sp/>=<sp/>pd-&gt;dump_json();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>ostreamport_j[</highlight><highlight class="stringliteral">&quot;number_of_outstream_ports&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref>.size();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>get&lt;0&gt;(mit);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pd<sp/>=<sp/>get&lt;1&gt;(mit);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>ostreamport_j[name]<sp/>=<sp/>pd-&gt;dump_json();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>othervars_j[</highlight><highlight class="stringliteral">&quot;number_of_other_vars&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>.size();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>get&lt;0&gt;(mit);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pd<sp/>=<sp/>get&lt;1&gt;(mit);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>othervars_j[name]<sp/>=<sp/>pd-&gt;dump_json();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>submodules_j[</highlight><highlight class="stringliteral">&quot;number_of_submodule_fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>.size();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>module_name{mit-&gt;getName()};</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>submodules_j[name].push_back(mit-&gt;getInstanceName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>instance_info{mit-&gt;getInstanceInfo()};</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;inst_name<sp/>:<sp/>instance_info.getInstanceNames())<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>submodules_j[module_name].push_back(inst_name);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Start<sp/>printing<sp/>ports\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nInput<sp/>ports:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa00bfa3f29b80ff35a14d452e8eb3a02" kindref="member">in_ports_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nOutput<sp/>ports:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a461e9a2551826cec1646a13a94caa2d1" kindref="member">out_ports_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nInout<sp/>ports:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6466dfefe24da3ac00e228cb972957b8" kindref="member">inout_ports_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nIstream<sp/>ports:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a8c5265bd212698e526e5a8194d75d7d0" kindref="member">istreamports_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nOstream<sp/>ports:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a15889d9dba330ccc10abdfa316fffa93" kindref="member">ostreamports_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nOther<sp/>fields:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4e5b5f3ae512db4da7e512eb4c8d88bb" kindref="member">other_fields_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nSubmodules:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Ports\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>iport_j.dump(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>oport_j.dump(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ioport_j.dump(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>istreamport_j.dump(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ostreamport_j.dump(4)<sp/>&lt;&lt;<sp/>othervars_j.dump(4)<sp/>&lt;&lt;<sp/>submodules_j.dump(4)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2cf65f222236e6c62af42c53346cb4e8" kindref="member">ModuleInstance::dumpSignals</ref>(raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/>signal_j;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>signal_j[</highlight><highlight class="stringliteral">&quot;number_of_signals&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref>.size();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sit<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ac1a7f1df5c43344d90f00fbb62671fc5" kindref="member">signals_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SignalDecl" kindref="compound">SignalDecl</ref><sp/>*s{sit.second};</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>signal_j[sit.first]<sp/>=<sp/>s-&gt;<ref refid="classsystemc__clang_1_1SignalDecl_1ae8f3e3cf56107bef6330c4018891d4ec" kindref="member">dump_json</ref>();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Signals\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>signal_j.dump(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a745e78972426900962829a67266dc5ef" kindref="member">ModuleInstance::dump</ref>(llvm::raw_ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Module<sp/>declaration<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4ad8d0b6eaae49ffb0de670a8941890e" kindref="member">module_name_</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#<sp/>Instances:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1adffa42f776d3059edf85b78afa7b3c6d" kindref="member">dumpInstances</ref>(os,<sp/>4);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Port<sp/>Declaration:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2d780651d4415defdb14c95d7fa58e78" kindref="member">dumpPorts</ref>(os,<sp/>4);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#<sp/>Signal<sp/>Declaration:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a2cf65f222236e6c62af42c53346cb4e8" kindref="member">dumpSignals</ref>(os,<sp/>4);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#<sp/>Processes:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1aa456017705d985d5818e0c729b549ba2" kindref="member">dumpProcesses</ref>(os,<sp/>4);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Port<sp/>binding:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a6ed65413c2d02d22276cdc23688f4134" kindref="member">port_bindings_</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a02e6b7ffee87e8b825a27304952cd9a2" kindref="member">dumpPortBinding</ref>();<sp/><sp/></highlight><highlight class="comment">//(os,<sp/>4);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Signal<sp/>binding:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a9421b2281821afa23a06241309075ba2" kindref="member">dumpSignalBinding</ref>(os,<sp/>4);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a3f058a6db1e6dcb31ee40baa1bbdef24" kindref="member">dump_json</ref>();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n=======================================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a3f058a6db1e6dcb31ee40baa1bbdef24" kindref="member">ModuleInstance::dump_json</ref>()<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/>module_j;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>module_j[</highlight><highlight class="stringliteral">&quot;module_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a4ad8d0b6eaae49ffb0de670a8941890e" kindref="member">module_name_</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>module_j[</highlight><highlight class="stringliteral">&quot;instance_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a0bebd9c3b1272b8cf32b04421953ba63" kindref="member">instance_name_</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>module_j[</highlight><highlight class="stringliteral">&quot;is_array&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref>.<ref refid="structsc__ast__matchers_1_1ModuleInstanceType_1a4371dc69e15c57afbf4488d7897b8c83" kindref="member">isArrayType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>module_j[</highlight><highlight class="stringliteral">&quot;is_array&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>out<sp/>all<sp/>the<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;size<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1ae87066c2ad1a38280c12059fec7cf51d" kindref="member">instance_info_</ref>.<ref refid="structsc__ast__matchers_1_1ModuleInstanceType_1a2e2b3da949e2f822f1f07eaa8726f5af" kindref="member">getArraySizes</ref>())<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>module_j[</highlight><highlight class="stringliteral">&quot;array_sizes&quot;</highlight><highlight class="normal">]<sp/>+=<sp/>size.getLimitedValue();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Template<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;parm<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a0b0da3d0417bb5c182d74acbfd53906e" kindref="member">template_parameters_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>module_j[</highlight><highlight class="stringliteral">&quot;template_parameters&quot;</highlight><highlight class="normal">].push_back(parm);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;parm<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1abfae715d5503eb38f661bbc6370a90fc" kindref="member">template_args_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>module_j[</highlight><highlight class="stringliteral">&quot;template_args&quot;</highlight><highlight class="normal">].push_back(parm);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;submod<sp/>:<sp/><ref refid="classsystemc__clang_1_1ModuleInstance_1a714bc3fd388def5531747edd6ab4d825" kindref="member">nested_modules_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>module_j[</highlight><highlight class="stringliteral">&quot;nested_modules&quot;</highlight><highlight class="normal">].push_back(</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>submod-&gt;getInstanceInfo().getInstanceNames());</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/>module_j.dump(4);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>module_j;</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/model/ModuleInstance.cpp"/>
  </compounddef>
</doxygen>
