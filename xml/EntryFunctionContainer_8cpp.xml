<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="EntryFunctionContainer_8cpp" kind="file" language="C++">
    <compoundname>EntryFunctionContainer.cpp</compoundname>
    <includes refid="EntryFunctionContainer_8h" local="yes">EntryFunctionContainer.h</includes>
    <includes refid="enums_8h" local="yes">enums.h</includes>
    <incdepgraph>
      <node id="30">
        <label>clang/Basic/SourceManager.h</label>
      </node>
      <node id="25">
        <label>clang/Analysis/CFG.h</label>
      </node>
      <node id="8">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="24">
        <label>clang/AST/ParentMap.h</label>
      </node>
      <node id="26">
        <label>clang/Analysis/CFGStmtMap.h</label>
      </node>
      <node id="19">
        <label>clang/AST/PrettyPrinter.h</label>
      </node>
      <node id="7">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="18">
        <label>WaitContainer.h</label>
        <link refid="WaitContainer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>NotifyContainer.h</label>
        <link refid="NotifyContainer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>clang/ASTMatchers/ASTMatchers.h</label>
      </node>
      <node id="23">
        <label>clang/AST/Expr.h</label>
      </node>
      <node id="22">
        <label>Automata.h</label>
        <link refid="Automata_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/model/EntryFunctionContainer.cpp</label>
        <link refid="EntryFunctionContainer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>clang/AST/Type.h</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="21">
        <label>SuspensionAutomata.h</label>
        <link refid="SuspensionAutomata_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>FindNotify.h</label>
        <link refid="FindNotify_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>clang/AST/ExprCXX.h</label>
      </node>
      <node id="27">
        <label>deque</label>
      </node>
      <node id="17">
        <label>FindWait.h</label>
        <link refid="FindWait_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>llvm/Support/Debug.h</label>
      </node>
      <node id="29">
        <label>Utility.h</label>
        <link refid="Utility_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SensitivityMatcher.h</label>
        <link refid="SensitivityMatcher_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EntryFunctionContainer.h</label>
        <link refid="EntryFunctionContainer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>clang/AST/DeclCXX.h</label>
      </node>
      <node id="31">
        <label>enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="11">
        <label>clang/ASTMatchers/ASTMatchFinder.h</label>
      </node>
      <node id="28">
        <label>stdio.h</label>
      </node>
      <node id="14">
        <label>ArrayTypeUtils.h</label>
        <link refid="ArrayTypeUtils_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EntryFunctionContainer_8h" kindref="compound">EntryFunctionContainer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enums_8h" kindref="compound">enums.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a352f48dbf3f5c9dc231ecac2563c8308" kindref="member">EntryFunctionContainer::~EntryFunctionContainer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>free<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1ad6c5cef09b71839a7f427be3f73a5dc8" kindref="member">EntryFunctionContainer::EntryFunctionContainer</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_entryName(</highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_procType(<ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138" kindref="member">PROCESS_TYPE</ref>::<ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138ab50339a10e1de285ac99d4c3990b8693" kindref="member">NONE</ref>),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_entryMethodDecl(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">EntryFunctionContainer::EntryFunctionContainer(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138" kindref="member">PROCESS_TYPE</ref><sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CXXMethodDecl<sp/>*d,<sp/>Stmt<sp/>*s)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_entryName(n),<sp/>_procType(<ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>),<sp/>_entryMethodDecl(d)<sp/>{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">EntryFunctionContainer::EntryFunctionContainer(</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer" kindref="compound">EntryFunctionContainer</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a23c3b6712031530f7de7f91494bb5cea" kindref="member">_entryName</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a23c3b6712031530f7de7f91494bb5cea" kindref="member">_entryName</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1acf6ec929f47347ac96b61113c3807e9e" kindref="member">_procType</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1EntryFunctionContainer_1acf6ec929f47347ac96b61113c3807e9e" kindref="member">_procType</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1aa94065746a1b759ad618672d1bcc530f" kindref="member">_entryMethodDecl</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1EntryFunctionContainer_1aa94065746a1b759ad618672d1bcc530f" kindref="member">_entryMethodDecl</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a8c4e6135b1fc18475ffd1ed6351925ea" kindref="member">EntryFunctionContainer::getName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a23c3b6712031530f7de7f91494bb5cea" kindref="member">_entryName</ref>;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a4d69296f0e62e5aea47b39f1d8f96df8" kindref="member">EntryFunctionContainer::SenseMapType</ref><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a343064ab06a578f0f0d855aad1d409e4" kindref="member">EntryFunctionContainer::getSenseMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a5bff0871f39f8278dc7d3d1aabff1fa7" kindref="member">senseMap_</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">CXXMethodDecl<sp/>*<ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a956d0b7c6e78ddb05b020323097d6ed7" kindref="member">EntryFunctionContainer::getEntryMethod</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1aa94065746a1b759ad618672d1bcc530f" kindref="member">_entryMethodDecl</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1aa80ecadee6b1a265d04e13eccb480aab" kindref="member">EntryFunctionContainer::waitContainerListType</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a47c3469ecff9e10080f70459cbec7331" kindref="member">EntryFunctionContainer::getWaitCalls</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a74bebabfa45c0882208ddd53289e942d" kindref="member">_waitCalls</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a5d0558aaa965c4cf7f062f32ca4fc3d2" kindref="member">EntryFunctionContainer::notifyContainerListType</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a9936135c483e438c70202bbd7e8371de" kindref="member">EntryFunctionContainer::getNotifyCalls</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a30b698f732bc7c49b54294d479e3b637" kindref="member">_notifyCalls</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138" kindref="member">PROCESS_TYPE</ref><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1ad8229147a1e4fa479126e3761da2f202" kindref="member">EntryFunctionContainer::getProcessType</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1acf6ec929f47347ac96b61113c3807e9e" kindref="member">_procType</ref>;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a28e552a993a2ea6ba41eec08e2e903b2" kindref="member">SuspensionAutomata::susCFGVectorType</ref><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1af746bf192e581ad16eec6883ef1b1474" kindref="member">EntryFunctionContainer::getSusCFG</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1afec0999cfbb34edb368ab2755e21cd7b" kindref="member">_susCFG</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>_instanceSusCFGMap[numInstance];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a37823cbaa98336114b95ee6f8258979f" kindref="member">SuspensionAutomata::transitionVectorType</ref><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a9d3d27700a2458a309caf51814374d2e" kindref="member">EntryFunctionContainer::getSusAuto</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a87298677e5d5c5a12dada5c485e6ff95" kindref="member">_susAuto</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>_instanceSautoMap[numInstance];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a1091160a0433997fecb18f7d429fbc55" kindref="member">EntryFunctionContainer::setName</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>n)<sp/>{<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a23c3b6712031530f7de7f91494bb5cea" kindref="member">_entryName</ref><sp/>=<sp/>n;<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1ae6e38aced6b2eb7ea7ba5d5e7096977b" kindref="member">EntryFunctionContainer::setProcessType</ref>(<ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138" kindref="member">PROCESS_TYPE</ref><sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>)<sp/>{<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1acf6ec929f47347ac96b61113c3807e9e" kindref="member">_procType</ref><sp/>=<sp/><ref refid="namespaceparselib_1_1utils_1ab81a1e875b4ab8a6c0b13efab8be1115" kindref="member">p</ref>;<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a11047b177291702666237980e4631a0f" kindref="member">EntryFunctionContainer::setEntryMethod</ref>(CXXMethodDecl<sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1aa94065746a1b759ad618672d1bcc530f" kindref="member">_entryMethodDecl</ref><sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>EntryFunctionContainer::addSensitivityInfo(FindSensitivity<sp/>&amp;s)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_senseMap<sp/>=<sp/>s.getSenseMap();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a967beb0f9aeb78f0d8587917a9668344" kindref="member">EntryFunctionContainer::addSensitivityInfo</ref>(SenseMapType<sp/>&amp;sm)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a5bff0871f39f8278dc7d3d1aabff1fa7" kindref="member">senseMap_</ref><sp/>=<sp/>sm;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1abe6b67fd8b0c7f5391afe4d323e074e8" kindref="member">EntryFunctionContainer::addWaits</ref>(<ref refid="classsystemc__clang_1_1FindWait" kindref="compound">FindWait</ref><sp/>&amp;f)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindWait_1a1fd6b2134e60c643a437437ed75d765d" kindref="member">FindWait::waitListType</ref><sp/>wcalls<sp/>=<sp/>f.<ref refid="classsystemc__clang_1_1FindWait_1aa4f894b091b8b5b4262ea98804b321b6" kindref="member">getWaitCalls</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(FindWait::waitListType::iterator<sp/>it<sp/>=<sp/>wcalls.begin(),<sp/>eit<sp/>=<sp/>wcalls.end();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;it&apos;<sp/>points<sp/>to<sp/>CXXMembercallExpr<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1WaitContainer" kindref="compound">WaitContainer</ref><sp/>*wc{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1WaitContainer" kindref="compound">WaitContainer</ref>(f.<ref refid="classsystemc__clang_1_1FindWait_1a8365bbdfc879f7d1d488442564bdaffd" kindref="member">getEntryMethod</ref>(),<sp/>(*it)-&gt;getASTNode())};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a74bebabfa45c0882208ddd53289e942d" kindref="member">_waitCalls</ref>.push_back(wc);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//_processWaitEventMap<sp/>=<sp/>f.getProcessWaitEventMap();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a928b1766e8858139ee1ff249918f6f6b" kindref="member">EntryFunctionContainer::addSusCFGAuto</ref>(<ref refid="classsystemc__clang_1_1SuspensionAutomata" kindref="compound">SuspensionAutomata</ref><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SAUTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1afec0999cfbb34edb368ab2755e21cd7b" kindref="member">_susCFG</ref><sp/>=<sp/>s.<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a4da78a5159402bb5380b8a427396ef65" kindref="member">getSusCFG</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a87298677e5d5c5a12dada5c485e6ff95" kindref="member">_susAuto</ref><sp/>=<sp/>s.<ref refid="classsystemc__clang_1_1SuspensionAutomata_1a295186ac19f69fe8bf49b502e70a25bd" kindref="member">getSauto</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/>if<sp/>(_instanceSusCFGMap.find(numInstance)<sp/>==<sp/>_instanceSusCFGMap.end()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/>_instanceSautoMap.find(numInstance)<sp/>==<sp/>_instanceSautoMap.end())<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_instanceSusCFGMap.insert(instanceSusCFGPairType(numInstance,</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/>s.getSusCFG()));<sp/>_instanceSautoMap.insert(instanceSautoPairType(numInstance,</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/>s.getSauto()));</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a78ecb16fc0215807a09edc69736feae7" kindref="member">EntryFunctionContainer::addNotifys</ref>(<ref refid="classsystemc__clang_1_1FindNotify" kindref="compound">FindNotify</ref><sp/>&amp;f)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNotify_1aebd5c90665011a52c5037b4953a6796f" kindref="member">FindNotify::NotifyCallListType</ref><sp/>ncalls<sp/>=<sp/>f.<ref refid="classsystemc__clang_1_1FindNotify_1aea9758772262f7d6600895170e250d0d" kindref="member">getNotifyCallList</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(FindNotify::NotifyCallListType::iterator<sp/>it<sp/>=<sp/>ncalls.begin(),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/>ncalls.end();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;it&apos;<sp/>points<sp/>to<sp/>CXXMembercallExpr<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1NotifyContainer" kindref="compound">NotifyContainer</ref><sp/>*nc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1NotifyContainer" kindref="compound">NotifyContainer</ref>(f.<ref refid="classsystemc__clang_1_1FindNotify_1a4ef8908d0c89c509f6bd3a5361c49fee" kindref="member">getEntryMethod</ref>(),<sp/>*it);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a30b698f732bc7c49b54294d479e3b637" kindref="member">_notifyCalls</ref>.push_back(nc);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//_processWaitEventMap<sp/>=<sp/>f.getProcessWaitEventMap();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a53fefda8580aa0f04e1254b86eded01b" kindref="member">EntryFunctionContainer::dumpSusCFG</ref>(raw_ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n#############################################&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SAUTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1SuspensionAutomata_1a28e552a993a2ea6ba41eec08e2e903b2" kindref="member">SuspensionAutomata::susCFGVectorType</ref><sp/>susCFGVector<sp/>=<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1afec0999cfbb34edb368ab2755e21cd7b" kindref="member">_susCFG</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>susCFGVector.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Block<sp/>ID<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>susCFGVector.at(i)-&gt;getBlockID();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Is<sp/>Wait<sp/>Block<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>susCFGVector.at(i)-&gt;isWaitBlock();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susCFGVector.at(i)-&gt;getParentBlockID())<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Parent<sp/>ID<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>susCFGVector.at(i)-&gt;getParentBlockID();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1SusCFG" kindref="compound">SusCFG</ref><sp/>*parentBlock<sp/>=<sp/>susCFGVector.at(i)-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a62f906a5658d0a1eea0c3af5900a60cf" kindref="member">getParentSusCFGBlock</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Parent<sp/>Block<sp/>ID<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a87b1bd459e23e5a90f714167047d9def" kindref="member">getBlockID</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Size<sp/>of<sp/>Children<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parentBlock-&gt;<ref refid="classsystemc__clang_1_1SusCFG_1a6aa20b36799667e001b7633a8790e43a" kindref="member">getChildBlockList</ref>().size();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>predBlocks<sp/>=<sp/>susCFGVector.at(i)-&gt;getPredBlocks();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;SusCFG<sp/>*&gt;<sp/>succBlocks<sp/>=<sp/>susCFGVector.at(i)-&gt;getSuccBlocks();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Predecessor<sp/>Blocks<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>predBlocks.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predBlocks.at(j))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>predBlocks.at(j)-&gt;getBlockID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Successor<sp/>Blocks<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>succBlocks.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(succBlocks.at(j))<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>succBlocks.at(j)-&gt;getBlockID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1afb3bc4c5e1fe3cd21def8771184c3f04" kindref="member">EntryFunctionContainer::dumpSauto</ref>(raw_ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SAUTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>vector&lt;Transition<sp/>*&gt;<sp/>transitionVector<sp/>=<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a87298677e5d5c5a12dada5c485e6ff95" kindref="member">_susAuto</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Size<sp/>of<sp/>transitionVector<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>transitionVector.size();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>transitionVector.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Transition" kindref="compound">Transition</ref><sp/>*t<sp/>=<sp/>transitionVector.at(i);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="classsystemc__clang_1_1Transition_1aa60225347fcc010bb8a77630dd52add4" kindref="member">dump</ref>(os);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a209e5491e0cb38a8a0a4fd0cbf47f298" kindref="member">EntryFunctionContainer::dump</ref>(raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tabn;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EntryFunctionContainer<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a8c4e6135b1fc18475ffd1ed6351925ea" kindref="member">getName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>processType<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1EntryFunctionContainer_1ad8229147a1e4fa479126e3761da2f202" kindref="member">getProcessType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138a57f8b9e1bf05e9058d703c68ac2d53b0" kindref="member">PROCESS_TYPE::THREAD</ref>:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SC_THREAD&apos;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138a725e74fd6435d86483781e2bd8e9d2c7" kindref="member">PROCESS_TYPE::METHOD</ref>:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SC_METHOD&apos;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138ac8d304bc25d6596b687ba2798223dd32" kindref="member">PROCESS_TYPE::CTHREAD</ref>:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SC_CTHREAD&apos;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NONE&apos;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>sensitivity<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(auto<sp/>const<sp/>&amp;sense<sp/>:<sp/>_senseMap)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>os<sp/>&lt;&lt;<sp/>&quot;sensitivity_signal:<sp/>&quot;<sp/>&lt;&lt;<sp/>sense.first<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;&lt;<sp/>&quot;edge:<sp/>&quot;<sp/>&lt;&lt;<sp/>get&lt;0&gt;(sense.second)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;&lt;<sp/>&quot;,<sp/>MemeberExpr*:<sp/>&quot;<sp/>&lt;&lt;<sp/>get&lt;1&gt;(sense.second)<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CXXMethodDecl<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a956d0b7c6e78ddb05b020323097d6ed7" kindref="member">getEntryMethod</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newTabn<sp/>=<sp/>++tabn;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Wait<sp/>Calls<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(waitContainerListType::iterator<sp/>it<sp/>=<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a74bebabfa45c0882208ddd53289e942d" kindref="member">_waitCalls</ref>.begin(),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a74bebabfa45c0882208ddd53289e942d" kindref="member">_waitCalls</ref>.end();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;dump(os,<sp/>newTabn);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Notify<sp/>Calls<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(notifyContainerListType::iterator<sp/>it<sp/>=<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a30b698f732bc7c49b54294d479e3b637" kindref="member">_notifyCalls</ref>.begin(),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/><ref refid="classsystemc__clang_1_1EntryFunctionContainer_1a30b698f732bc7c49b54294d479e3b637" kindref="member">_notifyCalls</ref>.end();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;dump(os,<sp/>newTabn);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>os<sp/>&lt;&lt;<sp/>&quot;\n<sp/>Suspension<sp/>CFG&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>os<sp/>&lt;&lt;<sp/>&quot;\n<sp/>###############&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dumpSusCFG(os);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>os<sp/>&lt;&lt;<sp/>&quot;\n<sp/>###############&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>os<sp/>&lt;&lt;<sp/>&quot;\n<sp/>Suspension<sp/>Automaton&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>os<sp/>&lt;&lt;<sp/>&quot;\n<sp/>@@@@@@@@@@@@@@@@&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dumpSauto(os);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>os<sp/>&lt;&lt;<sp/>&quot;\n<sp/>@@@@@@@@@@@@@@@@&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/model/EntryFunctionContainer.cpp"/>
  </compounddef>
</doxygen>
