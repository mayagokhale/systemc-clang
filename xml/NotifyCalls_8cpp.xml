<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="NotifyCalls_8cpp" kind="file" language="C++">
    <compoundname>NotifyCalls.cpp</compoundname>
    <includes refid="NotifyCalls_8h" local="yes">NotifyCalls.h</includes>
    <incdepgraph>
      <node id="10">
        <label>clang/Basic/SourceManager.h</label>
      </node>
      <node id="6">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="9">
        <label>clang/AST/PrettyPrinter.h</label>
      </node>
      <node id="5">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="3">
        <label>FindNotify.h</label>
        <link refid="FindNotify_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Utility.h</label>
        <link refid="Utility_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>clang/AST/DeclCXX.h</label>
      </node>
      <node id="2">
        <label>NotifyCalls.h</label>
        <link refid="NotifyCalls_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/model/NotifyCalls.cpp</label>
        <link refid="NotifyCalls_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="NotifyCalls_8h" kindref="compound">NotifyCalls.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="classsystemc__clang_1_1NotifyCalls_1a7ad6c371f5e19ffa8d9dfa40295bc033" kindref="member">NotifyCalls::~NotifyCalls</ref>()<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_astNode<sp/>does<sp/>*NOT*<sp/>need<sp/>to<sp/>be<sp/>deleted<sp/>because<sp/>clang<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>responsible<sp/>for<sp/>freeing<sp/>the<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="classsystemc__clang_1_1NotifyCalls_1a6e4eadb356a0ac1576d4fad6cd81f897" kindref="member">NotifyCalls::NotifyCalls</ref>()<sp/>:<sp/>name_{</highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">}<sp/>{}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">NotifyCalls::NotifyCalls(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;name,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNotify_1aebd5c90665011a52c5037b4953a6796f" kindref="member">FindNotify::NotifyCallListType</ref><sp/>notify_list)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>name_{name},<sp/>notify_call_list_{notify_list}<sp/>{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">NotifyCalls::NotifyCalls(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1NotifyCalls" kindref="compound">NotifyCalls</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1a260ab066f951af1203db230eef98ffdb" kindref="member">name_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1NotifyCalls_1a260ab066f951af1203db230eef98ffdb" kindref="member">name_</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1abea71681d233e979c80c5f615172f606" kindref="member">notify_call_list_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1NotifyCalls_1abea71681d233e979c80c5f615172f606" kindref="member">notify_call_list_</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1a0fd6ea73ffc69bb99bbfeab04d4e4359" kindref="member">NotifyCalls::getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1a260ab066f951af1203db230eef98ffdb" kindref="member">name_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindNotify_1aebd5c90665011a52c5037b4953a6796f" kindref="member">FindNotify::NotifyCallListType</ref><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1a04b92e1b2cf254c553ef603a3096e17a" kindref="member">NotifyCalls::getNotifyCallList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1abea71681d233e979c80c5f615172f606" kindref="member">notify_call_list_</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1a31dceb473a9f326f61da1e8b20b6d908" kindref="member">NotifyCalls::getNumNotifyCalls</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1abea71681d233e979c80c5f615172f606" kindref="member">notify_call_list_</ref>.size();</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1a22fd4c18479f3adb28a1d05e582da7f4" kindref="member">NotifyCalls::dump</ref>(llvm::raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1abea71681d233e979c80c5f615172f606" kindref="member">notify_call_list_</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/>Notify<sp/>Call:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1NotifyCalls_1abea71681d233e979c80c5f615172f606" kindref="member">notify_call_list_</ref>.at(i);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/model/NotifyCalls.cpp"/>
  </compounddef>
</doxygen>
