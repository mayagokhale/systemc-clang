<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="FindGPUMacro_8cpp" kind="file" language="C++">
    <compoundname>FindGPUMacro.cpp</compoundname>
    <includes refid="FindGPUMacro_8h" local="yes">FindGPUMacro.h</includes>
    <includes local="yes">clang/AST/ASTContext.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/SCuitable/FindGPUMacro.cpp</label>
        <link refid="FindGPUMacro_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>clang/AST/ASTContext.h</label>
      </node>
      <node id="5">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="4">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="2">
        <label>FindGPUMacro.h</label>
        <link refid="FindGPUMacro_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>clang/AST/DeclCXX.h</label>
      </node>
      <node id="7">
        <label>set</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FindGPUMacro_8h" kindref="compound">FindGPUMacro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clang/AST/ASTContext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="classsystemc__clang_1_1GPUMacro_1af05ea14efc34ed971726a8f63f296ff6" kindref="member">GPUMacro::GPUMacro</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockIdx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockIdy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockIdz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadIdx,</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadIdy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadIdz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpuTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cpuTime)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_blockIdx(blockIdx),<sp/>_blockIdy(blockIdy),<sp/>_blockIdz(blockIdz),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_threadIdx(threadIdx),<sp/>_threadIdy(threadIdy),<sp/>_threadIdz(threadIdz),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_gpuTime(gpuTime),<sp/>_cpuTime(cpuTime),<sp/>_gpuFit(false)<sp/>{}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">GPUMacro::GPUMacro()</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_blockIdx(1),<sp/>_blockIdy(1),<sp/>_blockIdz(1),<sp/>_threadIdx(1),<sp/>_threadIdy(1),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_threadIdz(1),<sp/>_gpuTime(0),<sp/>_cpuTime(0),<sp/>_gpuFit(false)<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">GPUMacro::~GPUMacro()<sp/>{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1ae2fa35f05616f3ac77f11eccd2acbc14" kindref="member">GPUMacro::addGPUFit</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a9b1a0381f39e36104fad9f64658c8b1f" kindref="member">_gpuFit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1adf2128a246b24e13330e59f99db46ff9" kindref="member">GPUMacro::denyGPUFit</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a9b1a0381f39e36104fad9f64658c8b1f" kindref="member">_gpuFit</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a55930ac68902786908bf08cdcc4ccd13" kindref="member">GPUMacro::isGPUFit</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a9b1a0381f39e36104fad9f64658c8b1f" kindref="member">_gpuFit</ref>;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1aa93a604a0d682d38ea524d6ee2bc79d6" kindref="member">GPUMacro::getBlockIdx</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a06f803a27fdc9e008f8cc1904400ec5c" kindref="member">_blockIdx</ref>;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1ad2c027b2c20fe2eafb882b4087ff265e" kindref="member">GPUMacro::getBlockIdy</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a4ca499a59b50cebf760f95c4220ef463" kindref="member">_blockIdy</ref>;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1ace526615dea7ed936e25a6ecf93ea138" kindref="member">GPUMacro::getBlockIdz</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a2b6b46b2957fbe97a815b437b3346f5b" kindref="member">_blockIdz</ref>;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1ab348265f86258f210a9be7bc35f77d13" kindref="member">GPUMacro::getThreadIdx</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1aa11a64d7561d885020a41d1415d760d1" kindref="member">_threadIdx</ref>;<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a0331700e0828b07120ef8f12f340049d" kindref="member">GPUMacro::getThreadIdy</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1aa11a64d7561d885020a41d1415d760d1" kindref="member">_threadIdx</ref>;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a904d8a5936cfe65ae875ea9b5fd14dc6" kindref="member">GPUMacro::getThreadIdz</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1aa0c70be95d461aff5063a21467906dc8" kindref="member">_threadIdz</ref>;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1abe0492628920eac96ed31fac90193917" kindref="member">GPUMacro::getCPUTime</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a2575febfce15bdc3d8909cfb188fa680" kindref="member">_cpuTime</ref>;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1aa6a4895dd19fc7b3000cf3b280899967" kindref="member">GPUMacro::getGPUTime</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a16a787c0743b526b0f9fe0b3104369bb" kindref="member">_gpuTime</ref>;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro_1aebb803764900c516e481a1de86b0ab9e" kindref="member">GPUMacro::dump</ref>(raw_ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Block<sp/>Ids<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a06f803a27fdc9e008f8cc1904400ec5c" kindref="member">_blockIdx</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a4ca499a59b50cebf760f95c4220ef463" kindref="member">_blockIdy</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a2b6b46b2957fbe97a815b437b3346f5b" kindref="member">_blockIdz</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Thread<sp/>Ids<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1aa11a64d7561d885020a41d1415d760d1" kindref="member">_threadIdx</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a1be3f3799006c7139cc3eac1e8d02fa8" kindref="member">_threadIdy</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1aa0c70be95d461aff5063a21467906dc8" kindref="member">_threadIdz</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>GPU<sp/>time<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a16a787c0743b526b0f9fe0b3104369bb" kindref="member">_gpuTime</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CPU<sp/>time<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1GPUMacro_1a2575febfce15bdc3d8909cfb188fa680" kindref="member">_cpuTime</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindGPUMacro_1aea431d5876e7516bc625cba21c76b64a" kindref="member">FindGPUMacro::FindGPUMacro</ref>(CXXMethodDecl<sp/>*entryFunction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instanceNum,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::raw_ostream<sp/>&amp;os)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_entryFunction(entryFunction),<sp/>_instanceNum(instanceNum),<sp/>_os(os)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>TraverseDecl(_entryFunction);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">FindGPUMacro::~FindGPUMacro()<sp/>{}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1abd57d2e4a9f5506173809f3d73f94ca7" kindref="member">FindGPUMacro::VisitForStmt</ref>(ForStmt<sp/>*fstmt)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>Stmt<sp/>*body<sp/>=<sp/>fstmt-&gt;getBody();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a13d5c9fb1fc5ce6b5e01c5aad15dbe68" kindref="member">analyze_data_struct</ref>(body);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tx<sp/>=<sp/>1,<sp/>ty<sp/>=<sp/>1,<sp/>tz<sp/>=<sp/>1,<sp/>bx<sp/>=<sp/>1,<sp/>by<sp/>=<sp/>1,<sp/>bz<sp/>=<sp/>1,<sp/>gpu_time<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpu_time<sp/>=<sp/>0,<sp/>instanceNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Stmt::child_iterator<sp/>it<sp/>=<sp/>body-&gt;child_begin(),<sp/>eit<sp/>=<sp/>body-&gt;child_end();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Stmt<sp/>*s<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DeclStmt<sp/>*ds<sp/>=<sp/>dyn_cast&lt;DeclStmt&gt;(s))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VarDecl<sp/>*vd<sp/>=<sp/>dyn_cast&lt;VarDecl&gt;(ds-&gt;getSingleDecl()))<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>className<sp/>=<sp/>vd-&gt;getTypeSourceInfo()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getType()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.getBaseTypeIdentifier()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getName();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(className<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;profile_time&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXConstructExpr<sp/>*ce<sp/>=</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyn_cast&lt;CXXConstructExpr&gt;(vd-&gt;getInit()-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MaterializeTemporaryExpr<sp/>*me<sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyn_cast&lt;MaterializeTemporaryExpr&gt;(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce-&gt;getArg(0)-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXTemporaryObjectExpr<sp/>*co<sp/>=<sp/>dyn_cast&lt;CXXTemporaryObjectExpr&gt;(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;GetTemporaryExpr()-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*x<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(0));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*y<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(1));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*z<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(2));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instanceNum<sp/>=<sp/>x-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpu_time<sp/>=<sp/>y-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpu_time<sp/>=<sp/>z-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(className<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_gpu_thread_hierarchy&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXConstructExpr<sp/>*ce<sp/>=</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyn_cast&lt;CXXConstructExpr&gt;(vd-&gt;getInit()-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MaterializeTemporaryExpr<sp/>*me<sp/>=</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyn_cast&lt;MaterializeTemporaryExpr&gt;(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce-&gt;getArg(0)-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXTemporaryObjectExpr<sp/>*co<sp/>=<sp/>dyn_cast&lt;CXXTemporaryObjectExpr&gt;(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;GetTemporaryExpr()-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*x<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(1));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*y<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(2));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*z<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(3));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*w<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(4));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instanceNum<sp/>=<sp/>x-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx<sp/>=<sp/>x-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty<sp/>=<sp/>y-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tz<sp/>=<sp/>z-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(className<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_gpu_block_hierarchy&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXConstructExpr<sp/>*ce<sp/>=</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyn_cast&lt;CXXConstructExpr&gt;(vd-&gt;getInit()-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MaterializeTemporaryExpr<sp/>*me<sp/>=</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyn_cast&lt;MaterializeTemporaryExpr&gt;(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce-&gt;getArg(0)-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CXXTemporaryObjectExpr<sp/>*co<sp/>=<sp/>dyn_cast&lt;CXXTemporaryObjectExpr&gt;(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;GetTemporaryExpr()-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*x<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(1));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*y<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(2));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*z<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(3));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerLiteral<sp/>*w<sp/>=<sp/>dyn_cast&lt;IntegerLiteral&gt;(co-&gt;getArg(4));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instanceNum<sp/>=<sp/>x-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>y-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>=<sp/>z-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bz<sp/>=<sp/>w-&gt;getValue().getSExtValue();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>gpu_time<sp/>:<sp/>&quot;<sp/>&lt;&lt;gpu_time&lt;&lt;&quot;<sp/>cpu_time<sp/>:<sp/>&quot;<sp/>&lt;&lt;cpu_time&lt;&lt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//instanceNum<sp/>:<sp/>&quot;<sp/>&lt;&lt;_instanceNum&lt;&lt;&quot;<sp/>&quot;<sp/>&lt;&lt;instanceNum;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx<sp/>&amp;&amp;<sp/>ty<sp/>&amp;&amp;<sp/>tz<sp/>&amp;&amp;<sp/>bx<sp/>&amp;&amp;<sp/>by<sp/>&amp;&amp;<sp/>bz<sp/>&amp;&amp;<sp/>gpu_time<sp/>&amp;&amp;<sp/>cpu_time<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classsystemc__clang_1_1FindGPUMacro_1aa10739a2026c42b81edccb90f8387ce4" kindref="member">_instanceNum</ref><sp/>==<sp/>instanceNum))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>instance<sp/>num<sp/>:<sp/>&quot;<sp/>&lt;&lt;_instanceNum&lt;&lt;&quot;<sp/>&quot;<sp/>&lt;&lt;instanceNum;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1GPUMacro" kindref="compound">GPUMacro</ref><sp/>*gm<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1GPUMacro" kindref="compound">GPUMacro</ref>(bx,<sp/>by,<sp/>bz,<sp/>tx,<sp/>ty,<sp/>tz,<sp/>gpu_time,<sp/>cpu_time);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_os<sp/>&lt;&lt;&quot;\n<sp/>for<sp/>stmt<sp/>:<sp/>&quot;<sp/>&lt;&lt;fstmt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a9bed9afe2922108381ef0ac5bb3505de" kindref="member">forStmtInstanceIdPairType</ref><sp/>forStmtInstanceId<sp/>=</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_pair(<ref refid="classsystemc__clang_1_1FindGPUMacro_1aa10739a2026c42b81edccb90f8387ce4" kindref="member">_instanceNum</ref>,<sp/>fstmt);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a0a3753815bf244ca9118488308efc72f" kindref="member">_forStmtGPUMacroMap</ref>.insert(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a86a326f526c790d043be6ec3df04ca64" kindref="member">forStmtGPUMacroPairType</ref>(forStmtInstanceId,<sp/>gm));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindGPUMacro_1a683dfecf001a3f455e3894ac825ca1bc" kindref="member">FindGPUMacro::forStmtGPUMacroMapType</ref><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a3f0922dcab5a57b789e4775040a6eb09" kindref="member">FindGPUMacro::getForStmtGPUMacroMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a0a3753815bf244ca9118488308efc72f" kindref="member">_forStmtGPUMacroMap</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1acaedef9bd33bbe2f5089ea7033dca696" kindref="member">FindGPUMacro::dump</ref>()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>For<sp/>Stmt<sp/>GPU<sp/>Macro&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(forStmtGPUMacroMapType::iterator<sp/>it<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a0a3753815bf244ca9118488308efc72f" kindref="member">_forStmtGPUMacroMap</ref>.begin(),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a0a3753815bf244ca9118488308efc72f" kindref="member">_forStmtGPUMacroMap</ref>.end();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>For<sp/>Stmt<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first.second;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>GPU<sp/>kernel<sp/>parameters<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;second-&gt;dump(<ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a4b22fcf68700ffc2f5248b9ab6320eb8" kindref="member">FindGPUMacro::analyze_value_decl</ref>(ValueDecl<sp/>*val)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>QualType<sp/>type<sp/>=<sp/>val-&gt;getType();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/>std::pair&lt;uint64_t,<sp/>unsigned&gt;<sp/>fieldInfo<sp/>=</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>val-&gt;getASTContext().getTypeInfo(val-&gt;getType());</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/>uint64_t<sp/>typeSize<sp/>=<sp/>fieldInfo.first;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/>unsigned<sp/>fieldAlign<sp/>=<sp/>fieldInfo.second;</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/>_os<sp/>&lt;&lt;<sp/>&quot;base<sp/>type:<sp/>&quot;<sp/>&lt;&lt;<sp/>type.getCanonicalType().getAsString()</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,<sp/>size<sp/>(bits):<sp/>&quot;<sp/>&lt;&lt;<sp/>typeSize</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;,<sp/>align<sp/>(bits):<sp/>&quot;<sp/>&lt;&lt;<sp/>fieldAlign</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1aaae5bfdcf88c055011d0a594d4aed2e8" kindref="member">FindGPUMacro::analyze_array_base</ref>(Expr<sp/>*base,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLHS)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CastExpr<sp/>*cast<sp/>=<sp/>dyn_cast&lt;CastExpr&gt;(base))<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>Expr<sp/>*subExpr<sp/>=<sp/>cast-&gt;getSubExpr();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DeclRefExpr<sp/>*declRef<sp/>=<sp/>dyn_cast&lt;DeclRefExpr&gt;(subExpr))<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLHS)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1aa73c9642fd8f219f60ec0311e06146a4" kindref="member">lhs_decls</ref>.insert(declRef-&gt;getDecl());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LHS:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a39fec397d1fe11c9268ffc79aa440c9b" kindref="member">rhs_decls</ref>.insert(declRef-&gt;getDecl());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RHS:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a4b22fcf68700ffc2f5248b9ab6320eb8" kindref="member">analyze_value_decl</ref>(declRef-&gt;getDecl());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MemberExpr<sp/>*member<sp/>=<sp/>dyn_cast&lt;MemberExpr&gt;(subExpr))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLHS)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1aa73c9642fd8f219f60ec0311e06146a4" kindref="member">lhs_decls</ref>.insert(member-&gt;getMemberDecl());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LHS:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a39fec397d1fe11c9268ffc79aa440c9b" kindref="member">rhs_decls</ref>.insert(member-&gt;getMemberDecl());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RHS:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a4b22fcf68700ffc2f5248b9ab6320eb8" kindref="member">analyze_value_decl</ref>(member-&gt;getMemberDecl());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>not<sp/>a<sp/>DeclRefExpr&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cast-&gt;getStmtClassName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>not<sp/>a<sp/>CastExpr&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cast-&gt;getStmtClassName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">FindGPUMacro::analyze_lhs</ref>(Expr<sp/>*expr)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ArraySubscriptExpr<sp/>*array<sp/>=<sp/>dyn_cast&lt;ArraySubscriptExpr&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>Expr<sp/>*base<sp/>=<sp/>array-&gt;getBase();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>Expr<sp/>*idx<sp/>=<sp/>array-&gt;getIdx();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1aaae5bfdcf88c055011d0a594d4aed2e8" kindref="member">analyze_array_base</ref>(base,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>isLHS<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CastExpr<sp/>*cast<sp/>=<sp/>dyn_cast&lt;CastExpr&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">analyze_lhs</ref>(cast-&gt;getSubExpr());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ParenExpr<sp/>*paren<sp/>=<sp/>dyn_cast&lt;ParenExpr&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">analyze_lhs</ref>(paren-&gt;getSubExpr());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BinaryOperator<sp/>*binOp<sp/>=<sp/>dyn_cast&lt;BinaryOperator&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binOp-&gt;isAssignmentOp())<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">analyze_lhs</ref>(binOp-&gt;getLHS());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(binOp-&gt;getRHS());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binOp-&gt;isCompoundAssignmentOp())<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">analyze_lhs</ref>(binOp-&gt;getLHS());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(binOp-&gt;getRHS());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Operation<sp/>without<sp/>effects<sp/>on<sp/>LHS:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>binOp-&gt;getStmtClassName()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">FindGPUMacro::analyze_rhs</ref>(Expr<sp/>*expr)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ArraySubscriptExpr<sp/>*array<sp/>=<sp/>dyn_cast&lt;ArraySubscriptExpr&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Expr<sp/>*base<sp/>=<sp/>array-&gt;getBase();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>Expr<sp/>*idx<sp/>=<sp/>array-&gt;getIdx();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1aaae5bfdcf88c055011d0a594d4aed2e8" kindref="member">analyze_array_base</ref>(base,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>isLHS<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CastExpr<sp/>*cast<sp/>=<sp/>dyn_cast&lt;CastExpr&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(cast-&gt;getSubExpr());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ParenExpr<sp/>*paren<sp/>=<sp/>dyn_cast&lt;ParenExpr&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(paren-&gt;getSubExpr());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BinaryOperator<sp/>*binOp<sp/>=<sp/>dyn_cast&lt;BinaryOperator&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binOp-&gt;isAssignmentOp())<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">analyze_lhs</ref>(binOp-&gt;getLHS());</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(binOp-&gt;getRHS());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binOp-&gt;isCompoundAssignmentOp())<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">analyze_lhs</ref>(binOp-&gt;getLHS());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(binOp-&gt;getRHS());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(binOp-&gt;getLHS());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(binOp-&gt;getRHS());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a2d7490f57f7352b4215b4e4c5c10b83f" kindref="member">FindGPUMacro::analyze_expr</ref>(Expr<sp/>*expr)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BinaryOperator<sp/>*binOp<sp/>=<sp/>dyn_cast&lt;BinaryOperator&gt;(expr))<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binOp-&gt;isAssignmentOp())<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">analyze_lhs</ref>(binOp-&gt;getLHS());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(binOp-&gt;getRHS());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binOp-&gt;isCompoundAssignmentOp())<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a7751077a1b308787ac2e86329111e3ff" kindref="member">analyze_lhs</ref>(binOp-&gt;getLHS());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a54308a9bfed0ec7d5c56f21d2358574d" kindref="member">analyze_rhs</ref>(binOp-&gt;getRHS());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Operation<sp/>without<sp/>effects:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>binOp-&gt;getStmtClassName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a13d5c9fb1fc5ce6b5e01c5aad15dbe68" kindref="member">FindGPUMacro::analyze_data_struct</ref>(Stmt<sp/>*stmtList)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stmtList)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nNEW<sp/>FORLOOP<sp/>BEGIN\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Stmt::child_iterator<sp/>itr<sp/>=<sp/>stmtList-&gt;child_begin();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>!=<sp/>stmtList-&gt;child_end();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>Stmt<sp/>*stmt<sp/>=<sp/>*itr;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stmt)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Expr<sp/>*expr<sp/>=<sp/>dyn_cast&lt;Expr&gt;(stmt);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!expr)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>out<sp/>the<sp/>AST<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>expr-&gt;dump();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a2d7490f57f7352b4215b4e4c5c10b83f" kindref="member">analyze_expr</ref>(expr);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::set&lt;ValueDecl<sp/>*&gt;::iterator<sp/>itr<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1aa73c9642fd8f219f60ec0311e06146a4" kindref="member">lhs_decls</ref>.begin();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>!=<sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1aa73c9642fd8f219f60ec0311e06146a4" kindref="member">lhs_decls</ref>.end();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LHS<sp/>ValueDecl<sp/>AST<sp/>Node:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*itr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Name:<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(*itr)-&gt;getNameAsString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a4b22fcf68700ffc2f5248b9ab6320eb8" kindref="member">analyze_value_decl</ref>(*itr);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::set&lt;ValueDecl<sp/>*&gt;::iterator<sp/>itr<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a39fec397d1fe11c9268ffc79aa440c9b" kindref="member">rhs_decls</ref>.begin();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>!=<sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a39fec397d1fe11c9268ffc79aa440c9b" kindref="member">rhs_decls</ref>.end();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RHS<sp/>ValueDecl<sp/>AST<sp/>Node:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*itr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Name:<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(*itr)-&gt;getNameAsString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1a4b22fcf68700ffc2f5248b9ab6320eb8" kindref="member">analyze_value_decl</ref>(*itr);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindGPUMacro_1af80cd73149352603f357c75377e93c5f" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NEW<sp/>FORLOOP<sp/>END\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/SCuitable/FindGPUMacro.cpp"/>
  </compounddef>
</doxygen>
