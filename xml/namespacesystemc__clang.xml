<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacesystemc__clang" kind="namespace" language="C++">
    <compoundname>systemc_clang</compoundname>
    <innerclass refid="classsystemc__clang_1_1FindArgument" prot="public">systemc_clang::FindArgument</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindConstructor" prot="public">systemc_clang::FindConstructor</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindEntryFunctions" prot="public">systemc_clang::FindEntryFunctions</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindEvents" prot="public">systemc_clang::FindEvents</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindGlobalEvents" prot="public">systemc_clang::FindGlobalEvents</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindNetlist" prot="public">systemc_clang::FindNetlist</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindNotify" prot="public">systemc_clang::FindNotify</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindPorts" prot="public">systemc_clang::FindPorts</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindSCMain" prot="public">systemc_clang::FindSCMain</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindSCModules" prot="public">systemc_clang::FindSCModules</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindSimTime" prot="public">systemc_clang::FindSimTime</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindTemplateParameters" prot="public">systemc_clang::FindTemplateParameters</innerclass>
    <innerclass refid="classsystemc__clang_1_1TemplateType" prot="public">systemc_clang::TemplateType</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindTemplateTypes" prot="public">systemc_clang::FindTemplateTypes</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindTLMInterfaces" prot="public">systemc_clang::FindTLMInterfaces</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindWait" prot="public">systemc_clang::FindWait</innerclass>
    <innerclass refid="classsystemc__clang_1_1EntryFunctionContainer" prot="public">systemc_clang::EntryFunctionContainer</innerclass>
    <innerclass refid="classsystemc__clang_1_1EventContainer" prot="public">systemc_clang::EventContainer</innerclass>
    <innerclass refid="classsystemc__clang_1_1EventDecl" prot="public">systemc_clang::EventDecl</innerclass>
    <innerclass refid="classsystemc__clang_1_1InterfaceDecl" prot="public">systemc_clang::InterfaceDecl</innerclass>
    <innerclass refid="classsystemc__clang_1_1Model" prot="public">systemc_clang::Model</innerclass>
    <innerclass refid="classsystemc__clang_1_1ModuleInstance" prot="public">systemc_clang::ModuleInstance</innerclass>
    <innerclass refid="classsystemc__clang_1_1NotifyCalls" prot="public">systemc_clang::NotifyCalls</innerclass>
    <innerclass refid="classsystemc__clang_1_1NotifyContainer" prot="public">systemc_clang::NotifyContainer</innerclass>
    <innerclass refid="classsystemc__clang_1_1PortBinding" prot="public">systemc_clang::PortBinding</innerclass>
    <innerclass refid="classsystemc__clang_1_1PortDecl" prot="public">systemc_clang::PortDecl</innerclass>
    <innerclass refid="classsystemc__clang_1_1ProcessDecl" prot="public">systemc_clang::ProcessDecl</innerclass>
    <innerclass refid="classsystemc__clang_1_1SignalDecl" prot="public">systemc_clang::SignalDecl</innerclass>
    <innerclass refid="classsystemc__clang_1_1WaitCalls" prot="public">systemc_clang::WaitCalls</innerclass>
    <innerclass refid="classsystemc__clang_1_1WaitContainer" prot="public">systemc_clang::WaitContainer</innerclass>
    <innerclass refid="classsystemc__clang_1_1SystemCClangAXN" prot="public">systemc_clang::SystemCClangAXN</innerclass>
    <innerclass refid="classsystemc__clang_1_1PluginAction" prot="public">systemc_clang::PluginAction</innerclass>
    <innerclass refid="classsystemc__clang_1_1Node" prot="public">systemc_clang::Node</innerclass>
    <innerclass refid="classsystemc__clang_1_1Edge" prot="public">systemc_clang::Edge</innerclass>
    <innerclass refid="classsystemc__clang_1_1Graph" prot="public">systemc_clang::Graph</innerclass>
    <innerclass refid="classsystemc__clang_1_1GPUMacro" prot="public">systemc_clang::GPUMacro</innerclass>
    <innerclass refid="classsystemc__clang_1_1FindGPUMacro" prot="public">systemc_clang::FindGPUMacro</innerclass>
    <innerclass refid="classsystemc__clang_1_1GlobalSuspensionAutomata" prot="public">systemc_clang::GlobalSuspensionAutomata</innerclass>
    <innerclass refid="classsystemc__clang_1_1SusCFG" prot="public">systemc_clang::SusCFG</innerclass>
    <innerclass refid="classsystemc__clang_1_1State" prot="public">systemc_clang::State</innerclass>
    <innerclass refid="classsystemc__clang_1_1Transition" prot="public">systemc_clang::Transition</innerclass>
    <innerclass refid="classsystemc__clang_1_1SuspensionAutomata" prot="public">systemc_clang::SuspensionAutomata</innerclass>
    <innerclass refid="classsystemc__clang_1_1Utility" prot="public">systemc_clang::Utility</innerclass>
    <innerclass refid="classsystemc__clang_1_1SystemCConsumer" prot="public">systemc_clang::SystemCConsumer</innerclass>
    <innerclass refid="classsystemc__clang_1_1SystemCClang" prot="public">systemc_clang::SystemCClang</innerclass>
    <innerclass refid="classsystemc__clang_1_1TreeNode" prot="public">systemc_clang::TreeNode</innerclass>
    <innerclass refid="classsystemc__clang_1_1Tree" prot="public">systemc_clang::Tree</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacesystemc__clang_1a0891e13e2390eb5b553cdb2444cc6ed0" prot="public" static="no" strong="yes">
        <type></type>
        <name>ASTSTATE</name>
        <enumvalue id="namespacesystemc__clang_1a0891e13e2390eb5b553cdb2444cc6ed0aba2b45bdc11e2a4a6e86aab2ac693cbb" prot="public">
          <name>EMPTY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1a0891e13e2390eb5b553cdb2444cc6ed0ab998b1f86d447ffc5afa90e2e466cb02" prot="public">
          <name>DECLSTMT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1a0891e13e2390eb5b553cdb2444cc6ed0ab3c11db97b6fde04c65d8c7339452301" prot="public">
          <name>MEMBEREXPR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1a0891e13e2390eb5b553cdb2444cc6ed0ab5aa8684345ea985beb2e96cab2596f6" prot="public">
          <name>CXXOPERATORCALLEXPR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1a0891e13e2390eb5b553cdb2444cc6ed0a4bd2ab89483baadfa7f587b4bb843af5" prot="public">
          <name>CXXCONSTRUCTEXPR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/enums.h" line="18" column="1" bodyfile="src/enums.h" bodystart="18" bodyend="24"/>
      </memberdef>
      <memberdef kind="enum" id="namespacesystemc__clang_1ab36fceca143b68d208bcc1289a35a188" prot="public" static="no" strong="yes">
        <type></type>
        <name>ReadWrite</name>
        <enumvalue id="namespacesystemc__clang_1ab36fceca143b68d208bcc1289a35a188a242d078b6ae90bf2141c88c533c8a27f" prot="public">
          <name>RWINIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1ab36fceca143b68d208bcc1289a35a188a3466fab4975481651940ed328aa990e4" prot="public">
          <name>READ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1ab36fceca143b68d208bcc1289a35a188ad4b9e47f65b6e79b010582f15785867e" prot="public">
          <name>WRITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/enums.h" line="26" column="1" bodyfile="src/enums.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="enum" id="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138" prot="public" static="no" strong="yes">
        <type></type>
        <name>PROCESS_TYPE</name>
        <enumvalue id="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138ab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138a57f8b9e1bf05e9058d703c68ac2d53b0" prot="public">
          <name>THREAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138ac8d304bc25d6596b687ba2798223dd32" prot="public">
          <name>CTHREAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesystemc__clang_1aee628e0c13dbaaeb824bd830dc47a138a725e74fd6435d86483781e2bd8e9d2c7" prot="public">
          <name>METHOD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/enums.h" line="28" column="1" bodyfile="src/enums.h" bodystart="28" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>typedef nlohmann::json systemc_clang::json</definition>
        <argsstring></argsstring>
        <name>json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindGlobalEvents.h" line="16" column="2" bodyfile="src/matchers/FindGlobalEvents.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacesystemc__clang_1a24221f7aa44f163d9275a2a0bf58ff06" prot="public" static="no" mutable="no">
        <type>std::ifstream</type>
        <definition>std::ifstream systemc_clang::file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Testing.h" line="11" column="15" bodyfile="src/Testing.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacesystemc__clang_1ae4bc987a36339cf2500e8275270d846e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::cl::OptionCategory</type>
        <definition>static llvm::cl::OptionCategory systemc_clang::category</definition>
        <argsstring>(&quot;systemc-clang options&quot;)</argsstring>
        <name>category</name>
        <param>
          <type>&quot;systemc-clang options&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/PluginAction.h" line="27" column="33" declfile="src/PluginAction.h" declline="27" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="namespacesystemc__clang_1a9bbec4d30c99db5f22df7dfa47f6bcfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::cl::opt&lt; bool &gt;</type>
        <definition>static llvm::cl::opt&lt;bool&gt; systemc_clang::debug_mode</definition>
        <argsstring>(&quot;debug&quot;, llvm::cl::desc(&quot;Enable debug output from systemc-clang&quot;), llvm::cl::cat(category))</argsstring>
        <name>debug_mode</name>
        <param>
          <type>&quot;debug&quot;</type>
        </param>
        <param>
          <type>llvm::cl::desc(&quot;Enable debug output from systemc-clang&quot;)</type>
        </param>
        <param>
          <type>llvm::cl::cat(category)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/PluginAction.h" line="33" column="22" declfile="src/PluginAction.h" declline="33" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespacesystemc__clang_1a47321d254494e98e4a363e45ddb1960a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::cl::opt&lt; std::string &gt;</type>
        <definition>static llvm::cl::opt&lt;std::string&gt; systemc_clang::debug_only</definition>
        <argsstring>(&quot;debug-only&quot;, llvm::cl::desc(&quot;Enable debug only for the specified DEBUG_TYPE&quot;), llvm::cl::cat(category))</argsstring>
        <name>debug_only</name>
        <param>
          <type>&quot;debug-only&quot;</type>
        </param>
        <param>
          <type>llvm::cl::desc(&quot;Enable debug only for the specified <ref refid="TemplateParametersMatcher_8h_1ad78e062f62e0d6e453941fb4ca843e4d" kindref="member">DEBUG_TYPE</ref>&quot;)</type>
        </param>
        <param>
          <type>llvm::cl::cat(category)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/PluginAction.h" line="37" column="22" declfile="src/PluginAction.h" declline="37" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespacesystemc__clang_1a1b591007cd72b04c83e568db359ca573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string systemc_clang::to_string</definition>
        <argsstring>(T *pointer)</argsstring>
        <name>to_string</name>
        <param>
          <type>T *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/systemc-clang.h" line="12" column="13" bodyfile="src/systemc-clang.h" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespacesystemc__clang_1a7b8a4967050779d55cef83614413aafe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string systemc_clang::read_systemc_file</definition>
        <argsstring>(std::string const data_dir, std::string const name)</argsstring>
        <name>read_systemc_file</name>
        <param>
          <type>std::string const</type>
          <declname>data_dir</declname>
        </param>
        <param>
          <type>std::string const</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Testing.h" line="13" column="13" bodyfile="src/Testing.h" bodystart="13" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/enums.h" line="17" column="1"/>
  </compounddef>
</doxygen>
