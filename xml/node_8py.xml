<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="node_8py" kind="file" language="Python">
    <compoundname>node.py</compoundname>
    <innerclass refid="classparselib_1_1transforms_1_1node_1_1Node" prot="public">parselib::transforms::node::Node</innerclass>
    <innerclass refid="classparselib_1_1transforms_1_1node_1_1Statement" prot="public">parselib::transforms::node::Statement</innerclass>
    <innerclass refid="classparselib_1_1transforms_1_1node_1_1Expression" prot="public">parselib::transforms::node::Expression</innerclass>
    <innerclass refid="classparselib_1_1transforms_1_1node_1_1Always" prot="public">parselib::transforms::node::Always</innerclass>
    <innerclass refid="classparselib_1_1transforms_1_1node_1_1ArrayDeref" prot="public">parselib::transforms::node::ArrayDeref</innerclass>
    <innerclass refid="classparselib_1_1transforms_1_1node_1_1TypeDefType" prot="public">parselib::transforms::node::TypeDefType</innerclass>
    <innernamespace refid="namespaceparselib_1_1transforms_1_1node">parselib::transforms::node</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceparselib_1_1transforms_1_1node" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>lark<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Tree</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>copy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>deepcopy</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="classparselib_1_1transforms_1_1node_1_1Node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1Node" kindref="compound">Node</ref>:</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1Node_1a2f1c8462578ea9208c8df0d8c5220331" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classparselib_1_1transforms_1_1node_1_1Statement" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Statement(Tree):</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1Statement_1aaeb324759dd2f95015e1cf4a2138003d" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classparselib_1_1transforms_1_1node_1_1Expression" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Expression(Tree):</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1Expression_1a40aba9c6c176c5aadedef283bfc4d9b4" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classparselib_1_1transforms_1_1node_1_1Always" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Always(Tree):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1Always_1ac5986df6c7703d62e9ffcdb91fdec7e4" kindref="member">__init__</ref>(self,<sp/>tree):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classparselib_1_1transforms_1_1node_1_1Always_1ac5986df6c7703d62e9ffcdb91fdec7e4" kindref="member">__init__</ref>(tree.data,<sp/>tree.children,<sp/>tree.meta)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classparselib_1_1transforms_1_1node_1_1ArrayDeref" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1ArrayDeref" kindref="compound">ArrayDeref</ref>(Tree):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1ArrayDeref_1ae68a75f702031afbd807b317ea5424da" kindref="member">__init__</ref>(self,<sp/>tree):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classparselib_1_1transforms_1_1node_1_1ArrayDeref_1ae68a75f702031afbd807b317ea5424da" kindref="member">__init__</ref>(tree.data,<sp/>tree.children,<sp/>tree.meta)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classparselib_1_1transforms_1_1node_1_1TypeDefType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType" kindref="compound">TypeDefType</ref>:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1a8f695be898efc4423f2fc243de7f22c2" kindref="member">__init__</ref>(self,<sp/>name,<sp/>type_param_names,<sp/>fields):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1a6433c8c7a670f83fdd248a01a9e46942" kindref="member">name</ref>name<sp/>=<sp/>name</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1a7f63b3be370bf52e5a8d9aae3d65b7e8" kindref="member">type_param_names</ref>type_param_names<sp/>=<sp/>type_param_names</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1a11efa210679117f5a61d61bb5978717f" kindref="member">fields</ref>fields<sp/>=<sp/>fields</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1aaa96c4050baf6dbac666997ee85ca72b" kindref="member">_instantiate</ref>(self,<sp/>field,<sp/>params,<sp/>types):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Note:<sp/>nested<sp/>type<sp/>is<sp/>not<sp/>supported&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(field,<sp/>Tree):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>field.data<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;htype&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>field.children[0]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>types:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&apos;Nested<sp/>type<sp/>support<sp/>is<sp/>WIP&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_children<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>field.children:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>params:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_children.append(params[x])</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_children.append(self.<ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1aaa96c4050baf6dbac666997ee85ca72b" kindref="member">_instantiate</ref>_instantiate(x,<sp/>params,<sp/>types))</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field.children<sp/>=<sp/>new_children</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field.children<sp/>=<sp/>[self.<ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1aaa96c4050baf6dbac666997ee85ca72b" kindref="member">_instantiate</ref>_instantiate(x,<sp/>params,<sp/>types)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(x,<sp/>Tree)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>field.children]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1adcab0ab1250fe942ed85babdee110b9c" kindref="member">get_fields_with_instantiation</ref>(self,<sp/>params,<sp/>types):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_maps<sp/>=<sp/>dict(zip(self.<ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1a7f63b3be370bf52e5a8d9aae3d65b7e8" kindref="member">type_param_names</ref>type_param_names,<sp/>params))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instantiated_fields<sp/>=<sp/>deepcopy(self.<ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1a11efa210679117f5a61d61bb5978717f" kindref="member">fields</ref>fields)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instantiated_fields<sp/>=<sp/>list(map(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>self.<ref refid="classparselib_1_1transforms_1_1node_1_1TypeDefType_1aaa96c4050baf6dbac666997ee85ca72b" kindref="member">_instantiate</ref>_instantiate(x,<sp/>param_maps,<sp/>types),<sp/>instantiated_fields))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>[[f.children[0],<sp/>f.children[1]]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>instantiated_fields]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
    </programlisting>
    <location file="plugins/hdl/parselib/transforms/node.py"/>
  </compounddef>
</doxygen>
