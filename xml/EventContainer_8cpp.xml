<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="EventContainer_8cpp" kind="file" language="C++">
    <compoundname>EventContainer.cpp</compoundname>
    <includes refid="EventContainer_8h" local="yes">EventContainer.h</includes>
    <incdepgraph>
      <node id="4">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="1">
        <label>src/model/EventContainer.cpp</label>
        <link refid="EventContainer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EventContainer.h</label>
        <link refid="EventContainer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>clang/AST/DeclCXX.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EventContainer_8h" kindref="compound">EventContainer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="classsystemc__clang_1_1EventContainer_1adc74a954a66d933ee46e28fb83c5b6e6" kindref="member">EventContainer::~EventContainer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>delete<sp/>the<sp/>ast_node_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clang<sp/>should<sp/>take<sp/>care<sp/>of<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="classsystemc__clang_1_1EventContainer_1ad3242575b058e92140bc460502043657" kindref="member">EventContainer::EventContainer</ref>()<sp/>:<sp/>event_name_{</highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">},<sp/>ast_node_{nullptr}<sp/>{}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">EventContainer::EventContainer(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pname,<sp/>VarDecl<sp/>*e)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>event_name_{pname},<sp/>ast_node_{e}<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">EventContainer::EventContainer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventContainer" kindref="compound">EventContainer</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EventContainer_1ae2d8b33ac8e44534b4afac7e130a771f" kindref="member">event_name_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1EventContainer_1ae2d8b33ac8e44534b4afac7e130a771f" kindref="member">event_name_</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EventContainer_1ab797ede613f8bd446bb241c9d9a72be9" kindref="member">ast_node_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1EventContainer_1ab797ede613f8bd446bb241c9d9a72be9" kindref="member">ast_node_</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventContainer_1a4c3469d3f67875d9c43975f11868d628" kindref="member">EventContainer::getEventName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventContainer_1ae2d8b33ac8e44534b4afac7e130a771f" kindref="member">event_name_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">VarDecl<sp/>*<ref refid="classsystemc__clang_1_1EventContainer_1ae58ef7362327a2cb3064871b8b792fbd" kindref="member">EventContainer::getASTNode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventContainer_1ab797ede613f8bd446bb241c9d9a72be9" kindref="member">ast_node_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventContainer_1a00a7e6cd9504616d53d54b9e1a50b8f2" kindref="member">EventContainer::dump</ref>(llvm::raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tabn;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>EventContainer<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1EventContainer_1ae2d8b33ac8e44534b4afac7e130a771f" kindref="member">event_name_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/model/EventContainer.cpp"/>
  </compounddef>
</doxygen>
