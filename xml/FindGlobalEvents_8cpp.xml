<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="FindGlobalEvents_8cpp" kind="file" language="C++">
    <compoundname>FindGlobalEvents.cpp</compoundname>
    <includes refid="FindGlobalEvents_8h" local="yes">FindGlobalEvents.h</includes>
    <incdepgraph>
      <node id="7">
        <label>clang/AST/Decl.h</label>
      </node>
      <node id="9">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="8">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="6">
        <label>json.hpp</label>
      </node>
      <node id="3">
        <label>systemc-clang.h</label>
        <link refid="systemc-clang_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="2">
        <label>FindGlobalEvents.h</label>
        <link refid="FindGlobalEvents_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/matchers/FindGlobalEvents.cpp</label>
        <link refid="FindGlobalEvents_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FindGlobalEvents_8h" kindref="compound">FindGlobalEvents.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindGlobalEvents_1ad8cbc58ae375ae3ef3fe966c4d5e7bbf" kindref="member">FindGlobalEvents::FindGlobalEvents</ref>(TranslationUnitDecl<sp/>*declaration,</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::raw_ostream<sp/>&amp;os)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_os(os)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>TraverseDecl(declaration);</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">FindGlobalEvents::~FindGlobalEvents()<sp/>{}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1aec04bcf2707035d2a45869439cd5fe62" kindref="member">FindGlobalEvents::VisitVarDecl</ref>(VarDecl<sp/>*variable_declaration)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>QualType<sp/>variable_type{variable_declaration-&gt;getType()};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(variable_type.getAsString()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;class<sp/>sc_core::sc_event&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IdentifierInfo<sp/>*info<sp/>=<sp/>variable_declaration-&gt;getIdentifier())<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1af3ef958e39f096aa676e438c2141f099" kindref="member">_globalEvents</ref>.insert(<ref refid="classsystemc__clang_1_1FindGlobalEvents_1a4236ad7b03182c36006b2f37ae1a7d0d" kindref="member">kvType</ref>(info-&gt;getNameStart(),<sp/>variable_declaration));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindGlobalEvents_1a07d8ada4c3bf82ddeaf241c30cdd257a" kindref="member">FindGlobalEvents::globalEventMapType</ref><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1a281cab7140c2ede50bfc886adabf240e" kindref="member">FindGlobalEvents::getEventMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1af3ef958e39f096aa676e438c2141f099" kindref="member">_globalEvents</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1aef90064391d8306499263a2c78913847" kindref="member">FindGlobalEvents::dump</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1a4a33d4ffeb02939957b01f4a051db3b2" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>==============<sp/><sp/>FindGlobalEvents<sp/>===============&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1a4a33d4ffeb02939957b01f4a051db3b2" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n:&gt;<sp/>Print<sp/>global<sp/>sc_event<sp/>variables&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(globalEventMapType::iterator<sp/>vit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1af3ef958e39f096aa676e438c2141f099" kindref="member">_globalEvents</ref>.begin();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vit<sp/>!=<sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1af3ef958e39f096aa676e438c2141f099" kindref="member">_globalEvents</ref>.end();<sp/>vit++)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1a4a33d4ffeb02939957b01f4a051db3b2" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vit-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>VarDecl*:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vit-&gt;second;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1a4a33d4ffeb02939957b01f4a051db3b2" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>==============<sp/>END<sp/>FindGlobalEvents<sp/>===============&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1a03a9fde1d23601d526e098f1db450382" kindref="member">FindGlobalEvents::dump_json</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="namespacesystemc__clang_1ab232545035b571c3f3cd13a4459f2d9e" kindref="member">json</ref><sp/>globals_j{};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;event<sp/>:<sp/><ref refid="classsystemc__clang_1_1FindGlobalEvents_1af3ef958e39f096aa676e438c2141f099" kindref="member">_globalEvents</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>globals_j[</highlight><highlight class="stringliteral">&quot;global_declarations&quot;</highlight><highlight class="normal">].emplace_back(event.first);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/>globals_j.dump(4)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>globals_j;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/matchers/FindGlobalEvents.cpp"/>
  </compounddef>
</doxygen>
