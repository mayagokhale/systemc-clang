<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="FindWait_8cpp" kind="file" language="C++">
    <compoundname>FindWait.cpp</compoundname>
    <includes refid="FindWait_8h" local="yes">FindWait.h</includes>
    <includes local="yes">clang/AST/DeclTemplate.h</includes>
    <includes local="yes">clang/AST/PrettyPrinter.h</includes>
    <includes local="yes">clang/AST/Type.h</includes>
    <includes local="yes">clang/Basic/SourceManager.h</includes>
    <incdepgraph>
      <node id="12">
        <label>clang/Basic/SourceManager.h</label>
      </node>
      <node id="6">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="5">
        <label>clang/AST/PrettyPrinter.h</label>
      </node>
      <node id="9">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="1">
        <label>src/matchers/FindWait.cpp</label>
        <link refid="FindWait_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>WaitContainer.h</label>
        <link refid="WaitContainer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>clang/AST/Type.h</label>
      </node>
      <node id="10">
        <label>clang/AST/DeclTemplate.h</label>
      </node>
      <node id="2">
        <label>FindWait.h</label>
        <link refid="FindWait_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>clang/AST/DeclCXX.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FindWait_8h" kindref="compound">FindWait.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clang/AST/DeclTemplate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clang/AST/PrettyPrinter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clang/AST/Type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clang/Basic/SourceManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindWait_1af9df205039dd8d98a4417e9a035b44c0" kindref="member">FindWait::FindWait</ref>(CXXMethodDecl<sp/>*d,<sp/>llvm::raw_ostream<sp/>&amp;os)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>entry_method_decl_{d},<sp/>os_{os},<sp/>wait_call_{nullptr},<sp/>found_wait_{false}<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>TraverseDecl(d);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>was<sp/>a<sp/>wait<sp/>that<sp/>was<sp/>found.<sp/><sp/>Then<sp/>go<sp/>through<sp/>and<sp/>dump<sp/>them<sp/>all<sp/>out?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_wait_)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wait<sp/>:<sp/>wait_calls_list_)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait-&gt;dump(os_,<sp/>2);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">FindWait::~FindWait()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>all<sp/>the<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wait<sp/>:<sp/><ref refid="classsystemc__clang_1_1FindWait_1a3cb91d927bc8a29a2e1423a61625f662" kindref="member">wait_calls_list_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>wait;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindWait_1a3cb91d927bc8a29a2e1423a61625f662" kindref="member">wait_calls_list_</ref>.clear();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindWait_1a491f12402361f17d167986280ba960f9" kindref="member">FindWait::shouldVisitTemplateInstantiations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindWait_1aef2ad112fb931511dbea2407793bca45" kindref="member">FindWait::VisitUnresolvedMemberExpr</ref>(UnresolvedMemberExpr<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>for<sp/>the<sp/>templated<sp/>wait<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>e<sp/>should<sp/>not<sp/>be<sp/>null<sp/>if<sp/>it<sp/>gets<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;getMemberNameInfo().getAsString()<sp/>==<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;wait&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindWait_1a3cb91d927bc8a29a2e1423a61625f662" kindref="member">wait_calls_list_</ref>.push_back(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1WaitContainer" kindref="compound">WaitContainer</ref>(<ref refid="classsystemc__clang_1_1FindWait_1a943901361e18b2ae5c8d4fc5f367cad9" kindref="member">entry_method_decl_</ref>,<sp/><ref refid="classsystemc__clang_1_1FindWait_1a3f4a176770977ad94bce7aab8147e62a" kindref="member">wait_call_</ref>));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindWait_1a4b104a8e9a138f8120c1381ffb0f08cd" kindref="member">found_wait_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindWait_1a91717eed72ddcbeaf8dedf6393cb48f5" kindref="member">FindWait::VisitCallExpr</ref>(CallExpr<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>clang::LangOptions<sp/>LangOpts;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>LangOpts.CPlusPlus<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>clang::PrintingPolicy<sp/>Policy(LangOpts);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>templated<sp/>wait<sp/>calls<sp/>to<sp/>refer<sp/>to<sp/>the<sp/>CallExpr<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindWait_1a3f4a176770977ad94bce7aab8147e62a" kindref="member">wait_call_</ref><sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>non-templated<sp/>wait<sp/>has<sp/>a<sp/>&quot;wait&quot;<sp/>in<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>direct_callee{e-&gt;getDirectCallee()};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((direct_callee<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((direct_callee-&gt;getNameInfo().getAsString()<sp/>==<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;wait&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>information<sp/>to<sp/>parse<sp/>the<sp/>wait<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindWait_1a3cb91d927bc8a29a2e1423a61625f662" kindref="member">wait_calls_list_</ref>.push_back(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1WaitContainer" kindref="compound">WaitContainer</ref>(<ref refid="classsystemc__clang_1_1FindWait_1a943901361e18b2ae5c8d4fc5f367cad9" kindref="member">entry_method_decl_</ref>,<sp/><ref refid="classsystemc__clang_1_1FindWait_1a3f4a176770977ad94bce7aab8147e62a" kindref="member">wait_call_</ref>));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindWait_1a4b104a8e9a138f8120c1381ffb0f08cd" kindref="member">found_wait_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindWait_1a1fd6b2134e60c643a437437ed75d765d" kindref="member">FindWait::waitListType</ref><sp/><ref refid="classsystemc__clang_1_1FindWait_1aa4f894b091b8b5b4262ea98804b321b6" kindref="member">FindWait::getWaitCalls</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindWait_1a3cb91d927bc8a29a2e1423a61625f662" kindref="member">wait_calls_list_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">CXXMethodDecl<sp/>*<ref refid="classsystemc__clang_1_1FindWait_1a8365bbdfc879f7d1d488442564bdaffd" kindref="member">FindWait::getEntryMethod</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindWait_1a943901361e18b2ae5c8d4fc5f367cad9" kindref="member">entry_method_decl_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindWait_1a3e9296b33d4ea46df7973acca9aa7ee4" kindref="member">FindWait::dump</ref>()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;<sp/>&quot;\n<sp/>==============<sp/>FindWait<sp/>===============&quot;;</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;<sp/>&quot;\n:&gt;<sp/>Print<sp/>&apos;wait&apos;<sp/>statement<sp/>informtion\n&quot;;</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(unsigned<sp/>int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wait_calls_list_.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>if(wait_calls_list_.size()<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;<sp/>&quot;:&gt;<sp/>wait<sp/>pointer:<sp/>&quot;<sp/>&lt;&lt;<sp/><sp/>wait_calls_list_[i]<sp/>&lt;&lt;<sp/>&quot;num.<sp/>of<sp/>args:<sp/>&quot;<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>wait_calls_list_[i]-&gt;getNumArgs()-1<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(unsigned<sp/>int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>wait_calls_list_[i]-&gt;getNumArgs()-1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;<sp/>&quot;-<sp/>arg<sp/>&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>getArgumentName(wait_calls_list_[i]-&gt;getArg(j))</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;<sp/>&quot;:&gt;<sp/>wait<sp/>pointer:<sp/>&quot;<sp/>&lt;&lt;<sp/><sp/>wait_calls_list_[i]<sp/>&lt;&lt;<sp/>&quot;num.<sp/>of<sp/>args:<sp/>&quot;<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>wait_calls_list_[i]-&gt;getNumArgs()<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(unsigned<sp/>int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>wait_calls_list_[i]-&gt;getNumArgs();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;<sp/>&quot;-<sp/>arg<sp/>&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>getArgumentName(wait_calls_list_[i]-&gt;getArg(j))</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;<sp/>&quot;\n<sp/>==============<sp/>END<sp/>FindWait<sp/>===============&quot;;</highlight></codeline>
<codeline lineno="97"><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;&quot;\n<sp/>Process<sp/>and<sp/>waiting<sp/>on<sp/>events<sp/>&quot;;</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(processWaitEventMapType::iterator<sp/>it<sp/>=<sp/>_processWaitEventMap.begin(),</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/>eit<sp/>=<sp/>_processWaitEventMap.end();<sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{<sp/>os_<sp/>&lt;&lt;&quot;\n<sp/>Process<sp/>:&quot;</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;&lt;it-&gt;first-&gt;getDeclName().getAsString();</highlight></codeline>
<codeline lineno="102"><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;&quot;\n<sp/>Waiting<sp/>on<sp/>event(s)<sp/>:<sp/>&quot;;</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>tmp<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i&lt;tmp.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>os_<sp/>&lt;&lt;tmp.at(i)&lt;&lt;&quot;<sp/>&quot;;</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/matchers/FindWait.cpp"/>
  </compounddef>
</doxygen>
