<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="node__movement_8py" kind="file" language="Python">
    <compoundname>node_movement.py</compoundname>
    <innerclass refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement" prot="public">parselib::transforms::node_movement::NodeMovement</innerclass>
    <innernamespace refid="namespaceparselib_1_1transforms_1_1node__movement">parselib::transforms::node_movement</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceparselib_1_1transforms_1_1node__movement" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>lark<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Tree,<sp/>Token</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceparselib_1_1utils" kindref="compound">parselib.utils</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dprint</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceparselib_1_1transforms" kindref="compound">parselib.transforms</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TopDown</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement" kindref="compound">NodeMovement</ref>(<ref refid="classparselib_1_1transforms_1_1top__down_1_1TopDown" kindref="compound">TopDown</ref>):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1a5b96e69e58ae08437bcc04fe973b90b2" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1a5b96e69e58ae08437bcc04fe973b90b2" kindref="member">__init__</ref>()</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>record<sp/>function<sp/>per<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1a67f8cb8643445e4d59d69447b1b3a9ca" kindref="member">functions</ref>functions<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ac1e247d78d82dd9e17a30744510bdd96" kindref="member">current_module</ref>current_module<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ae29b940b8c2a79d3ae2e203aa8ac7d95" kindref="member">hmodule</ref>(self,<sp/>tree):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ac1e247d78d82dd9e17a30744510bdd96" kindref="member">current_module</ref>current_module<sp/>=<sp/>tree.children[0]</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1top__down_1_1TopDown_1a7064a163977352a2b47acbf7e388116c" kindref="member">__push_up</ref>__push_up(tree)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functions<sp/>=<sp/>self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1a67f8cb8643445e4d59d69447b1b3a9ca" kindref="member">functions</ref>functions.get(self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ac1e247d78d82dd9e17a30744510bdd96" kindref="member">current_module</ref>current_module)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>functions:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>functions:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree.children.append(f)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ac1e247d78d82dd9e17a30744510bdd96" kindref="member">current_module</ref>current_module<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tree</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ad10d826af6cbd5366cc02a7da8a0533e" kindref="member">__add_functions</ref>(self,<sp/>functions):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1a67f8cb8643445e4d59d69447b1b3a9ca" kindref="member">functions</ref>functions.setdefault(self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ac1e247d78d82dd9e17a30744510bdd96" kindref="member">current_module</ref>current_module,<sp/>[])</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.extend(functions)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ad69b4f9976b4f29ccf0ce905aa64a2d9" kindref="member">hprocess</ref>(self,<sp/>tree):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functions<sp/>=<sp/>list(filter(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>isinstance(x,<sp/>Tree)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>x.data<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;hfunction&apos;</highlight><highlight class="normal">,<sp/>tree.children))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree.children<sp/>=<sp/>list(filter(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(isinstance(x,<sp/>Tree)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>x.data<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;hfunction&apos;</highlight><highlight class="normal">),<sp/>tree.children))</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classparselib_1_1transforms_1_1node__movement_1_1NodeMovement_1ad10d826af6cbd5366cc02a7da8a0533e" kindref="member">__add_functions</ref>__add_functions(functions)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tree</highlight></codeline>
    </programlisting>
    <location file="plugins/hdl/parselib/transforms/node_movement.py"/>
  </compounddef>
</doxygen>
