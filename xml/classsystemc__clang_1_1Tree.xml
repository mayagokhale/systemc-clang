<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classsystemc__clang_1_1Tree" kind="class" language="C++" prot="public">
    <compoundname>systemc_clang::Tree</compoundname>
    <includes refid="Tree_8h" local="no">Tree.h</includes>
    <innerclass refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" prot="public">systemc_clang::Tree::const_dft_iterator</innerclass>
    <innerclass refid="classsystemc__clang_1_1Tree_1_1dft__iterator" prot="public">systemc_clang::Tree::dft_iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" prot="public" static="no">
        <type><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; T &gt; *</type>
        <definition>typedef TreeNode&lt;T&gt;* systemc_clang::Tree&lt; T &gt;::TreeNodePtr</definition>
        <argsstring></argsstring>
        <name>TreeNodePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="64" column="20" bodyfile="src/Tree.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsystemc__clang_1_1Tree_1aeee87e5e2a3776887321ca75ce1d935f" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref> &gt;</type>
        <definition>typedef std::vector&lt;TreeNodePtr&gt; systemc_clang::Tree&lt; T &gt;::VectorTreePtr</definition>
        <argsstring></argsstring>
        <name>VectorTreePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="65" column="23" bodyfile="src/Tree.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref>, std::vector&lt; <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref> &gt; &gt;</type>
        <definition>std::map&lt;TreeNodePtr, std::vector&lt;TreeNodePtr&gt; &gt; systemc_clang::Tree&lt; T &gt;::adj_list_</definition>
        <argsstring></argsstring>
        <name>adj_list_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="71" column="12" bodyfile="src/Tree.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" prot="private" static="no" mutable="no">
        <type><ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
        <definition>TreeNodePtr systemc_clang::Tree&lt; T &gt;::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="72" column="15" bodyfile="src/Tree.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool systemc_clang::Tree&lt; T &gt;::run_dft_</definition>
        <argsstring></argsstring>
        <name>run_dft_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="74" column="8" bodyfile="src/Tree.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsystemc__clang_1_1Tree_1ab1e1b478f1a96b5ef72fdbb987afa7ae" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool systemc_clang::Tree&lt; T &gt;::run_bft_</definition>
        <argsstring></argsstring>
        <name>run_bft_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="75" column="8" bodyfile="src/Tree.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsystemc__clang_1_1Tree_1a3ec4582fc73412f591f07e4a9dec78c7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref> &gt;</type>
        <definition>std::vector&lt;TreeNodePtr&gt; systemc_clang::Tree&lt; T &gt;::nodes_bft_</definition>
        <argsstring></argsstring>
        <name>nodes_bft_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="76" column="15" bodyfile="src/Tree.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref> &gt;</type>
        <definition>std::vector&lt;TreeNodePtr&gt; systemc_clang::Tree&lt; T &gt;::nodes_dft_</definition>
        <argsstring></argsstring>
        <name>nodes_dft_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="77" column="15" bodyfile="src/Tree.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1adb24c471fe74bed42d84638c50e95b0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>systemc_clang::Tree&lt; T &gt;::Tree</definition>
        <argsstring>()</argsstring>
        <name>Tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="80" column="3" bodyfile="src/Tree.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1aa09bb53338778de7eb9278eb34afe5be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>systemc_clang::Tree&lt; T &gt;::Tree</definition>
        <argsstring>(const Tree &amp;from)</argsstring>
        <name>Tree</name>
        <param>
          <type>const <ref refid="classsystemc__clang_1_1Tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="82" column="3" bodyfile="src/Tree.h" bodystart="82" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a741e56fee1799a41a4a23d076a47841e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>systemc_clang::Tree&lt; T &gt;::~Tree</definition>
        <argsstring>()</argsstring>
        <name>~Tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="91" column="3" bodyfile="src/Tree.h" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a7777cc359470ece373c974e7cc297abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_clang::Tree&lt; T &gt;::dump</definition>
        <argsstring>()</argsstring>
        <name>dump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="102" column="8" bodyfile="src/Tree.h" bodystart="102" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a09b70ee861ad8249595e3addb2110e74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t systemc_clang::Tree&lt; T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="114" column="15" bodyfile="src/Tree.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1abd1117c1d2a296368845662350a1c837" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_clang::Tree&lt; T &gt;::setRoot</definition>
        <argsstring>(const TreeNodePtr from)</argsstring>
        <name>setRoot</name>
        <param>
          <type>const <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="116" column="8" bodyfile="src/Tree.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a968907782bf4b8a7850b5ad12099ce37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
        <definition>const TreeNodePtr systemc_clang::Tree&lt; T &gt;::getRoot</definition>
        <argsstring>() const</argsstring>
        <name>getRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="118" column="21" bodyfile="src/Tree.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1ad0240751f2fbff620bb85032e93d694e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool systemc_clang::Tree&lt; T &gt;::foundNode</definition>
        <argsstring>(TreeNodePtr node) const</argsstring>
        <name>foundNode</name>
        <param>
          <type><ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="120" column="8" bodyfile="src/Tree.h" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1aff47f4e8acfe34d346bb6f73c24241e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool systemc_clang::Tree&lt; T &gt;::hasChildren</definition>
        <argsstring>(TreeNodePtr node)</argsstring>
        <name>hasChildren</name>
        <param>
          <type><ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="128" column="8" bodyfile="src/Tree.h" bodystart="128" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a2b0fc3e7389f6601ff303be02ba520e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classsystemc__clang_1_1Tree_1aeee87e5e2a3776887321ca75ce1d935f" kindref="member">VectorTreePtr</ref> &amp;</type>
        <definition>const VectorTreePtr&amp; systemc_clang::Tree&lt; T &gt;::getChildren</definition>
        <argsstring>(TreeNodePtr node)</argsstring>
        <name>getChildren</name>
        <param>
          <type><ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="136" column="23" bodyfile="src/Tree.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a85d319130ef0379d333898f0de3ba743" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
        <definition>TreeNodePtr systemc_clang::Tree&lt; T &gt;::addNode</definition>
        <argsstring>(T data)</argsstring>
        <name>addNode</name>
        <param>
          <type>T</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="138" column="15" bodyfile="src/Tree.h" bodystart="138" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a029ac767bf5d680e988d054e8a994f43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_clang::Tree&lt; T &gt;::addEdge</definition>
        <argsstring>(const TreeNodePtr from, const TreeNodePtr to)</argsstring>
        <name>addEdge</name>
        <param>
          <type>const <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="145" column="8" bodyfile="src/Tree.h" bodystart="145" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a98c0374b642c83c72504e5421a30662a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_clang::Tree&lt; T &gt;::resetDiscovered</definition>
        <argsstring>()</argsstring>
        <name>resetDiscovered</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="163" column="8" bodyfile="src/Tree.h" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a6ec4b8772d874d5387536a2342214072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string systemc_clang::Tree&lt; T &gt;::bft</definition>
        <argsstring>(TreeNodePtr root)</argsstring>
        <name>bft</name>
        <param>
          <type><ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="169" column="15" bodyfile="src/Tree.h" bodystart="169" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1af5c954e8ea0f3c1adff0138b58dd1de2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string systemc_clang::Tree&lt; T &gt;::dft</definition>
        <argsstring>(TreeNodePtr root=nullptr)</argsstring>
        <name>dft</name>
        <param>
          <type><ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref></type>
          <declname>root</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="202" column="15" bodyfile="src/Tree.h" bodystart="202" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a34f80140595c61abe8be019eb03f4c37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref></type>
        <definition>const_dft_iterator systemc_clang::Tree&lt; T &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="297" column="22" bodyfile="src/Tree.h" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a254839e6cde82c0ef88524b1ff6d83e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref></type>
        <definition>const_dft_iterator systemc_clang::Tree&lt; T &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="299" column="22" bodyfile="src/Tree.h" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a0806752fca549d4735a633f194575d01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref></type>
        <definition>dft_iterator systemc_clang::Tree&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="341" column="16" bodyfile="src/Tree.h" bodystart="341" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1Tree_1a2ac43df626b1f93fbab1f4c472482508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref></type>
        <definition>dft_iterator systemc_clang::Tree&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.h" line="343" column="16" bodyfile="src/Tree.h" bodystart="343" bodyend="343"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Tree.h" line="62" column="1" bodyfile="src/Tree.h" bodystart="62" bodyend="344"/>
    <listofallmembers>
      <member refid="classsystemc__clang_1_1Tree_1a029ac767bf5d680e988d054e8a994f43" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>addEdge</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a85d319130ef0379d333898f0de3ba743" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>addNode</name></member>
      <member refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" prot="private" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>adj_list_</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a34f80140595c61abe8be019eb03f4c37" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>begin</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a0806752fca549d4735a633f194575d01" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>begin</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a6ec4b8772d874d5387536a2342214072" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>bft</name></member>
      <member refid="classsystemc__clang_1_1Tree_1af5c954e8ea0f3c1adff0138b58dd1de2" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>dft</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a7777cc359470ece373c974e7cc297abc" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>dump</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a254839e6cde82c0ef88524b1ff6d83e5" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>end</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a2ac43df626b1f93fbab1f4c472482508" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>end</name></member>
      <member refid="classsystemc__clang_1_1Tree_1ad0240751f2fbff620bb85032e93d694e" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>foundNode</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a2b0fc3e7389f6601ff303be02ba520e8" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>getChildren</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a968907782bf4b8a7850b5ad12099ce37" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>getRoot</name></member>
      <member refid="classsystemc__clang_1_1Tree_1aff47f4e8acfe34d346bb6f73c24241e3" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>hasChildren</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a3ec4582fc73412f591f07e4a9dec78c7" prot="private" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>nodes_bft_</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" prot="private" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>nodes_dft_</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a98c0374b642c83c72504e5421a30662a" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>resetDiscovered</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" prot="private" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>root_</name></member>
      <member refid="classsystemc__clang_1_1Tree_1ab1e1b478f1a96b5ef72fdbb987afa7ae" prot="private" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>run_bft_</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" prot="private" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>run_dft_</name></member>
      <member refid="classsystemc__clang_1_1Tree_1abd1117c1d2a296368845662350a1c837" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>setRoot</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a09b70ee861ad8249595e3addb2110e74" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>size</name></member>
      <member refid="classsystemc__clang_1_1Tree_1adb24c471fe74bed42d84638c50e95b0d" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>Tree</name></member>
      <member refid="classsystemc__clang_1_1Tree_1aa09bb53338778de7eb9278eb34afe5be" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>Tree</name></member>
      <member refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>TreeNodePtr</name></member>
      <member refid="classsystemc__clang_1_1Tree_1aeee87e5e2a3776887321ca75ce1d935f" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>VectorTreePtr</name></member>
      <member refid="classsystemc__clang_1_1Tree_1a741e56fee1799a41a4a23d076a47841e" prot="public" virt="non-virtual"><scope>systemc_clang::Tree</scope><name>~Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
