<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="FindTLMInterfaces_8cpp" kind="file" language="C++">
    <compoundname>FindTLMInterfaces.cpp</compoundname>
    <includes refid="FindTLMInterfaces_8h" local="yes">FindTLMInterfaces.h</includes>
    <includes refid="FindTemplateTypes_8h" local="yes">FindTemplateTypes.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/matchers/FindTLMInterfaces.cpp</label>
        <link refid="FindTLMInterfaces_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>queue</label>
      </node>
      <node id="9">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="8">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="7">
        <label>json.hpp</label>
      </node>
      <node id="3">
        <label>FindTemplateTypes.h</label>
        <link refid="FindTemplateTypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Tree.h</label>
        <link refid="Tree_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stack</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="2">
        <label>FindTLMInterfaces.h</label>
        <link refid="FindTLMInterfaces_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FindTLMInterfaces_8h" kindref="compound">FindTLMInterfaces.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FindTemplateTypes_8h" kindref="compound">FindTemplateTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1ad9f625f0649f5c02363f0d8bb258c170" kindref="member">FindTLMInterfaces::FindTLMInterfaces</ref>(CXXRecordDecl<sp/>*d,<sp/>llvm::raw_ostream<sp/>&amp;os)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_os(os)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>TraverseDecl(d);</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7ec171b2fc273ec1012eb9b9d3a5d3a8" kindref="member">FindTLMInterfaces::interfaceType</ref><sp/>FindTLMInterfaces::getInputInterfaces()<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1aa08968acff3477361e7d916494dbf04d" kindref="member">_inInterfaces</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7ec171b2fc273ec1012eb9b9d3a5d3a8" kindref="member">FindTLMInterfaces::interfaceType</ref><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1af1af50f52696772f60128dd5311e987e" kindref="member">FindTLMInterfaces::getOutputInterfaces</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a25d27b3f394c691071aa3497c52cd9c7" kindref="member">_outInterfaces</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7ec171b2fc273ec1012eb9b9d3a5d3a8" kindref="member">FindTLMInterfaces::interfaceType</ref><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1abbd673e1caef50580434b32dccf739b5" kindref="member">FindTLMInterfaces::getInputOutputInterfaces</ref>()<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a646b49d4c33474ccbaee8c220c82eab3" kindref="member">_inoutInterfaces</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1ab5ddfd1d00d11a10750c850e41d83b37" kindref="member">FindTLMInterfaces::VisitFieldDecl</ref>(FieldDecl<sp/>*fd)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>QualType<sp/>q<sp/>=<sp/>fd-&gt;getType();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>fname;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IdentifierInfo<sp/>*info<sp/>=<sp/>fd-&gt;getIdentifier())<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>info-&gt;getNameStart();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>*tp<sp/>=<sp/>q.getTypePtr();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTemplateTypes" kindref="compound">FindTemplateTypes</ref><sp/>*te<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindTemplateTypes" kindref="compound">FindTemplateTypes</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>te-&gt;<ref refid="classsystemc__clang_1_1FindTemplateTypes_1ae648d1354e92813a492ccb2f7011d183" kindref="member">Enumerate</ref>(tp);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTemplateTypes_1a7aca95e84873d0dd891c2dc53c492cfd" kindref="member">FindTemplateTypes::type_vector_t</ref><sp/>args<sp/>=<sp/>te-&gt;getTemplateArgumentsType();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>FindTemplateTypes::argVectorType::iterator<sp/>ait<sp/>=<sp/>args.begin();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>could<sp/>be<sp/>more<sp/>than<sp/>one<sp/>type<sp/>though.<sp/><sp/>Are<sp/>you<sp/>only<sp/>referring<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>one?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>template_type_name{ait-&gt;getTypeName()};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(template_type_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_fifo_in&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1aa08968acff3477361e7d916494dbf04d" kindref="member">_inInterfaces</ref>.insert(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1af3ae5d086da23f9985633a6ea89cfc22" kindref="member">kvType</ref>(fname,<sp/>te));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(template_type_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_fifo_out&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a25d27b3f394c691071aa3497c52cd9c7" kindref="member">_outInterfaces</ref>.insert(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1af3ae5d086da23f9985633a6ea89cfc22" kindref="member">kvType</ref>(fname,<sp/>te));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(template_type_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sc_fifo_inout&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a646b49d4c33474ccbaee8c220c82eab3" kindref="member">_inoutInterfaces</ref>.insert(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1af3ae5d086da23f9985633a6ea89cfc22" kindref="member">kvType</ref>(fname,<sp/>te));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1ad947f1e56ae65901cb8f0b1d38f8bff2" kindref="member">FindTLMInterfaces::dump</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n=================<sp/>Find<sp/>Interfaces<sp/>================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n:&gt;<sp/>Number<sp/>of<sp/>input<sp/>Interfaces:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1aa08968acff3477361e7d916494dbf04d" kindref="member">_inInterfaces</ref>.size();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(interfaceType::iterator<sp/>mit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1aa08968acff3477361e7d916494dbf04d" kindref="member">_inInterfaces</ref>.begin(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mitend<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1aa08968acff3477361e7d916494dbf04d" kindref="member">_inInterfaces</ref>.end();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit<sp/>!=<sp/>mitend;<sp/>mit++)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n:&gt;&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mit-&gt;first;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>(mit-&gt;second)-&gt;printTemplateArguments(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n:&gt;<sp/>Number<sp/>of<sp/>output<sp/>Interfaces:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a25d27b3f394c691071aa3497c52cd9c7" kindref="member">_outInterfaces</ref>.size();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(interfaceType::iterator<sp/>mit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a25d27b3f394c691071aa3497c52cd9c7" kindref="member">_outInterfaces</ref>.begin(),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mitend<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a25d27b3f394c691071aa3497c52cd9c7" kindref="member">_outInterfaces</ref>.end();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit<sp/>!=<sp/>mitend;<sp/>mit++)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n:&gt;&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mit-&gt;first;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>(mit-&gt;second)-&gt;printTemplateArguments(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n:&gt;<sp/>Number<sp/>of<sp/>inout<sp/>Interfaces:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a646b49d4c33474ccbaee8c220c82eab3" kindref="member">_inoutInterfaces</ref>.size();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(interfaceType::iterator<sp/>mit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a646b49d4c33474ccbaee8c220c82eab3" kindref="member">_inoutInterfaces</ref>.begin(),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mitend<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a646b49d4c33474ccbaee8c220c82eab3" kindref="member">_inoutInterfaces</ref>.end();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit<sp/>!=<sp/>mitend;<sp/>mit++)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n:&gt;&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mit-&gt;first;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>(mit-&gt;second)-&gt;printTemplateArguments(<ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a7feb7b27cadca0cd0362552ea2ee4cc5" kindref="member">_os</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n=================<sp/>END<sp/>Find<sp/>Interfaces<sp/>================\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a1d69a242e7bc88173a38b7cca5bbb5e2" kindref="member">FindTLMInterfaces::~FindTLMInterfaces</ref>()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_os<sp/>&lt;&lt;<sp/>&quot;[[<sp/>Destructor<sp/>FindTLMInterfaces<sp/>]]\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(interfaceType::iterator<sp/>mit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1aa08968acff3477361e7d916494dbf04d" kindref="member">_inInterfaces</ref>.begin(),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mitend<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1aa08968acff3477361e7d916494dbf04d" kindref="member">_inInterfaces</ref>.end();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit<sp/>!=<sp/>mitend;<sp/>mit++)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mit-&gt;second;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1aa08968acff3477361e7d916494dbf04d" kindref="member">_inInterfaces</ref>.clear();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(interfaceType::iterator<sp/>mit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a25d27b3f394c691071aa3497c52cd9c7" kindref="member">_outInterfaces</ref>.begin(),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mitend<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a25d27b3f394c691071aa3497c52cd9c7" kindref="member">_outInterfaces</ref>.end();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit<sp/>!=<sp/>mitend;<sp/>mit++)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mit-&gt;second;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a25d27b3f394c691071aa3497c52cd9c7" kindref="member">_outInterfaces</ref>.clear();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(interfaceType::iterator<sp/>mit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a646b49d4c33474ccbaee8c220c82eab3" kindref="member">_inoutInterfaces</ref>.begin(),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mitend<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a646b49d4c33474ccbaee8c220c82eab3" kindref="member">_inoutInterfaces</ref>.end();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit<sp/>!=<sp/>mitend;<sp/>mit++)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mit-&gt;second;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindTLMInterfaces_1a646b49d4c33474ccbaee8c220c82eab3" kindref="member">_inoutInterfaces</ref>.clear();</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/matchers/FindTLMInterfaces.cpp"/>
  </compounddef>
</doxygen>
