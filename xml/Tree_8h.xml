<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Tree_8h" kind="file" language="C++">
    <compoundname>Tree.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">queue</includes>
    <includes local="no">stack</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="yes">llvm/Support/raw_ostream.h</includes>
    <includedby refid="FindTemplateTypes_8h" local="yes">src/matchers/FindTemplateTypes.h</includedby>
    <includedby refid="HDLMain_8cpp" local="yes">plugins/hdl/HDLMain.cpp</includedby>
    <includedby refid="HDLType_8cpp" local="yes">plugins/hdl/HDLType.cpp</includedby>
    <includedby refid="HDLType_8h" local="yes">plugins/hdl/HDLType.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>queue</label>
      </node>
      <node id="7">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="1">
        <label>src/Tree.h</label>
        <link refid="Tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="4">
        <label>stack</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18">
        <label>src/PluginAction.h</label>
        <link refid="PluginAction_8h"/>
      </node>
      <node id="33">
        <label>src/model/InterfaceDecl.h</label>
        <link refid="InterfaceDecl_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/matchers/FindTLMInterfaces.cpp</label>
        <link refid="FindTLMInterfaces_8cpp"/>
      </node>
      <node id="22">
        <label>plugins/hdl/HDLBody.h</label>
        <link refid="HDLBody_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/SystemCClang.h</label>
        <link refid="SystemCClang_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/SCuitable/GlobalSuspensionAutomata.cpp</label>
        <link refid="GlobalSuspensionAutomata_8cpp"/>
      </node>
      <node id="21">
        <label>plugins/hdl/HDLBody.cpp</label>
        <link refid="HDLBody_8cpp"/>
      </node>
      <node id="5">
        <label>src/matchers/FindTemplateParameters.cpp</label>
        <link refid="FindTemplateParameters_8cpp"/>
      </node>
      <node id="31">
        <label>src/model/EventDecl.cpp</label>
        <link refid="EventDecl_8cpp"/>
      </node>
      <node id="4">
        <label>src/matchers/FindPorts.h</label>
        <link refid="FindPorts_8h"/>
      </node>
      <node id="14">
        <label>src/model/Model.cpp</label>
        <link refid="Model_8cpp"/>
      </node>
      <node id="27">
        <label>plugins/hdl/HDLType.cpp</label>
        <link refid="HDLType_8cpp"/>
      </node>
      <node id="2">
        <label>src/matchers/FindTemplateTypes.h</label>
        <link refid="FindTemplateTypes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/matchers/PortMatcher.h</label>
        <link refid="PortMatcher_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/SCuitable/GlobalSuspensionAutomata.h</label>
        <link refid="GlobalSuspensionAutomata_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/model/Model.h</label>
        <link refid="Model_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>plugins/hdl/HDLHnode.cpp</label>
        <link refid="HDLHnode_8cpp"/>
      </node>
      <node id="6">
        <label>src/matchers/FindTemplateTypes.cpp</label>
        <link refid="FindTemplateTypes_8cpp"/>
      </node>
      <node id="23">
        <label>plugins/hdl/HDLMain.h</label>
        <link refid="HDLMain_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/matchers/Matchers.h</label>
        <link refid="Matchers_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Tree.h</label>
        <link refid="Tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>plugins/hdl/HDLMain.cpp</label>
        <link refid="HDLMain_8cpp"/>
      </node>
      <node id="34">
        <label>src/model/PortDecl.cpp</label>
        <link refid="PortDecl_8cpp"/>
      </node>
      <node id="32">
        <label>src/model/InterfaceDecl.cpp</label>
        <link refid="InterfaceDecl_8cpp"/>
      </node>
      <node id="9">
        <label>src/model/ModuleInstance.h</label>
        <link refid="ModuleInstance_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/SystemCClang.cpp</label>
        <link refid="SystemCClang_8cpp"/>
      </node>
      <node id="25">
        <label>plugins/hdl/HDLHnode.h</label>
        <link refid="HDLHnode_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/matchers/NetlistMatcher.h</label>
        <link refid="NetlistMatcher_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/SAPlugin.h</label>
        <link refid="SAPlugin_8h"/>
      </node>
      <node id="28">
        <label>plugins/hdl/HDLType.h</label>
        <link refid="HDLType_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/matchers/FindEvents.cpp</label>
        <link refid="FindEvents_8cpp"/>
      </node>
      <node id="35">
        <label>src/model/SignalDecl.cpp</label>
        <link refid="SignalDecl_8cpp"/>
      </node>
      <node id="8">
        <label>src/matchers/FindTLMInterfaces.h</label>
        <link refid="FindTLMInterfaces_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/SCuitable/TimeAnalysis.h</label>
        <link refid="TimeAnalysis_8h"/>
      </node>
      <node id="30">
        <label>src/model/ModuleInstance.cpp</label>
        <link refid="ModuleInstance_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classsystemc__clang_1_1TreeNode" prot="public">systemc_clang::TreeNode</innerclass>
    <innerclass refid="classsystemc__clang_1_1Tree" prot="public">systemc_clang::Tree</innerclass>
    <innerclass refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" prot="public">systemc_clang::Tree::const_dft_iterator</innerclass>
    <innerclass refid="classsystemc__clang_1_1Tree_1_1dft__iterator" prot="public">systemc_clang::Tree::dft_iterator</innerclass>
    <innernamespace refid="namespacesystemc__clang">systemc_clang</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VECTOR_TREE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_TREE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;llvm/Support/raw_ostream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>TreeNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="18" refid="classsystemc__clang_1_1TreeNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNode</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20" refid="classsystemc__clang_1_1TreeNode_1a39196ce3bb1f4b3baaeb1806cb099e3d" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="classsystemc__clang_1_1TreeNode_1a39196ce3bb1f4b3baaeb1806cb099e3d" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="21" refid="classsystemc__clang_1_1TreeNode_1ade4cfca76d30192595ed41ceee36617d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1ade4cfca76d30192595ed41ceee36617d" kindref="member">discovered_</ref>;</highlight></codeline>
<codeline lineno="22" refid="classsystemc__clang_1_1TreeNode_1a88f697624515c4eff540f4fd44d4cf07" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNode</ref><sp/>*<ref refid="classsystemc__clang_1_1TreeNode_1a88f697624515c4eff540f4fd44d4cf07" kindref="member">parent_</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="classsystemc__clang_1_1TreeNode_1afc5dc71e550a2f1b97f31348faea0a42" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode_1afc5dc71e550a2f1b97f31348faea0a42" kindref="member">TreeNode</ref>(T<sp/>data)<sp/>:<sp/><ref refid="classsystemc__clang_1_1TreeNode_1a39196ce3bb1f4b3baaeb1806cb099e3d" kindref="member">data_</ref>{data},<sp/><ref refid="classsystemc__clang_1_1TreeNode_1ade4cfca76d30192595ed41ceee36617d" kindref="member">discovered_</ref>{false},<sp/><ref refid="classsystemc__clang_1_1TreeNode_1a88f697624515c4eff540f4fd44d4cf07" kindref="member">parent_</ref>{this}<sp/>{};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classsystemc__clang_1_1TreeNode_1ae4df9acfad4e8734fb344bc36ac3ebbb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode_1ae4df9acfad4e8734fb344bc36ac3ebbb" kindref="member">TreeNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNode</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a39196ce3bb1f4b3baaeb1806cb099e3d" kindref="member">data_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1TreeNode_1a39196ce3bb1f4b3baaeb1806cb099e3d" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode_1ade4cfca76d30192595ed41ceee36617d" kindref="member">discovered_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1TreeNode_1ade4cfca76d30192595ed41ceee36617d" kindref="member">discovered_</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a88f697624515c4eff540f4fd44d4cf07" kindref="member">parent_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1TreeNode_1a88f697624515c4eff540f4fd44d4cf07" kindref="member">parent_</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classsystemc__clang_1_1TreeNode_1a504829bc51e53feaeadaec11abd894d7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a504829bc51e53feaeadaec11abd894d7" kindref="member">~TreeNode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parent_<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classsystemc__clang_1_1TreeNode_1a1b2ccf587f21fe34d12d59a97c9308b6" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="classsystemc__clang_1_1TreeNode_1a1b2ccf587f21fe34d12d59a97c9308b6" kindref="member">getData</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a39196ce3bb1f4b3baaeb1806cb099e3d" kindref="member">data_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="38" refid="classsystemc__clang_1_1TreeNode_1ac79adf291553b0bed07357b194836583" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="classsystemc__clang_1_1TreeNode_1ac79adf291553b0bed07357b194836583" kindref="member">getDataPtr</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classsystemc__clang_1_1TreeNode_1a39196ce3bb1f4b3baaeb1806cb099e3d" kindref="member">data_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="39" refid="classsystemc__clang_1_1TreeNode_1af753d344aa7c5f1a8cfdc63ed88714b9" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1TreeNode_1af753d344aa7c5f1a8cfdc63ed88714b9" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a39196ce3bb1f4b3baaeb1806cb099e3d" kindref="member">data_</ref>.toString();<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classsystemc__clang_1_1TreeNode_1a0155728cd4c230ece1da3f7c484eb0d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a0155728cd4c230ece1da3f7c484eb0d9" kindref="member">isDiscovered</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1ade4cfca76d30192595ed41ceee36617d" kindref="member">discovered_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="42" refid="classsystemc__clang_1_1TreeNode_1a056c6410d3527c575bc22a588242f5ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a056c6410d3527c575bc22a588242f5ae" kindref="member">setDiscovered</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1TreeNode_1ade4cfca76d30192595ed41ceee36617d" kindref="member">discovered_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="43" refid="classsystemc__clang_1_1TreeNode_1ad5822c3030a768e974bbc694c39b0d13" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1ad5822c3030a768e974bbc694c39b0d13" kindref="member">resetDiscovered</ref>()<sp/>{<sp/><ref refid="classsystemc__clang_1_1TreeNode_1ade4cfca76d30192595ed41ceee36617d" kindref="member">discovered_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classsystemc__clang_1_1TreeNode_1a9b4c33b13848aa25ef768e9eac358378" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a9b4c33b13848aa25ef768e9eac358378" kindref="member">setParent</ref>(<ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNode</ref><sp/>*from)<sp/>{<sp/><ref refid="classsystemc__clang_1_1TreeNode_1a88f697624515c4eff540f4fd44d4cf07" kindref="member">parent_</ref><sp/>=<sp/>from;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classsystemc__clang_1_1TreeNode_1a2797e9913811daaa98fb71c8964b6db3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNode</ref><sp/>*<ref refid="classsystemc__clang_1_1TreeNode_1a2797e9913811daaa98fb71c8964b6db3" kindref="member">getParent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a88f697624515c4eff540f4fd44d4cf07" kindref="member">parent_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classsystemc__clang_1_1TreeNode_1a13856869703857c13541330d4dfeaeed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a13856869703857c13541330d4dfeaeed" kindref="member">dump</ref>()<sp/>{<sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1TreeNode_1af753d344aa7c5f1a8cfdc63ed88714b9" kindref="member">toString</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classsystemc__clang_1_1TreeNode_1a1b61d6391344a979ab6636bb2fba689c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode_1a1b61d6391344a979ab6636bb2fba689c" kindref="member">visit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1TreeNode_1a88f697624515c4eff540f4fd44d4cf07" kindref="member">parent_</ref>-&gt;<ref refid="classsystemc__clang_1_1TreeNode_1af753d344aa7c5f1a8cfdc63ed88714b9" kindref="member">toString</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1TreeNode_1af753d344aa7c5f1a8cfdc63ed88714b9" kindref="member">toString</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">//<sp/>class<sp/>Tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="62" refid="classsystemc__clang_1_1Tree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsystemc__clang_1_1Tree" kindref="compound">Tree</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNode&lt;T&gt;</ref><sp/>*<ref refid="classsystemc__clang_1_1Tree_1ae2699cb6a66a0af9debdc1a17d7403f3" kindref="member">TreeNodePtr</ref>;</highlight></codeline>
<codeline lineno="65" refid="classsystemc__clang_1_1Tree_1aeee87e5e2a3776887321ca75ce1d935f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;TreeNodePtr&gt;<sp/><ref refid="classsystemc__clang_1_1Tree_1aeee87e5e2a3776887321ca75ce1d935f" kindref="member">VectorTreePtr</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjacency<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>reasonable<sp/>structure<sp/>since<sp/>types<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typically<sp/>going<sp/>to<sp/>be<sp/>of<sp/>small<sp/>depth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;TreeNodePtr,<sp/>std::vector&lt;TreeNodePtr&gt;<sp/>&gt;<sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>;</highlight></codeline>
<codeline lineno="72" refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" kindref="member">root_</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" kindref="member">run_dft_</ref>;</highlight></codeline>
<codeline lineno="75" refid="classsystemc__clang_1_1Tree_1ab1e1b478f1a96b5ef72fdbb987afa7ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1ab1e1b478f1a96b5ef72fdbb987afa7ae" kindref="member">run_bft_</ref>;</highlight></codeline>
<codeline lineno="76" refid="classsystemc__clang_1_1Tree_1a3ec4582fc73412f591f07e4a9dec78c7" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;TreeNodePtr&gt;<sp/><ref refid="classsystemc__clang_1_1Tree_1a3ec4582fc73412f591f07e4a9dec78c7" kindref="member">nodes_bft_</ref>;</highlight></codeline>
<codeline lineno="77" refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;TreeNodePtr&gt;<sp/><ref refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" kindref="member">nodes_dft_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80" refid="classsystemc__clang_1_1Tree_1adb24c471fe74bed42d84638c50e95b0d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1adb24c471fe74bed42d84638c50e95b0d" kindref="member">Tree</ref>()<sp/>:<sp/><ref refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" kindref="member">root_</ref>{nullptr},<sp/><ref refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" kindref="member">run_dft_</ref>{false},<sp/><ref refid="classsystemc__clang_1_1Tree_1ab1e1b478f1a96b5ef72fdbb987afa7ae" kindref="member">run_bft_</ref>{false}<sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classsystemc__clang_1_1Tree_1aa09bb53338778de7eb9278eb34afe5be" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1aa09bb53338778de7eb9278eb34afe5be" kindref="member">Tree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree" kindref="compound">Tree</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" kindref="member">root_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" kindref="member">root_</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" kindref="member">run_dft_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" kindref="member">run_dft_</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1ab1e1b478f1a96b5ef72fdbb987afa7ae" kindref="member">run_bft_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1Tree_1ab1e1b478f1a96b5ef72fdbb987afa7ae" kindref="member">run_bft_</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a3ec4582fc73412f591f07e4a9dec78c7" kindref="member">nodes_bft_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1Tree_1a3ec4582fc73412f591f07e4a9dec78c7" kindref="member">nodes_bft_</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" kindref="member">nodes_dft_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" kindref="member">nodes_dft_</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classsystemc__clang_1_1Tree_1a741e56fee1799a41a4a23d076a47841e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a741e56fee1799a41a4a23d076a47841e" kindref="member">~Tree</ref>()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;node<sp/>:<sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node.first;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.second.clear();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.clear();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" kindref="member">nodes_dft_</ref>.clear();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a3ec4582fc73412f591f07e4a9dec78c7" kindref="member">nodes_bft_</ref>.clear();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" kindref="member">root_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classsystemc__clang_1_1Tree_1a7777cc359470ece373c974e7cc297abc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1a7777cc359470ece373c974e7cc297abc" kindref="member">dump</ref>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;entry<sp/>:<sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node{entry.first};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edges{entry.second};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/>node-&gt;toString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=&gt;<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>edges.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;edge_node<sp/>:<sp/>edges)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>edge_node-&gt;toString();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classsystemc__clang_1_1Tree_1a09b70ee861ad8249595e3addb2110e74" refkind="member"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="classsystemc__clang_1_1Tree_1a09b70ee861ad8249595e3addb2110e74" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classsystemc__clang_1_1Tree_1abd1117c1d2a296368845662350a1c837" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1abd1117c1d2a296368845662350a1c837" kindref="member">setRoot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>from)<sp/>{<sp/><ref refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" kindref="member">root_</ref><sp/>=<sp/>from;<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classsystemc__clang_1_1Tree_1a968907782bf4b8a7850b5ad12099ce37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1a968907782bf4b8a7850b5ad12099ce37" kindref="member">getRoot</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" kindref="member">root_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classsystemc__clang_1_1Tree_1ad0240751f2fbff620bb85032e93d694e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1ad0240751f2fbff620bb85032e93d694e" kindref="member">foundNode</ref>(<ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>node)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>found_node{<ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.find(node)};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_node<sp/>==<sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classsystemc__clang_1_1Tree_1aff47f4e8acfe34d346bb6f73c24241e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1aff47f4e8acfe34d346bb6f73c24241e3" kindref="member">hasChildren</ref>(<ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsystemc__clang_1_1Tree_1ad0240751f2fbff620bb85032e93d694e" kindref="member">foundNode</ref>(node))<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>[node].<ref refid="classsystemc__clang_1_1Tree_1a09b70ee861ad8249595e3addb2110e74" kindref="member">size</ref>()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classsystemc__clang_1_1Tree_1a2b0fc3e7389f6601ff303be02ba520e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1aeee87e5e2a3776887321ca75ce1d935f" kindref="member">VectorTreePtr</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1Tree_1a2b0fc3e7389f6601ff303be02ba520e8" kindref="member">getChildren</ref>(<ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>node)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>[node];<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classsystemc__clang_1_1Tree_1a85d319130ef0379d333898f0de3ba743" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1a85d319130ef0379d333898f0de3ba743" kindref="member">addNode</ref>(T<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>new_node{</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNode&lt;T&gt;</ref>(data)};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1aeee87e5e2a3776887321ca75ce1d935f" kindref="member">VectorTreePtr</ref><sp/>empty_edges{};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.insert(<ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.begin(),<sp/>std::make_pair(new_node,<sp/>empty_edges));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_node;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classsystemc__clang_1_1Tree_1a029ac767bf5d680e988d054e8a994f43" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1a029ac767bf5d680e988d054e8a994f43" kindref="member">addEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>source{<ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.find(from)};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;edges{source-&gt;second};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>it<sp/>into<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clang<sp/>parses<sp/>the<sp/>template<sp/>arguments<sp/>in<sp/>left-to-right<sp/>manner.<sp/><sp/>Inserting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>types<sp/>at<sp/>the<sp/>beginning<sp/>works<sp/>to<sp/>represent<sp/>this<sp/>correctly<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DFT.<sp/><sp/>This<sp/>is<sp/>because<sp/>the<sp/>DFT<sp/>algorithm<sp/>picks<sp/>up<sp/>from<sp/>begin()<sp/>to<sp/>end()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>edges,<sp/>and<sp/>inserts<sp/>them<sp/>into<sp/>a<sp/>queue<sp/>by<sp/>pushing<sp/>them<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>edges.insert(edges.begin(),<sp/>to);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;<ref refid="classsystemc__clang_1_1TreeNode_1a9b4c33b13848aa25ef768e9eac358378" kindref="member">setParent</ref>(from);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classsystemc__clang_1_1Tree_1a98c0374b642c83c72504e5421a30662a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1a98c0374b642c83c72504e5421a30662a" kindref="member">resetDiscovered</ref>()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;node<sp/>:<sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.first-&gt;resetDiscovered();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classsystemc__clang_1_1Tree_1a6ec4b8772d874d5387536a2342214072" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1Tree_1a6ec4b8772d874d5387536a2342214072" kindref="member">bft</ref>(<ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a98c0374b642c83c72504e5421a30662a" kindref="member">resetDiscovered</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>return_string{};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::queue&lt;TreeNodePtr&gt;<sp/>que{};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>root-&gt;<ref refid="classsystemc__clang_1_1TreeNode_1a056c6410d3527c575bc22a588242f5ae" kindref="member">setDiscovered</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>que.push(root);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!que.empty())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node{que.front()};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;visit();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a3ec4582fc73412f591f07e4a9dec78c7" kindref="member">nodes_bft_</ref>.push_back(node);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_string<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_string<sp/>+=<sp/>node-&gt;toString();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>que.pop();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>source{<ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.find(node)};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;edges{source-&gt;second};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;edge_node<sp/>:<sp/>edges)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!edge_node-&gt;isDiscovered())<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_node-&gt;setDiscovered();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>que.push(edge_node);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_string;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classsystemc__clang_1_1Tree_1af5c954e8ea0f3c1adff0138b58dd1de2" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1Tree_1af5c954e8ea0f3c1adff0138b58dd1de2" kindref="member">dft</ref>(<ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>root<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a98c0374b642c83c72504e5421a30662a" kindref="member">resetDiscovered</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>return_string;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>argument<sp/>is<sp/>not<sp/>specified,<sp/>then<sp/>just<sp/>use<sp/>the<sp/>root.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/><ref refid="classsystemc__clang_1_1Tree_1a93a765d7842234d05a1db8cfd8ab4cac" kindref="member">root_</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>root<sp/>itself<sp/>is<sp/>not<sp/>found<sp/>then<sp/>we<sp/>can&apos;t<sp/>run<sp/>DFT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_string;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stack&lt;TreeNodePtr&gt;<sp/>visit{};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>visit.push(root);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!visit.empty())<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;node{visit.top()};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classsystemc__clang_1_1TreeNode_1a1b61d6391344a979ab6636bb2fba689c" kindref="member">visit</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_string<sp/>+=<sp/>node-&gt;toString();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_string<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>llvm::outs()<sp/>&lt;&lt;<sp/>&quot;@@<sp/>&quot;<sp/>&lt;&lt;<sp/>node-&gt;toString()<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>repeated<sp/>calls<sp/>to<sp/>dft...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>node<sp/>is<sp/>already<sp/>in<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" kindref="member">run_dft_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" kindref="member">nodes_dft_</ref>.push_back(node);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>back<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visit.pop();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;isDiscovered())<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;setDiscovered();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>source{<ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.find(node)};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/><ref refid="classsystemc__clang_1_1Tree_1afeff2579d3bdd852ed6f18fa988c4eb9" kindref="member">adj_list_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;edges{source-&gt;second};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;node<sp/>:<sp/>edges)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit.push(node);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" kindref="member">run_dft_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1a63fccb5ace4fa3bc8e0d94c1d3285be6" kindref="member">run_dft_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_string;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>dft_iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a29f6301c538df3c938c11369ff7019bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;TreeNodePtr&gt;<sp/>*<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a29f6301c538df3c938c11369ff7019bc" kindref="member">TreeDFTPtr</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a1f540c69d3dced2b76bfdaa84fae35ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree" kindref="compound">Tree&lt;T&gt;</ref><sp/>*<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a1f540c69d3dced2b76bfdaa84fae35ed" kindref="member">tree_</ref>;</highlight></codeline>
<codeline lineno="268" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1abb3cce3068aa5c4cc16e2f477dac9aba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a29f6301c538df3c938c11369ff7019bc" kindref="member">TreeDFTPtr</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1abb3cce3068aa5c4cc16e2f477dac9aba" kindref="member">nodes_dft_</ref>;</highlight></codeline>
<codeline lineno="269" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" kindref="member">pos_</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a0e08551d6033d6dabf7ad8afeea881f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a0e08551d6033d6dabf7ad8afeea881f6" kindref="member">const_dft_iterator</ref>(<ref refid="classsystemc__clang_1_1Tree" kindref="compound">Tree&lt;T&gt;</ref><sp/>*tree,<sp/>std::size_t<sp/>pos)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a1f540c69d3dced2b76bfdaa84fae35ed" kindref="member">tree_</ref>{tree},<sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1abb3cce3068aa5c4cc16e2f477dac9aba" kindref="member">nodes_dft_</ref>{&amp;tree-&gt;<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1abb3cce3068aa5c4cc16e2f477dac9aba" kindref="member">nodes_dft_</ref>},<sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" kindref="member">pos_</ref>{pos}<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tree-&gt;<ref refid="classsystemc__clang_1_1Tree_1af5c954e8ea0f3c1adff0138b58dd1de2" kindref="member">dft</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a6230685df70459f1f687d89068d1a04b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a6230685df70459f1f687d89068d1a04b" kindref="member">operator*</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1abb3cce3068aa5c4cc16e2f477dac9aba" kindref="member">nodes_dft_</ref>)-&gt;operator[](<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" kindref="member">pos_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a21640e259fdb907bb161e21cf91700bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a21640e259fdb907bb161e21cf91700bb" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" kindref="member">pos_</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a33ee6d7c9cb447fa72acb2b2af483f4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a33ee6d7c9cb447fa72acb2b2af483f4d" kindref="member">begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" kindref="member">pos_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ac3dceedea216ae3b1c690298e13ced4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ac3dceedea216ae3b1c690298e13ced4f" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" kindref="member">pos_</ref><sp/>=<sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1abb3cce3068aa5c4cc16e2f477dac9aba" kindref="member">nodes_dft_</ref>-&gt;size();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a7ae6cc40cd5ddc303f184772f46ed31a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1a7ae6cc40cd5ddc303f184772f46ed31a" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref><sp/>&amp;it)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" kindref="member">pos_</ref><sp/>!=<sp/>it.<ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator_1ae1b9d5be9e21bb0bb532efa75c561512" kindref="member">pos_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classsystemc__clang_1_1Tree_1a34f80140595c61abe8be019eb03f4c37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1a34f80140595c61abe8be019eb03f4c37" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref>{</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0};<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classsystemc__clang_1_1Tree_1a254839e6cde82c0ef88524b1ff6d83e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1a254839e6cde82c0ef88524b1ff6d83e5" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1const__dft__iterator" kindref="compound">const_dft_iterator</ref>{</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" kindref="member">nodes_dft_</ref>.size()};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>dft_iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classsystemc__clang_1_1Tree_1_1dft__iterator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="308" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1abd9bfb0afa194a14ea0a6030b0ac3531" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;TreeNodePtr&gt;<sp/>*<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1abd9bfb0afa194a14ea0a6030b0ac3531" kindref="member">TreeDFTPtr</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="311" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ae35664e60155ef871652d9f88249815a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree" kindref="compound">Tree&lt;T&gt;</ref><sp/>*<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ae35664e60155ef871652d9f88249815a" kindref="member">tree_</ref>;</highlight></codeline>
<codeline lineno="312" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ad6ca778b8d2ab673f0aa7703f1ed0f39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1abd9bfb0afa194a14ea0a6030b0ac3531" kindref="member">TreeDFTPtr</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ad6ca778b8d2ab673f0aa7703f1ed0f39" kindref="member">nodes_dft_</ref>;</highlight></codeline>
<codeline lineno="313" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" kindref="member">pos_</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="316" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1acc4da424116b7d12233526d4c5a921bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1acc4da424116b7d12233526d4c5a921bc" kindref="member">dft_iterator</ref>(<ref refid="classsystemc__clang_1_1Tree" kindref="compound">Tree&lt;T&gt;</ref><sp/>*tree,<sp/>std::size_t<sp/>pos)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ae35664e60155ef871652d9f88249815a" kindref="member">tree_</ref>{tree},<sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ad6ca778b8d2ab673f0aa7703f1ed0f39" kindref="member">nodes_dft_</ref>{&amp;tree-&gt;<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ad6ca778b8d2ab673f0aa7703f1ed0f39" kindref="member">nodes_dft_</ref>},<sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" kindref="member">pos_</ref>{pos}<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ae35664e60155ef871652d9f88249815a" kindref="member">tree_</ref>-&gt;dft();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1a5e2e8dd5f9aa71c922d765718c6b2bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1TreeNode" kindref="compound">TreeNodePtr</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1a5e2e8dd5f9aa71c922d765718c6b2bda" kindref="member">operator*</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ad6ca778b8d2ab673f0aa7703f1ed0f39" kindref="member">nodes_dft_</ref>)-&gt;operator[](<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" kindref="member">pos_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1a76f20027d78cd79577341c72d4d82794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1a76f20027d78cd79577341c72d4d82794" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" kindref="member">pos_</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1a547f47233e52b756f5dfaec81dac8518" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1a547f47233e52b756f5dfaec81dac8518" kindref="member">begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" kindref="member">pos_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1a25cf89fed9f28c23b1f56ad4474a8466" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1a25cf89fed9f28c23b1f56ad4474a8466" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" kindref="member">pos_</ref><sp/>=<sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ad6ca778b8d2ab673f0aa7703f1ed0f39" kindref="member">nodes_dft_</ref>-&gt;size();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ac324097ed175b782af7b806d88f2d30e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ac324097ed175b782af7b806d88f2d30e" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref><sp/>&amp;it)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" kindref="member">pos_</ref><sp/>!=<sp/>it.<ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator_1ab343ecc0095f49f60b728bd353bd8fc5" kindref="member">pos_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classsystemc__clang_1_1Tree_1a0806752fca549d4735a633f194575d01" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1a0806752fca549d4735a633f194575d01" kindref="member">begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref>{</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0};<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="classsystemc__clang_1_1Tree_1a2ac43df626b1f93fbab1f4c472482508" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref><sp/><ref refid="classsystemc__clang_1_1Tree_1a2ac43df626b1f93fbab1f4c472482508" kindref="member">end</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1Tree_1_1dft__iterator" kindref="compound">dft_iterator</ref>{</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classsystemc__clang_1_1Tree_1a1ada4db9ba8e2ef9f06fc3c86910bf07" kindref="member">nodes_dft_</ref>.size()};<sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal">};</highlight></codeline>
<codeline lineno="345"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>systemc_clang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Tree.h"/>
  </compounddef>
</doxygen>
