<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="FindNetlist_8h" kind="file" language="C++">
    <compoundname>FindNetlist.h</compoundname>
    <includes local="yes">clang/AST/DeclCXX.h</includes>
    <includes local="yes">clang/AST/RecursiveASTVisitor.h</includes>
    <includes local="yes">llvm/Support/raw_ostream.h</includes>
    <includes local="no">map</includes>
    <includedby refid="FindNetlist_8cpp" local="yes">src/matchers/FindNetlist.cpp</includedby>
    <includedby refid="Model_8h" local="yes">src/model/Model.h</includedby>
    <includedby refid="SystemCClang_8cpp" local="yes">src/SystemCClang.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="3">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="1">
        <label>src/matchers/FindNetlist.h</label>
        <link refid="FindNetlist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>clang/AST/DeclCXX.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>src/PluginAction.h</label>
        <link refid="PluginAction_8h"/>
      </node>
      <node id="13">
        <label>plugins/hdl/HDLBody.h</label>
        <link refid="HDLBody_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/SystemCClang.h</label>
        <link refid="SystemCClang_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/SCuitable/GlobalSuspensionAutomata.cpp</label>
        <link refid="GlobalSuspensionAutomata_8cpp"/>
      </node>
      <node id="12">
        <label>plugins/hdl/HDLBody.cpp</label>
        <link refid="HDLBody_8cpp"/>
      </node>
      <node id="2">
        <label>src/matchers/FindNetlist.cpp</label>
        <link refid="FindNetlist_8cpp"/>
      </node>
      <node id="4">
        <label>src/model/Model.cpp</label>
        <link refid="Model_8cpp"/>
      </node>
      <node id="18">
        <label>plugins/hdl/HDLType.cpp</label>
        <link refid="HDLType_8cpp"/>
      </node>
      <node id="5">
        <label>src/SCuitable/GlobalSuspensionAutomata.h</label>
        <link refid="GlobalSuspensionAutomata_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/model/Model.h</label>
        <link refid="Model_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>plugins/hdl/HDLHnode.cpp</label>
        <link refid="HDLHnode_8cpp"/>
      </node>
      <node id="1">
        <label>src/matchers/FindNetlist.h</label>
        <link refid="FindNetlist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>plugins/hdl/HDLMain.h</label>
        <link refid="HDLMain_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>plugins/hdl/HDLMain.cpp</label>
        <link refid="HDLMain_8cpp"/>
      </node>
      <node id="11">
        <label>src/SystemCClang.cpp</label>
        <link refid="SystemCClang_8cpp"/>
      </node>
      <node id="16">
        <label>plugins/hdl/HDLHnode.h</label>
        <link refid="HDLHnode_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/SAPlugin.h</label>
        <link refid="SAPlugin_8h"/>
      </node>
      <node id="19">
        <label>plugins/hdl/HDLType.h</label>
        <link refid="HDLType_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/SCuitable/TimeAnalysis.h</label>
        <link refid="TimeAnalysis_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classsystemc__clang_1_1FindNetlist" prot="public">systemc_clang::FindNetlist</innerclass>
    <innernamespace refid="namespacesystemc__clang">systemc_clang</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_NETLIST_GEN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_NETLIST_GEN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clang/AST/DeclCXX.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clang/AST/RecursiveASTVisitor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;llvm/Support/raw_ostream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceclang" kindref="compound">clang</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classsystemc__clang_1_1FindNetlist" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsystemc__clang_1_1FindNetlist" kindref="compound">FindNetlist</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>RecursiveASTVisitor&lt;FindNetlist&gt;<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removed<sp/>Model::moduleMapType<sp/>from<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>think<sp/>of<sp/>a<sp/>way<sp/>to<sp/>include<sp/>building</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>netlist<sp/>from<sp/>module<sp/>constructors.<sp/>Right<sp/>now<sp/>I<sp/>am<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>doing<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist" kindref="compound">FindNetlist</ref>(FunctionDecl<sp/>*);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist" kindref="compound">FindNetlist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist" kindref="compound">FindNetlist</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classsystemc__clang_1_1FindNetlist" kindref="compound">FindNetlist</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24" refid="classsystemc__clang_1_1FindNetlist_1a5d3bc5e0b09c88b902fbf73e7ba91eb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair&lt;string,<sp/>string&gt;<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5d3bc5e0b09c88b902fbf73e7ba91eb8" kindref="member">instanceModulePairType</ref>;</highlight></codeline>
<codeline lineno="25" refid="classsystemc__clang_1_1FindNetlist_1a52b44a67e9256fb58d17050a35acb953" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>string&gt;<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a52b44a67e9256fb58d17050a35acb953" kindref="member">instanceModuleMapType</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classsystemc__clang_1_1FindNetlist_1a149fe83ade7e3468bc49ae42dee28a46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair&lt;string,<sp/>string&gt;<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a149fe83ade7e3468bc49ae42dee28a46" kindref="member">portSignalPairType</ref>;</highlight></codeline>
<codeline lineno="28" refid="classsystemc__clang_1_1FindNetlist_1a9f9a1a9b49e67f0d8861887ccbdabc01" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>string&gt;<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a9f9a1a9b49e67f0d8861887ccbdabc01" kindref="member">portSignalMapType</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classsystemc__clang_1_1FindNetlist_1a9a9dfe4431764501134dd2aa80eff673" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair&lt;string,<sp/>portSignalMapType&gt;<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a9a9dfe4431764501134dd2aa80eff673" kindref="member">instancePortSignalPairType</ref>;</highlight></codeline>
<codeline lineno="31" refid="classsystemc__clang_1_1FindNetlist_1a0c687bf7d0bac3a2fb59d5fa889435c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>portSignalMapType&gt;<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a0c687bf7d0bac3a2fb59d5fa889435c1" kindref="member">instancePortSignalMapType</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classsystemc__clang_1_1FindNetlist_1acae6cc93b649887a31e0d0c93abb6e6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair&lt;string,<sp/>vector&lt;string&gt;&gt;<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1acae6cc93b649887a31e0d0c93abb6e6e" kindref="member">instanceListModulePairType</ref>;</highlight></codeline>
<codeline lineno="34" refid="classsystemc__clang_1_1FindNetlist_1a7b975fb543df586174c99f6d4ed81800" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>map&lt;string,<sp/>vector&lt;string&gt;&gt;<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a7b975fb543df586174c99f6d4ed81800" kindref="member">instanceListModuleMapType</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>VisitCXXOperatorCallExpr(CXXOperatorCallExpr<sp/>*ce);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateInstanceListModuleMap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a52b44a67e9256fb58d17050a35acb953" kindref="member">instanceModuleMapType</ref><sp/>&amp;getInstanceModuleMap();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a0c687bf7d0bac3a2fb59d5fa889435c1" kindref="member">instancePortSignalMapType</ref><sp/>&amp;getInstancePortSignalMap();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a7b975fb543df586174c99f6d4ed81800" kindref="member">instanceListModuleMapType</ref><sp/>&amp;getInstanceListModuleMap();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a9f9a1a9b49e67f0d8861887ccbdabc01" kindref="member">portSignalMapType</ref><sp/>&amp;getPortSignalMap();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumInstances(std::string);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49" refid="classsystemc__clang_1_1FindNetlist_1acfb41e8566e17999fabd9584f97edeb2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1acfb41e8566e17999fabd9584f97edeb2" kindref="member">_pass</ref>;</highlight></codeline>
<codeline lineno="50" refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a52b44a67e9256fb58d17050a35acb953" kindref="member">instanceModuleMapType</ref><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>;</highlight></codeline>
<codeline lineno="51" refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a9f9a1a9b49e67f0d8861887ccbdabc01" kindref="member">portSignalMapType</ref><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref>;</highlight></codeline>
<codeline lineno="52" refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a0c687bf7d0bac3a2fb59d5fa889435c1" kindref="member">instancePortSignalMapType</ref><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>;</highlight></codeline>
<codeline lineno="53" refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a7b975fb543df586174c99f6d4ed81800" kindref="member">instanceListModuleMapType</ref><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>systemc_clang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/matchers/FindNetlist.h"/>
  </compounddef>
</doxygen>
