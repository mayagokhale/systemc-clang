<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classsystemc__clang_1_1TemplateType" kind="class" language="C++" prot="public">
    <compoundname>systemc_clang::TemplateType</compoundname>
    <includes refid="FindTemplateTypes_8h" local="no">FindTemplateTypes.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsystemc__clang_1_1TemplateType_1a056a0a4453a2395e722e9ac87af483a6" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string systemc_clang::TemplateType::type_name_</definition>
        <argsstring></argsstring>
        <name>type_name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="41" column="15" bodyfile="src/matchers/FindTemplateTypes.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsystemc__clang_1_1TemplateType_1aed32832c653df6e1b894e21ee10dd613" prot="private" static="no" mutable="no">
        <type>const clang::Type *</type>
        <definition>const clang::Type* systemc_clang::TemplateType::type_ptr_</definition>
        <argsstring></argsstring>
        <name>type_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="42" column="21" bodyfile="src/matchers/FindTemplateTypes.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsystemc__clang_1_1TemplateType_1a37fd7c2ea13b30a7788f4872102b978d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TemplateType::TemplateType</definition>
        <argsstring>()</argsstring>
        <name>TemplateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="28" column="3" bodyfile="src/matchers/FindTemplateTypes.cpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1TemplateType_1a4abdddeefdd160e4c53d9c67c4e44cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>systemc_clang::TemplateType::TemplateType</definition>
        <argsstring>(std::string, const clang::Type *)</argsstring>
        <name>TemplateType</name>
        <param>
          <type>std::string</type>
        </param>
        <param>
          <type>const clang::Type *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="31" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1TemplateType_1a7005e59280437167bba6d864529bd63c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TemplateType::~TemplateType</definition>
        <argsstring>()</argsstring>
        <name>~TemplateType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="32" column="3" bodyfile="src/matchers/FindTemplateTypes.cpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1TemplateType_1a0b61e391693d213e51eb707e0542efcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TemplateType::TemplateType</definition>
        <argsstring>(const TemplateType &amp;)</argsstring>
        <name>TemplateType</name>
        <param>
          <type>const <ref refid="classsystemc__clang_1_1TemplateType" kindref="compound">TemplateType</ref> &amp;</type>
          <defname>from</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="33" column="3" bodyfile="src/matchers/FindTemplateTypes.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1TemplateType_1a0b6b95ff48738820f98c16d85278ea72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string TemplateType::getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="35" column="15" bodyfile="src/matchers/FindTemplateTypes.cpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1TemplateType_1a32bccb115bc0f74aaad1b0ac624a3f35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string TemplateType::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="36" column="15" bodyfile="src/matchers/FindTemplateTypes.cpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1TemplateType_1a873bc0e213fb4bb72c467c8fd894013b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const clang::Type *</type>
        <definition>const Type * TemplateType::getTypePtr</definition>
        <argsstring>() const</argsstring>
        <name>getTypePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="37" column="21" bodyfile="src/matchers/FindTemplateTypes.cpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__clang_1_1TemplateType_1a0c443d55e4925c143f2c9e209fe5a567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_clang::TemplateType::dump</definition>
        <argsstring>()</argsstring>
        <name>dump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/matchers/FindTemplateTypes.h" line="38" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/matchers/FindTemplateTypes.h" line="25" column="1" bodyfile="src/matchers/FindTemplateTypes.h" bodystart="25" bodyend="43"/>
    <listofallmembers>
      <member refid="classsystemc__clang_1_1TemplateType_1a0c443d55e4925c143f2c9e209fe5a567" prot="public" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>dump</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1a0b6b95ff48738820f98c16d85278ea72" prot="public" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>getTypeName</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1a873bc0e213fb4bb72c467c8fd894013b" prot="public" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>getTypePtr</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1a37fd7c2ea13b30a7788f4872102b978d" prot="public" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>TemplateType</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1a4abdddeefdd160e4c53d9c67c4e44cb8" prot="public" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>TemplateType</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1a0b61e391693d213e51eb707e0542efcc" prot="public" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>TemplateType</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1a32bccb115bc0f74aaad1b0ac624a3f35" prot="public" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>toString</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1a056a0a4453a2395e722e9ac87af483a6" prot="private" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>type_name_</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1aed32832c653df6e1b894e21ee10dd613" prot="private" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>type_ptr_</name></member>
      <member refid="classsystemc__clang_1_1TemplateType_1a7005e59280437167bba6d864529bd63c" prot="public" virt="non-virtual"><scope>systemc_clang::TemplateType</scope><name>~TemplateType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
