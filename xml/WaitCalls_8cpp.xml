<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="WaitCalls_8cpp" kind="file" language="C++">
    <compoundname>WaitCalls.cpp</compoundname>
    <includes refid="WaitCalls_8h" local="yes">WaitCalls.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="12">
        <label>clang/Basic/SourceManager.h</label>
      </node>
      <node id="7">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="6">
        <label>clang/AST/PrettyPrinter.h</label>
      </node>
      <node id="10">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="4">
        <label>WaitContainer.h</label>
        <link refid="WaitContainer_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>FindWait.h</label>
        <link refid="FindWait_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Utility.h</label>
        <link refid="Utility_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>clang/AST/DeclCXX.h</label>
      </node>
      <node id="2">
        <label>WaitCalls.h</label>
        <link refid="WaitCalls_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/model/WaitCalls.cpp</label>
        <link refid="WaitCalls_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="WaitCalls_8h" kindref="compound">WaitCalls.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="classsystemc__clang_1_1WaitCalls_1a1294cedba5c9d59fe679bb7fe2627f8d" kindref="member">WaitCalls::~WaitCalls</ref>()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_astNode<sp/>does<sp/>*NOT*<sp/>need<sp/>to<sp/>be<sp/>deleted<sp/>because<sp/>clang<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>responsible<sp/>for<sp/>freeing<sp/>the<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="classsystemc__clang_1_1WaitCalls_1a263c4b3caa88473c43aff19183dbaecf" kindref="member">WaitCalls::WaitCalls</ref>()<sp/>:<sp/>_name(</highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">WaitCalls::WaitCalls(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;name,<sp/><ref refid="classsystemc__clang_1_1FindWait_1a1fd6b2134e60c643a437437ed75d765d" kindref="member">FindWait::waitListType</ref><sp/>waitList)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_name(name),<sp/>_waitList(waitList)<sp/>{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">WaitCalls::WaitCalls(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1WaitCalls" kindref="compound">WaitCalls</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1WaitCalls_1abaf0084647eaf7d47d8cb1eef48e9ab5" kindref="member">_name</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1WaitCalls_1abaf0084647eaf7d47d8cb1eef48e9ab5" kindref="member">_name</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1WaitCalls_1a594473e183e6738a56258c8428d55b2e" kindref="member">_waitList</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1WaitCalls_1a594473e183e6738a56258c8428d55b2e" kindref="member">_waitList</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1WaitCalls_1aa5305f25ce3d68abf5450b0f7d77dd88" kindref="member">WaitCalls::getName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1WaitCalls_1abaf0084647eaf7d47d8cb1eef48e9ab5" kindref="member">_name</ref>;<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindWait_1a1fd6b2134e60c643a437437ed75d765d" kindref="member">FindWait::waitListType</ref><sp/><ref refid="classsystemc__clang_1_1WaitCalls_1a48da43f79f4cb4b9383f252db6e1f8bb" kindref="member">WaitCalls::getWaitList</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1WaitCalls_1a594473e183e6738a56258c8428d55b2e" kindref="member">_waitList</ref>;<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="27"><highlight class="comment">FindWait::processWaitEventMapType<sp/>WaitCalls::getProcessWaitEventMap()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>_processEventMap;</highlight></codeline>
<codeline lineno="29"><highlight class="comment">}</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1WaitCalls_1a85760df5cfc908227aa1e6fbbb6b40c5" kindref="member">WaitCalls::dump</ref>(raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classsystemc__clang_1_1WaitCalls_1a594473e183e6738a56258c8428d55b2e" kindref="member">_waitList</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/>Wait<sp/>Call:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1WaitCalls_1a594473e183e6738a56258c8428d55b2e" kindref="member">_waitList</ref>.at(i);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/>Event(s)<sp/>this<sp/>process<sp/>is<sp/>waiting<sp/>on:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/model/WaitCalls.cpp"/>
  </compounddef>
</doxygen>
