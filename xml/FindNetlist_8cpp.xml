<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="FindNetlist_8cpp" kind="file" language="C++">
    <compoundname>FindNetlist.cpp</compoundname>
    <includes refid="FindNetlist_8h" local="yes">FindNetlist.h</includes>
    <incdepgraph>
      <node id="5">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="4">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="1">
        <label>src/matchers/FindNetlist.cpp</label>
        <link refid="FindNetlist_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>FindNetlist.h</label>
        <link refid="FindNetlist_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>clang/AST/DeclCXX.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FindNetlist_8h" kindref="compound">FindNetlist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindNetlist_1abae20b453424f6a47b95cea9deb1735b" kindref="member">FindNetlist::FindNetlist</ref>(FunctionDecl<sp/>*fdecl)<sp/>:<sp/>_pass{1}<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/>TraverseDecl(fdecl);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>_pass<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">FindNetlist::~FindNetlist()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>.clear();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref>.clear();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.clear();</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindNetlist_1abae20b453424f6a47b95cea9deb1735b" kindref="member">FindNetlist::FindNetlist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist" kindref="compound">FindNetlist</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1acfb41e8566e17999fabd9584f97edeb2" kindref="member">_pass</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1FindNetlist_1acfb41e8566e17999fabd9584f97edeb2" kindref="member">_pass</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a10770af9d8ab4826e0943c1f77085dc1" kindref="member">FindNetlist::updateInstanceListModuleMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;instanceName,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;moduleName)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>.find(moduleName)<sp/>==<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>instanceList;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceList.push_back(instanceName);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>.insert(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1acae6cc93b649887a31e0d0c93abb6e6e" kindref="member">instanceListModulePairType</ref>(moduleName,<sp/>instanceList));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceListModuleMapType::iterator<sp/>instanceListModuleMapFound<sp/>=</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>.find(moduleName);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>instanceList{instanceListModuleMapFound-&gt;second};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceList.push_back(instanceName);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>.erase(moduleName);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>.insert(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1acae6cc93b649887a31e0d0c93abb6e6e" kindref="member">instanceListModulePairType</ref>(moduleName,<sp/>instanceList));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a0817d4cab851f6f9c07226795d3bb9f1" kindref="member">FindNetlist::VisitCXXOperatorCallExpr</ref>(CXXOperatorCallExpr<sp/>*ce)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundME<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::string<sp/>moduleName;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::string<sp/>instanceName;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::string<sp/>portName;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>std::string<sp/>signalName;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Stmt::child_iterator<sp/>it<sp/>=<sp/>ce-&gt;IgnoreImpCasts()-&gt;child_begin(),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/>ce-&gt;IgnoreImpCasts()-&gt;child_end();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr<sp/>*e<sp/>=<sp/>dyn_cast&lt;Expr&gt;(*it))<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MemberExpr<sp/>*me<sp/>=<sp/>dyn_cast&lt;MemberExpr&gt;(e-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DeclRefExpr<sp/>*de<sp/>=</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dyn_cast&lt;DeclRefExpr&gt;(me-&gt;getBase()-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moduleName<sp/>=</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de-&gt;getDecl()-&gt;getType().getBaseTypeIdentifier()-&gt;getName().str();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instanceName<sp/>=<sp/>de-&gt;getFoundDecl()-&gt;getNameAsString();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portName<sp/>=<sp/>me-&gt;getMemberDecl()-&gt;getNameAsString();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundME<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DeclRefExpr<sp/>*de<sp/>=<sp/>dyn_cast&lt;DeclRefExpr&gt;(e-&gt;IgnoreImpCasts()))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundME)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signalName<sp/>=<sp/>de-&gt;getNameInfo().getAsString();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundME<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>.find(instanceName)<sp/>==<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>.insert(<ref refid="classsystemc__clang_1_1FindNetlist_1a5d3bc5e0b09c88b902fbf73e7ba91eb8" kindref="member">instanceModulePairType</ref>(instanceName,<sp/>moduleName));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref>.clear();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a10770af9d8ab4826e0943c1f77085dc1" kindref="member">updateInstanceListModuleMap</ref>(instanceName,<sp/>moduleName);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref>.insert(<ref refid="classsystemc__clang_1_1FindNetlist_1a149fe83ade7e3468bc49ae42dee28a46" kindref="member">portSignalPairType</ref>(portName,<sp/>signalName));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.find(instanceName)<sp/>==</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.insert(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a9a9dfe4431764501134dd2aa80eff673" kindref="member">instancePortSignalPairType</ref>(instanceName,<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref>));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.erase(instanceName);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.insert(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a9a9dfe4431764501134dd2aa80eff673" kindref="member">instancePortSignalPairType</ref>(instanceName,<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref>));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1ad9356ee3634a7ab8f6df78eb952cc374" kindref="member">FindNetlist::getNumInstances</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>moduleName)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(instanceModuleMapType::iterator<sp/>it<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>.begin(),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>.end();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>modName<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modName<sp/>==<sp/>moduleName)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>counter;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a9f9a1a9b49e67f0d8861887ccbdabc01" kindref="member">FindNetlist::portSignalMapType</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1FindNetlist_1a51222b712d7b801d2e4bbf277e85b834" kindref="member">FindNetlist::getPortSignalMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a1a31fdb6341bd370b5aac69ef6b4d9e9" kindref="member">port_signal_map_</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a7b975fb543df586174c99f6d4ed81800" kindref="member">FindNetlist::instanceListModuleMapType</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindNetlist_1a535e45334a681317911a5b3d9e1d6f0e" kindref="member">FindNetlist::getInstanceListModuleMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a382835fd994c7c545cd265877b68c286" kindref="member">inst_list_module_map_</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a52b44a67e9256fb58d17050a35acb953" kindref="member">FindNetlist::instanceModuleMapType</ref><sp/>&amp;<ref refid="classsystemc__clang_1_1FindNetlist_1a8d35235664b5b29582fd67105e7f6557" kindref="member">FindNetlist::getInstanceModuleMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a0c687bf7d0bac3a2fb59d5fa889435c1" kindref="member">FindNetlist::instancePortSignalMapType</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="classsystemc__clang_1_1FindNetlist_1a118b0dba9c558682f329ee385481baad" kindref="member">FindNetlist::getInstancePortSignalMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1ad3183c643a3cb32f756f102b0d81431d" kindref="member">FindNetlist::dump</ref>()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>llvm::errs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>-----------------<sp/>Netlist<sp/>dump<sp/>-----------------<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(instanceModuleMapType::iterator<sp/>it<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>.begin(),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a8bf741a3f9c422cfa96323592144cdb4" kindref="member">inst_module_map_</ref>.end();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>eit;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::errs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Instance<sp/>Name<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;first</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Module<sp/>Name<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>instanceName<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.find(instanceName)<sp/>!=</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>instancePortSignalMapType::iterator<sp/>instancePortSignalMapFound<sp/>=</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a5c239fe7f713261cbbd7eff4c7fdc205" kindref="member">inst_port_signal_map_</ref>.find(instanceName);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsystemc__clang_1_1FindNetlist_1a9f9a1a9b49e67f0d8861887ccbdabc01" kindref="member">portSignalMapType</ref><sp/>portSignalMap<sp/>=<sp/>instancePortSignalMapFound-&gt;second;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(portSignalMapType::iterator<sp/>pit<sp/>=<sp/>portSignalMap.begin(),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pite<sp/>=<sp/>portSignalMap.end();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pit<sp/>!=<sp/>pite;<sp/>pit++)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::errs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>Port<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pit-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>------&gt;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pit-&gt;second;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>llvm::errs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>No<sp/>instance<sp/>name<sp/>found<sp/>//////<sp/>weird.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::errs()</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>------------------------------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/matchers/FindNetlist.cpp"/>
  </compounddef>
</doxygen>
