<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="EventDecl_8cpp" kind="file" language="C++">
    <compoundname>EventDecl.cpp</compoundname>
    <includes refid="EventDecl_8h" local="yes">EventDecl.h</includes>
    <includes local="no">string</includes>
    <includes refid="FindTemplateTypes_8h" local="yes">FindTemplateTypes.h</includes>
    <incdepgraph>
      <node id="16">
        <label>queue</label>
      </node>
      <node id="6">
        <label>clang/Basic/SourceManager.h</label>
      </node>
      <node id="7">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="5">
        <label>clang/AST/PrettyPrinter.h</label>
      </node>
      <node id="14">
        <label>clang/AST/RecursiveASTVisitor.h</label>
      </node>
      <node id="1">
        <label>src/model/EventDecl.cpp</label>
        <link refid="EventDecl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EventDecl.h</label>
        <link refid="EventDecl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="13">
        <label>json.hpp</label>
      </node>
      <node id="10">
        <label>FindTemplateTypes.h</label>
        <link refid="FindTemplateTypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Tree.h</label>
        <link refid="Tree_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stack</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="3">
        <label>Utility.h</label>
        <link refid="Utility_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>clang/AST/DeclCXX.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EventDecl_8h" kindref="compound">EventDecl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FindTemplateTypes_8h" kindref="compound">FindTemplateTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classsystemc__clang_1_1EventDecl_1af2eb6c188af1f3d21cc909710252bb12" kindref="member">EventDecl::~EventDecl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_astNode<sp/>does<sp/>*NOT*<sp/>need<sp/>to<sp/>be<sp/>deleted<sp/>because<sp/>clang<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>responsible<sp/>for<sp/>freeing<sp/>the<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="classsystemc__clang_1_1EventDecl_1a18838003bf22ecfcf44e4c0525dad502" kindref="member">EventDecl::EventDecl</ref>()<sp/>:<sp/>_name{</highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">},<sp/>_astNode{nullptr}<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">EventDecl::EventDecl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;name,<sp/>FieldDecl<sp/>*fd)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_name{name},<sp/>_astNode{fd}<sp/>{}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">EventDecl::EventDecl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventDecl" kindref="compound">EventDecl</ref><sp/>&amp;from)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EventDecl_1ac7357257225eb731d6a785cb38bad571" kindref="member">_name</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1EventDecl_1ac7357257225eb731d6a785cb38bad571" kindref="member">_name</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EventDecl_1a016d73afa2247cfd5c3f27a10fd0c7de" kindref="member">_astNode</ref><sp/>=<sp/>from.<ref refid="classsystemc__clang_1_1EventDecl_1a016d73afa2247cfd5c3f27a10fd0c7de" kindref="member">_astNode</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventDecl_1a3b312c8fe250d5c3389b731434968e13" kindref="member">EventDecl::ptrCheck</ref>()<sp/>{<sp/>assert(<ref refid="classsystemc__clang_1_1EventDecl_1a016d73afa2247cfd5c3f27a10fd0c7de" kindref="member">_astNode</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventDecl_1afeecb8ff73bb10f64a357fe908c80fd8" kindref="member">EventDecl::getName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventDecl_1ac7357257225eb731d6a785cb38bad571" kindref="member">_name</ref>;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">FieldDecl<sp/>*<ref refid="classsystemc__clang_1_1EventDecl_1ab352b6039879de107f298bd08de48184" kindref="member">EventDecl::getASTNode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EventDecl_1a3b312c8fe250d5c3389b731434968e13" kindref="member">ptrCheck</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventDecl_1a016d73afa2247cfd5c3f27a10fd0c7de" kindref="member">_astNode</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1EventDecl_1a77527fd82431888033223ce6927f3b8f" kindref="member">EventDecl::dump</ref>(llvm::raw_ostream<sp/>&amp;os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabn)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1EventDecl_1a3b312c8fe250d5c3389b731434968e13" kindref="member">ptrCheck</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1Utility" kindref="compound">Utility</ref><sp/>u;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>u.<ref refid="classsystemc__clang_1_1Utility_1afee859008a964bba751d6c914c4b04b0" kindref="member">tabit</ref>(os,<sp/>tabn);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i=0;<sp/>i<sp/>&lt;<sp/>tabn;<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventDecl<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1EventDecl_1ac7357257225eb731d6a785cb38bad571" kindref="member">_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>FieldDecl<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classsystemc__clang_1_1EventDecl_1ab352b6039879de107f298bd08de48184" kindref="member">getASTNode</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/model/EventDecl.cpp"/>
  </compounddef>
</doxygen>
