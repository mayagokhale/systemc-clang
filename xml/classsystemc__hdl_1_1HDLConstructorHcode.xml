<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classsystemc__hdl_1_1HDLConstructorHcode" kind="class" language="C++" prot="public">
    <compoundname>systemc_hdl::HDLConstructorHcode</compoundname>
    <includes refid="HDLHnode_8h" local="no">HDLHnode.h</includes>
    <innerclass refid="structsystemc__hdl_1_1HDLConstructorHcode_1_1for__info__t" prot="public">systemc_hdl::HDLConstructorHcode::for_info_t</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsystemc__hdl_1_1HDLConstructorHcode_1a4e57797945f1096c2b9eb20af61c605a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref></type>
        <definition>hNodep systemc_hdl::HDLConstructorHcode::hnewpb</definition>
        <argsstring></argsstring>
        <name>hnewpb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="73" column="12" bodyfile="plugins/hdl/HDLHnode.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsystemc__hdl_1_1HDLConstructorHcode_1afca50bae03fd257b2420ebda5df3a5a9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref> &gt;</type>
        <definition>std::vector&lt;hNodep&gt; systemc_hdl::HDLConstructorHcode::hnewsens</definition>
        <argsstring></argsstring>
        <name>hnewsens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="74" column="17" bodyfile="plugins/hdl/HDLHnode.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1a6bafffa08d3113400f5e5ac189da0fca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>systemc_hdl::HDLConstructorHcode::HDLConstructorHcode</definition>
        <argsstring>()</argsstring>
        <name>HDLConstructorHcode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="53" column="5" bodyfile="plugins/hdl/HDLHnode.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1a336155f74c106eeccd2a05810fe5ca10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref></type>
        <definition>hNodep systemc_hdl::HDLConstructorHcode::ProcessCXXConstructorHcode</definition>
        <argsstring>(hNodep xconstructor)</argsstring>
        <name>ProcessCXXConstructorHcode</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref></type>
          <declname>xconstructor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="60" column="12" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="431" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1af6bb68caced4b2ead1de429b68da3f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_hdl::HDLConstructorHcode::HDLLoop</definition>
        <argsstring>(hNodep &amp;hp, std::vector&lt; for_info_t &gt; &amp;for_info)</argsstring>
        <name>HDLLoop</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref> &amp;</type>
          <declname>hp</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structsystemc__hdl_1_1HDLConstructorHcode_1_1for__info__t" kindref="compound">for_info_t</ref> &gt; &amp;</type>
          <declname>for_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="61" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="390" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1a346a0da5c4e787647adc16e63f527640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_hdl::HDLConstructorHcode::PushRange</definition>
        <argsstring>(hNodep &amp;hp, std::vector&lt; for_info_t &gt; &amp;for_info)</argsstring>
        <name>PushRange</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref> &amp;</type>
          <declname>hp</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structsystemc__hdl_1_1HDLConstructorHcode_1_1for__info__t" kindref="compound">for_info_t</ref> &gt; &amp;</type>
          <declname>for_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for loop range for port bindings is expecting 3 simple range arguments. They must be numeric constants. If not, defaults are used. eg. hForStmt NONAME [ hVarAssign NONAME [ hVarref _local_5 NOLIST hLiteral 0 NOLIST ] hBinop &lt; [ hVarref _local_5 NOLIST hLiteral 16 NOLIST ] hUnop ++ [ hVarref _local_5 NOLIST ] hBinop () [ hBinop ARRAYSUBSCRIPT [ hVarref u_encode_ints##s_block NOLIST hVarref _local_5 NOLIST ] hBinop ARRAYSUBSCRIPT [ hVarref c_bb_block NOLIST hVarref _local_5 NOLIST ] ] ] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="63" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="88" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1abbad8033124d9af4a8fee96f31a3195f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_hdl::HDLConstructorHcode::PopRange</definition>
        <argsstring>(std::vector&lt; for_info_t &gt; &amp;for_info)</argsstring>
        <name>PopRange</name>
        <param>
          <type>std::vector&lt; <ref refid="structsystemc__hdl_1_1HDLConstructorHcode_1_1for__info__t" kindref="compound">for_info_t</ref> &gt; &amp;</type>
          <declname>for_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="64" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1a08d960ba2199c528143f227a050647f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_hdl::HDLConstructorHcode::UnrollBinding</definition>
        <argsstring>(hNodep &amp;hp_orig, std::vector&lt; for_info_t &gt; &amp;for_info)</argsstring>
        <name>UnrollBinding</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref> &amp;</type>
          <declname>hp_orig</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structsystemc__hdl_1_1HDLConstructorHcode_1_1for__info__t" kindref="compound">for_info_t</ref> &gt; &amp;</type>
          <declname>for_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="65" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="193" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1a11394e7cefee35cd54676c564b965b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool systemc_hdl::HDLConstructorHcode::SetupSenslist</definition>
        <argsstring>(hNodep hp)</argsstring>
        <name>SetupSenslist</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref></type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="66" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="297" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1a05248920aca5bbbd4e1bd5c4e76b801f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_hdl::HDLConstructorHcode::UnrollSensitem</definition>
        <argsstring>(hNodep &amp;hp_orig, std::vector&lt; for_info_t &gt; &amp;for_info)</argsstring>
        <name>UnrollSensitem</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref> &amp;</type>
          <declname>hp_orig</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structsystemc__hdl_1_1HDLConstructorHcode_1_1for__info__t" kindref="compound">for_info_t</ref> &gt; &amp;</type>
          <declname>for_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="67" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="329" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1a16cdcd5153ca3c23537b9970ba1096ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_hdl::HDLConstructorHcode::SubstituteIndex</definition>
        <argsstring>(hNodep &amp;hp, std::vector&lt; for_info_t &gt; &amp;for_info)</argsstring>
        <name>SubstituteIndex</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref> &amp;</type>
          <declname>hp</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structsystemc__hdl_1_1HDLConstructorHcode_1_1for__info__t" kindref="compound">for_info_t</ref> &gt; &amp;</type>
          <declname>for_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="68" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="122" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1adea88dbd8d04f1b28ce8f35337fa4425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref></type>
        <definition>hNodep systemc_hdl::HDLConstructorHcode::HnodeDeepCopy</definition>
        <argsstring>(hNodep hp)</argsstring>
        <name>HnodeDeepCopy</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref></type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="69" column="12" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1ada903ad06f49d577b84e3f0ad3bb5585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_hdl::HDLConstructorHcode::RemoveSCMethod</definition>
        <argsstring>(hNodep &amp;hp)</argsstring>
        <name>RemoveSCMethod</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref> &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="70" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="24" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classsystemc__hdl_1_1HDLConstructorHcode_1a68068d9877cbf140acc7d086639db591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void systemc_hdl::HDLConstructorHcode::CleanupInitHcode</definition>
        <argsstring>(hNodep &amp;hp)</argsstring>
        <name>CleanupInitHcode</name>
        <param>
          <type><ref refid="namespacehnode_1ae5db0847c00e6e0627bc73df624628d0" kindref="member">hNodep</ref> &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="plugins/hdl/HDLHnode.h" line="71" column="10" bodyfile="plugins/hdl/HDLHnode.cpp" bodystart="40" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>hnode::hNode</label>
        <link refid="classhnode_1_1hNode"/>
      </node>
      <node id="1">
        <label>systemc_hdl::HDLConstructorHcode</label>
        <link refid="classsystemc__hdl_1_1HDLConstructorHcode"/>
        <childnode refid="2" relation="usage">
          <edgelabel>hnewpb</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="plugins/hdl/HDLHnode.h" line="51" column="3" bodyfile="plugins/hdl/HDLHnode.h" bodystart="51" bodyend="76"/>
    <listofallmembers>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a68068d9877cbf140acc7d086639db591" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>CleanupInitHcode</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a6bafffa08d3113400f5e5ac189da0fca" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>HDLConstructorHcode</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1af6bb68caced4b2ead1de429b68da3f47" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>HDLLoop</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a4e57797945f1096c2b9eb20af61c605a" prot="private" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>hnewpb</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1afca50bae03fd257b2420ebda5df3a5a9" prot="private" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>hnewsens</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1adea88dbd8d04f1b28ce8f35337fa4425" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>HnodeDeepCopy</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1abbad8033124d9af4a8fee96f31a3195f" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>PopRange</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a336155f74c106eeccd2a05810fe5ca10" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>ProcessCXXConstructorHcode</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a346a0da5c4e787647adc16e63f527640" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>PushRange</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1ada903ad06f49d577b84e3f0ad3bb5585" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>RemoveSCMethod</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a11394e7cefee35cd54676c564b965b83" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>SetupSenslist</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a16cdcd5153ca3c23537b9970ba1096ce" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>SubstituteIndex</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a08d960ba2199c528143f227a050647f4" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>UnrollBinding</name></member>
      <member refid="classsystemc__hdl_1_1HDLConstructorHcode_1a05248920aca5bbbd4e1bd5c4e76b801f" prot="public" virt="non-virtual"><scope>systemc_hdl::HDLConstructorHcode</scope><name>UnrollSensitem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
