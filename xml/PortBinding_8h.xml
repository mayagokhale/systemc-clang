<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="PortBinding_8h" kind="file" language="C++">
    <compoundname>PortBinding.h</compoundname>
    <includes refid="ArrayTypeUtils_8h" local="yes">ArrayTypeUtils.h</includes>
    <includedby refid="NetlistMatcher_8h" local="yes">src/matchers/NetlistMatcher.h</includedby>
    <includedby refid="ModuleInstance_8h" local="yes">src/model/ModuleInstance.h</includedby>
    <includedby refid="HDLMain_8cpp" local="yes">plugins/hdl/HDLMain.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>clang/AST/Type.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="6">
        <label>clang/AST/ExprCXX.h</label>
      </node>
      <node id="1">
        <label>src/model/PortBinding.h</label>
        <link refid="PortBinding_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>clang/AST/DeclCXX.h</label>
      </node>
      <node id="2">
        <label>ArrayTypeUtils.h</label>
        <link refid="ArrayTypeUtils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>src/PluginAction.h</label>
        <link refid="PluginAction_8h"/>
      </node>
      <node id="15">
        <label>plugins/hdl/HDLBody.h</label>
        <link refid="HDLBody_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/SystemCClang.h</label>
        <link refid="SystemCClang_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/SCuitable/GlobalSuspensionAutomata.cpp</label>
        <link refid="GlobalSuspensionAutomata_8cpp"/>
      </node>
      <node id="14">
        <label>plugins/hdl/HDLBody.cpp</label>
        <link refid="HDLBody_8cpp"/>
      </node>
      <node id="7">
        <label>src/model/Model.cpp</label>
        <link refid="Model_8cpp"/>
      </node>
      <node id="20">
        <label>plugins/hdl/HDLType.cpp</label>
        <link refid="HDLType_8cpp"/>
      </node>
      <node id="22">
        <label>src/matchers/PortMatcher.h</label>
        <link refid="PortMatcher_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/SCuitable/GlobalSuspensionAutomata.h</label>
        <link refid="GlobalSuspensionAutomata_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/model/Model.h</label>
        <link refid="Model_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>plugins/hdl/HDLHnode.cpp</label>
        <link refid="HDLHnode_8cpp"/>
      </node>
      <node id="16">
        <label>plugins/hdl/HDLMain.h</label>
        <link refid="HDLMain_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/matchers/Matchers.h</label>
        <link refid="Matchers_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>plugins/hdl/HDLMain.cpp</label>
        <link refid="HDLMain_8cpp"/>
      </node>
      <node id="4">
        <label>src/model/ModuleInstance.h</label>
        <link refid="ModuleInstance_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/SystemCClang.cpp</label>
        <link refid="SystemCClang_8cpp"/>
      </node>
      <node id="18">
        <label>plugins/hdl/HDLHnode.h</label>
        <link refid="HDLHnode_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/model/PortBinding.h</label>
        <link refid="PortBinding_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/matchers/NetlistMatcher.h</label>
        <link refid="NetlistMatcher_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/SAPlugin.h</label>
        <link refid="SAPlugin_8h"/>
      </node>
      <node id="21">
        <label>plugins/hdl/HDLType.h</label>
        <link refid="HDLType_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/SCuitable/TimeAnalysis.h</label>
        <link refid="TimeAnalysis_8h"/>
      </node>
      <node id="23">
        <label>src/model/ModuleInstance.cpp</label>
        <link refid="ModuleInstance_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classsystemc__clang_1_1PortBinding" prot="public">systemc_clang::PortBinding</innerclass>
    <innernamespace refid="namespacesystemc__clang">systemc_clang</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_PORT_BINDING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PORT_BINDING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ArrayTypeUtils_8h" kindref="compound">ArrayTypeUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystemc__clang" kindref="compound">systemc_clang</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesc__ast__matchers_1_1utils_1_1array__type" kindref="compound">sc_ast_matchers::utils::array_type</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classsystemc__clang_1_1PortBinding" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsystemc__clang_1_1PortBinding" kindref="compound">PortBinding</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="classsystemc__clang_1_1PortBinding_1a0effb4c0e27bbcfbd56f59bca0ca46e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>clang::Expr<sp/>*&gt;<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a0effb4c0e27bbcfbd56f59bca0ca46e6" kindref="member">ArraySubscriptsExprType</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="18" refid="classsystemc__clang_1_1PortBinding_1a026b4d99698ce6e3d49b82488e5f7e69" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::Expr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a026b4d99698ce6e3d49b82488e5f7e69" kindref="member">caller_expr_</ref>;</highlight></codeline>
<codeline lineno="19" refid="classsystemc__clang_1_1PortBinding_1a143dbab63245fc86bb7c3ef2144ec8b5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::ArraySubscriptExpr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a143dbab63245fc86bb7c3ef2144ec8b5" kindref="member">caller_array_expr_</ref>;</highlight></codeline>
<codeline lineno="20" refid="classsystemc__clang_1_1PortBinding_1ae14c585c2c9ba37a0aa9644cb5ca5cc8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::MemberExpr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1ae14c585c2c9ba37a0aa9644cb5ca5cc8" kindref="member">caller_instance_me_expr_</ref>;</highlight></codeline>
<codeline lineno="21" refid="classsystemc__clang_1_1PortBinding_1a7ca2386055369582bcfb15e2782e64ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::Expr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a7ca2386055369582bcfb15e2782e64ad" kindref="member">caller_port_array_expr_</ref>;</highlight></codeline>
<codeline lineno="22" refid="classsystemc__clang_1_1PortBinding_1a716943516d2dc10fd3f6805494c67114" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a0effb4c0e27bbcfbd56f59bca0ca46e6" kindref="member">ArraySubscriptsExprType</ref><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a716943516d2dc10fd3f6805494c67114" kindref="member">caller_port_array_subscripts_</ref>;</highlight></codeline>
<codeline lineno="23" refid="classsystemc__clang_1_1PortBinding_1a9af7a1acc339034ae2fb32c43b985169" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::MemberExpr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a9af7a1acc339034ae2fb32c43b985169" kindref="member">caller_port_me_expr_</ref>;</highlight></codeline>
<codeline lineno="24" refid="classsystemc__clang_1_1PortBinding_1a99959a59584fe9b98e37394d1800ec05" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a0effb4c0e27bbcfbd56f59bca0ca46e6" kindref="member">ArraySubscriptsExprType</ref><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a99959a59584fe9b98e37394d1800ec05" kindref="member">caller_array_subscripts_</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classsystemc__clang_1_1PortBinding_1a4f5e8a8950f91aa19070c252e2920d9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::Expr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a4f5e8a8950f91aa19070c252e2920d9c" kindref="member">callee_expr_</ref>;</highlight></codeline>
<codeline lineno="28" refid="classsystemc__clang_1_1PortBinding_1a46fa575845c6a9bb0edd004bf6bf353e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::MemberExpr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a46fa575845c6a9bb0edd004bf6bf353e" kindref="member">callee_port_me_expr_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classsystemc__clang_1_1PortBinding_1a3f12e3964d8904c2c594dc6dd559bae8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::MemberExpr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a3f12e3964d8904c2c594dc6dd559bae8" kindref="member">callee_instance_me_expr_</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classsystemc__clang_1_1PortBinding_1a942150b95463bf26159072f1f1044914" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::ArraySubscriptExpr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a942150b95463bf26159072f1f1044914" kindref="member">callee_array_expr_</ref>;</highlight></codeline>
<codeline lineno="31" refid="classsystemc__clang_1_1PortBinding_1a02a0565ab3a38b5aee283e7d5f8adf30" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a0effb4c0e27bbcfbd56f59bca0ca46e6" kindref="member">ArraySubscriptsExprType</ref><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a02a0565ab3a38b5aee283e7d5f8adf30" kindref="member">callee_array_subscripts_</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Instance<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classsystemc__clang_1_1PortBinding_1a715028e7c52f0085911fbf204a4ba9d5" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a715028e7c52f0085911fbf204a4ba9d5" kindref="member">caller_instance_name_</ref>;</highlight></codeline>
<codeline lineno="37" refid="classsystemc__clang_1_1PortBinding_1aae42a0a5eb8919133e7f0fe46806e18b" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1aae42a0a5eb8919133e7f0fe46806e18b" kindref="member">caller_port_name_</ref>;</highlight></codeline>
<codeline lineno="38" refid="classsystemc__clang_1_1PortBinding_1a143d25608456e5b2c7fb0d2d10561688" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a143d25608456e5b2c7fb0d2d10561688" kindref="member">caller_instance_type_name_</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classsystemc__clang_1_1PortBinding_1a91067964a5466069408d740ad5d3d7fe" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a91067964a5466069408d740ad5d3d7fe" kindref="member">callee_instance_name_</ref>;</highlight></codeline>
<codeline lineno="41" refid="classsystemc__clang_1_1PortBinding_1a7f355ba5c93438a515238b370cfad3de" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a7f355ba5c93438a515238b370cfad3de" kindref="member">callee_port_name_</ref>;</highlight></codeline>
<codeline lineno="42" refid="classsystemc__clang_1_1PortBinding_1a8e400410dc8687510dec2b4b4820e654" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a8e400410dc8687510dec2b4b4820e654" kindref="member">callee_type_name_</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classsystemc__clang_1_1PortBinding_1a2d1ca9566823728e7bef38aad186dcde" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a2d1ca9566823728e7bef38aad186dcde" kindref="member">instance_type_</ref>;</highlight></codeline>
<codeline lineno="45" refid="classsystemc__clang_1_1PortBinding_1afda27f653f063b97e5434d85a4e80a7f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1afda27f653f063b97e5434d85a4e80a7f" kindref="member">instance_var_name_</ref>;</highlight></codeline>
<codeline lineno="46" refid="classsystemc__clang_1_1PortBinding_1a1f6c1768a1be812b51b968e00822853d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a1f6c1768a1be812b51b968e00822853d" kindref="member">instance_constructor_name_</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Declaration<sp/>for<sp/>the<sp/>instance&apos;s<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classsystemc__clang_1_1PortBinding_1a840edc4d7d15b2584ff27d923cc67a4e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::CXXRecordDecl<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a840edc4d7d15b2584ff27d923cc67a4e" kindref="member">instance_type_decl_</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="classsystemc__clang_1_1PortBinding_1a4bd0428a8f23be87f89e7cda084139a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a4bd0428a8f23be87f89e7cda084139a3" kindref="member">getCallerInstanceName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caller_instance_name_;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54" refid="classsystemc__clang_1_1PortBinding_1a31718873d60c8a69ef3357b0fc1d3fca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a31718873d60c8a69ef3357b0fc1d3fca" kindref="member">getCallerInstanceTypeName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caller_instance_type_name_;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57" refid="classsystemc__clang_1_1PortBinding_1af2aa9c5d2455ab06f1661cd76ded189f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1af2aa9c5d2455ab06f1661cd76ded189f" kindref="member">getCallerPortName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caller_port_name_;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classsystemc__clang_1_1PortBinding_1a1376ee922434c1d318027bf5623c936b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a1376ee922434c1d318027bf5623c936b" kindref="member">getCalleeInstanceName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>callee_instance_name_;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62" refid="classsystemc__clang_1_1PortBinding_1a056c88fb1c71198441be3779e9c1ff12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a056c88fb1c71198441be3779e9c1ff12" kindref="member">getCalleePortName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>callee_port_name_;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classsystemc__clang_1_1PortBinding_1aa0ad3a4de12bf03fd0382f0f8fb2c0dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a0effb4c0e27bbcfbd56f59bca0ca46e6" kindref="member">ArraySubscriptsExprType</ref><sp/><ref refid="classsystemc__clang_1_1PortBinding_1aa0ad3a4de12bf03fd0382f0f8fb2c0dc" kindref="member">getCallerArraySubscripts</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caller_array_subscripts_;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classsystemc__clang_1_1PortBinding_1ad83753efdd44051cfa710bfa00d57084" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a0effb4c0e27bbcfbd56f59bca0ca46e6" kindref="member">ArraySubscriptsExprType</ref><sp/><ref refid="classsystemc__clang_1_1PortBinding_1ad83753efdd44051cfa710bfa00d57084" kindref="member">getCallerPortArraySubscripts</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caller_port_array_subscripts_;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classsystemc__clang_1_1PortBinding_1a7da5517adff2b424a37aa0a9c8ea4bba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a0effb4c0e27bbcfbd56f59bca0ca46e6" kindref="member">ArraySubscriptsExprType</ref><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a7da5517adff2b424a37aa0a9c8ea4bba" kindref="member">getCalleeArraySubscripts</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>callee_array_subscripts_;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classsystemc__clang_1_1PortBinding_1aae351ed5cfcc4a1203d2c96160060872" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1PortBinding_1aae351ed5cfcc4a1203d2c96160060872" kindref="member">setInstanceVarName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>instance_var_name_<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79" refid="classsystemc__clang_1_1PortBinding_1a552fc900e72c58a08fe91a601d083d99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a552fc900e72c58a08fe91a601d083d99" kindref="member">setInstanceConstructorName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>instance_constructor_name_<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classsystemc__clang_1_1PortBinding_1a515880f9dc12f43627d54e111c41ddef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="classsystemc__clang_1_1PortBinding_1a515880f9dc12f43627d54e111c41ddef" kindref="member">getPortName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>callee_instance_name_;<sp/>}</highlight></codeline>
<codeline lineno="84" refid="classsystemc__clang_1_1PortBinding_1a6c451d3430ce1e4d9b84539ba608156c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::MemberExpr<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a6c451d3430ce1e4d9b84539ba608156c" kindref="member">getCallerMemberExpr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caller_instance_me_expr_;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87" refid="classsystemc__clang_1_1PortBinding_1aca81e65bd1f98d625e71247a946dd4d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="classsystemc__clang_1_1PortBinding_1aca81e65bd1f98d625e71247a946dd4d8" kindref="member">getInstanceType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_type_;<sp/>}</highlight></codeline>
<codeline lineno="88" refid="classsystemc__clang_1_1PortBinding_1a5db914273696e24ec68351b3f6767a5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="classsystemc__clang_1_1PortBinding_1a5db914273696e24ec68351b3f6767a5a" kindref="member">getInstanceVarName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_var_name_;<sp/>}</highlight></codeline>
<codeline lineno="89" refid="classsystemc__clang_1_1PortBinding_1a3b6421c1ef347ca6bad167b9b944f88c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="classsystemc__clang_1_1PortBinding_1a3b6421c1ef347ca6bad167b9b944f88c" kindref="member">getInstanceConstructorName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_constructor_name_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92" refid="classsystemc__clang_1_1PortBinding_1a9e7757029c29a36711c931d1f9434cd1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clang::CXXRecordDecl<sp/>*<ref refid="classsystemc__clang_1_1PortBinding_1a9e7757029c29a36711c931d1f9434cd1" kindref="member">getInstanceTypeDecl</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance_type_decl_;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classsystemc__clang_1_1PortBinding_1a356024c2075154042aeb19be51dbd197" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classsystemc__clang_1_1PortBinding_1a356024c2075154042aeb19be51dbd197" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>return_str{getCallerInstanceTypeName()};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getCallerInstanceName()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>=<sp/>return_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>getCallerInstanceName();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getInstanceConstructorName()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>=<sp/>return_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>getInstanceConstructorName();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sub<sp/>:<sp/>getCallerArraySubscripts())<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_dref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_int_lit)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>is_int_lit-&gt;getValue().toString(32,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_dref_expr)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>is_dref_expr-&gt;getNameInfo().getName().getAsString();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getCallerPortName()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>=<sp/>return_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>getCallerPortName();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sub<sp/>:<sp/>getCallerPortArraySubscripts())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_dref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_int_lit)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>is_int_lit-&gt;getValue().toString(32,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_dref_expr)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>is_dref_expr-&gt;getNameInfo().getName().getAsString();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getCalleeInstanceName()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>=<sp/>return_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>getCalleeInstanceName();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sub<sp/>:<sp/>getCalleeArraySubscripts())<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_dref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_int_lit)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>is_int_lit-&gt;getValue().toString(32,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_dref_expr)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>is_dref_expr-&gt;getNameInfo().getName().getAsString();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getCalleePortName()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_str<sp/>=<sp/>return_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>getCalleePortName();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_str;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classsystemc__clang_1_1PortBinding_1a25fdfd072120fe0c79cfe6cba4f86542" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a25fdfd072120fe0c79cfe6cba4f86542" kindref="member">dump</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;caller<sp/>instance<sp/>type<sp/>name<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>caller_instance_type_name_</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;caller<sp/>instance<sp/>name<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>caller_instance_name_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;subscripts:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sub<sp/>:<sp/>caller_array_subscripts_)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_lit)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>int_lit-&gt;getValue();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decl_ref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decl_ref_expr)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>decl_ref_expr-&gt;getNameInfo().getName().getAsString();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;caller<sp/>port<sp/>name<sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>caller_port_name_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;subscripts:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sub<sp/>:<sp/>caller_port_array_subscripts_)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_lit)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>int_lit-&gt;getValue();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decl_ref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decl_ref_expr)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>decl_ref_expr-&gt;getNameInfo().getName().getAsString();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nCALLEE\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;callee<sp/>instance<sp/>name<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>callee_instance_name_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;callee<sp/>port<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>callee_port_name_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;subscripts:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sub<sp/>:<sp/>callee_array_subscripts_)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>int_lit{clang::dyn_cast&lt;clang::IntegerLiteral&gt;(sub)};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_lit)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>int_lit-&gt;getValue();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decl_ref_expr{clang::dyn_cast&lt;clang::DeclRefExpr&gt;(sub)};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decl_ref_expr)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>decl_ref_expr-&gt;getNameInfo().getName().getAsString();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classsystemc__clang_1_1PortBinding_1a408edf12d41406dc7d7957b3f975f2b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsystemc__clang_1_1PortBinding_1a408edf12d41406dc7d7957b3f975f2b3" kindref="member">PortBinding</ref>(clang::Expr<sp/>*caller_expr,<sp/>clang::Expr<sp/>*caller_port_expr,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clang::MemberExpr<sp/>*caller_port_me_expr,<sp/>clang::Expr<sp/>*callee_expr,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clang::MemberExpr<sp/>*callee_port_me_expr)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>caller_expr_{caller_expr},</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callee_expr_{callee_expr},</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_port_array_expr_{caller_port_expr},</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_port_me_expr_{caller_port_me_expr},</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callee_port_me_expr_{callee_port_me_expr}<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>caller_array_expr_<sp/>=<sp/>dyn_cast&lt;clang::ArraySubscriptExpr&gt;(caller_expr);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==&gt;<sp/>Extract<sp/>caller<sp/>port<sp/>name\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>port<sp/>is<sp/>initself<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caller_port_array_expr_)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caller_port_array_subscripts_<sp/>=</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesc__ast__matchers_1_1utils_1_1array__type_1aaceb5ab834462ecaf2da90c3b1da1794" kindref="member">getArraySubscripts</ref>(caller_port_array_expr_);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caller_port_me_expr_)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>caller_port_me_expr_-&gt;dump();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caller_port_name_<sp/>=</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_port_me_expr_-&gt;getMemberNameInfo().getAsString();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caller_array_expr_)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caller_instance_me_expr_<sp/>=<sp/><ref refid="namespacesc__ast__matchers_1_1utils_1_1array__type_1affa9a73bdbbac2e524a3e6babc1cbfd3" kindref="member">getArrayMemberExprName</ref>(caller_array_expr_);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caller_array_subscripts_<sp/>=<sp/><ref refid="namespacesc__ast__matchers_1_1utils_1_1array__type_1aaceb5ab834462ecaf2da90c3b1da1794" kindref="member">getArraySubscripts</ref>(caller_array_expr_);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caller_instance_me_expr_<sp/>=<sp/>dyn_cast&lt;clang::MemberExpr&gt;(caller_expr);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caller_instance_me_expr_)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caller_instance_name_<sp/>=</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_instance_me_expr_-&gt;getMemberNameInfo().getAsString();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=========<sp/>CALLER<sp/>ME<sp/>EXPR<sp/>========<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caller_instance_me_expr_-&gt;dump();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caller_instance_type_name_<sp/>=<sp/>caller_instance_me_expr_-&gt;getMemberDecl()</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getType()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.getBaseTypeIdentifier()</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getName().str();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=========<sp/>END<sp/>CALLER<sp/>ME<sp/>EXPR<sp/>========<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==&gt;<sp/>Extract<sp/>callee<sp/>port<sp/>name\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callee_port_me_expr_)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callee_port_me_expr_-&gt;dump();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callee_port_name_<sp/>=</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callee_port_me_expr_-&gt;getMemberNameInfo().getAsString();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>****<sp/>callee_port_name_:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>callee_port_name_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Callee<sp/>is<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>callee_array_expr_<sp/>=<sp/>dyn_cast&lt;clang::ArraySubscriptExpr&gt;(callee_expr);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callee_array_expr_)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>llvm::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;extract<sp/>callee<sp/>name\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callee_instance_me_expr_<sp/>=<sp/><ref refid="namespacesc__ast__matchers_1_1utils_1_1array__type_1affa9a73bdbbac2e524a3e6babc1cbfd3" kindref="member">getArrayMemberExprName</ref>(callee_array_expr_);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callee_array_subscripts_<sp/>=<sp/><ref refid="namespacesc__ast__matchers_1_1utils_1_1array__type_1aaceb5ab834462ecaf2da90c3b1da1794" kindref="member">getArraySubscripts</ref>(callee_array_expr_);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callee_instance_me_expr_<sp/>=<sp/>dyn_cast&lt;clang::MemberExpr&gt;(callee_expr);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callee_instance_me_expr_)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callee_instance_name_<sp/>=</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callee_instance_me_expr_-&gt;getMemberNameInfo().getAsString();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">};<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>systemc_clang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">};<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>systemc_clang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>ifdef</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/model/PortBinding.h"/>
  </compounddef>
</doxygen>
